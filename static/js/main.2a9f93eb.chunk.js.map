{"version":3,"sources":["themes/theme.js","reducer/reducer.js","utilities/tokenMethods.js","services/httpService.js","services/habitService.js","utilities/utilitiesMethods.js","Store/habitStore.js","components/HabitCard/useStyles.js","components/HabitCard/HabitCard.jsx","components/DailyHabitCard/useStyles.js","utilities/calculateStreak.js","components/DailyHabitCard/DailyHabitCard.jsx","components/RenderHabits.jsx","pages/index.jsx","pages/addHabit.jsx","components/CreateHabitForm/useStyles.js","components/modal.jsx","components/FormComponents/InputLabel/InputLabel.jsx","components/FormComponents/BackButton/BackButton.jsx","components/FormComponents/NumberCounter/useStyles.js","reducer/habitFormReducer.js","Store/habitFormContext.js","components/FormComponents/NumberCounter/NumberCounter.jsx","components/CreateHabitForm/form.jsx","services/authServices.js","components/auth/signUpForm.jsx","components/auth/signInForm.jsx","components/BottomNav/useStyles.js","components/BottomNav/BottomNav.jsx","components/navBar.jsx","components/auth/signOut.jsx","components/auth/protectedRoutes.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","type","primary","main","secondary","argumentColor","red","green","blue","purple","yellow","shape","borderRadius","overrides","MuiPickersBasePicker","container","padding","pickerView","minWidth","MuiPaper","root","backgroundColor","MuiPickersCalendarHeader","switchHeader","color","dayLabel","margin","MuiPickersDay","day","daySelected","Reducer","state","action","payload","habits","category","habitsNameList","habitRestructure","error","habitStatus","Object","assign","currentDate","weekStartDate","weekEndDate","token","userInfo","isAuthenticated","isLoading","currentWeekDates","habitView","tokenService","tokenKey","config","localStorage","setItem","getItem","removeItem","this","getToken","decodeJwt","axios","interceptors","response","use","status","console","log","Promise","reject","request","TokenService","headers","Authorization","get","post","put","delete","data","a","http","apiUrl","saveHabit","getHabits","updateHabitStatus","updateIsTracked","fetchHabitData","habitService","extractHabitNames","habitObject","map","habit","habitName","extractCategoriesAndRestructureHabits","categories","h","hasOwnProperty","push","resolve","getTodayDate","date","Date","getWeekStartDate","startOfWeek","getWeekEndDate","endOfWeek","processHabitStatus","isHabitComplete","forEach","habitTrack","i","dateCounter","addDays","formatDate","format","filter","d","length","isFullyComplete","isPartialComplete","done","percentageDone","calculateHabitDonePercentage","dailyGoal","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","display","alignItems","justifyContent","marginTop","titleText","habitContainer","maxWidth","minHeight","textGrey","habitTitleBox","width","grey","border","borderColor","white","black","selectedDate","unSelectedDate","pink","backgroundYellow","datesBox","height","textAlign","lineHeight","HabitCard","classes","useContext","dateColor","dateClasses","index","selected","background","cursor","boxShadow","unSelected","handleClick","e","target","id","split","updateStatus","SelectedDate","dateC","onClick","className","UnSelectedDate","Container","Grid","direction","xs","sm","md","elevation","component","Paper","item","Typography","align","variant","textStreak","doneText","paddingLeft","calculateCurrentStreak","currentStreak","startDate","endDate","sortedDates","sortByDates","isLatestDateIsYesterday","isYesterday","parse","isLatestDateIsToday","isToday","reduce","streak","trackData","previousDate","isComplete","preDate","currDate","differenceInDays","tempStartDate","count","Math","max","option","sort","b","DailyHabitCard","todayDayIndex","getDay","useState","longestStreak","setStreak","useEffect","borderStyle","borderWidth","clickedHabitStatus","dailyGoalOfCurrentHabit","updatedTrackObj","_id","updatedStatusObj","newStatus","HabitService","alert","flexGrow","noHabit","paper","table","RenderHabits","isHabitEmpty","setIsHabitEmpty","JSON","stringify","formatDates","eachDayOfInterval","start","end","fetchCurrentWeekDates","Home","isNextDisable","habitObj","habitNameList","todayDate","hydrateStoreState","setHabitView","viewType","Fragment","title","justify","Button","style","disabled","activeButton","disabledButton","CircularProgress","marginBottom","checkbox","spinIt","AddHabit","bullet","transform","form","flexDirection","pos","submitButton","directionRow","buttonMargin","colorWrapper","colorBox","activeColor","colorCircle","boxSizing","lightblue","orange","modalRoot","document","getElementById","Modal","elRef","useRef","current","createElement","appendChild","removeChild","createPortal","label","FormInputLabel","InputLabel","backIcon","position","left","top","icon","fill","BackButton","history","useHistory","goBack","countText","HabitFormReducer","weeklyGoal","habitUnit","inputType","weeklyInputType","habitUnitType","FormContext","HabitFormContext","NumberCounter","habitForm","isNegCountDisabled","setCountDisabled","isPosCountDisabled","setPosCount","handleCounter","isCountZero","isCountValid","Fab","size","MyTextField","placeholder","onChange","props","func","useField","field","meta","errorText","touched","TextField","helperText","validationSchema","yup","required","trim","min","nullable","types","habitData","colorCode","name","inputTypes","CreateHabitForm","isSubmitting","setSubmitting","msg","setMsg","habitSaved","setHabitSaved","activeCategoryIndex","setCategoryIndex","activeColorIndex","setColorIndex","weeklyGoalInputType","setWeeklyGoalInputType","unityType","setUnitType","trackType","setTrackType","setHabitText","showModal","setModal","handleWeeklyInput","handleUnitInput","toggleModal","initialValues","onSubmit","res","enableReinitialize","event","handleCategoryClick","handleColorClick","handleTrackInput","Card","raised","CardContent","signOut","removeToken","signUp","signIn","firstName","lastName","email","password","termsOfServices","oneOf","MyCheckBox","FormControlLabel","labelPlacement","control","Checkbox","input","singUpWrapper","link","textDecoration","textInput","SignUpForm","AuthService","setToken","userInfoObj","getUserInfo","responseError","CardHeader","to","SignInForm","setError","topProfileButton","right","bottomAddButton","bottom","bottomSummaryButton","bottomContainer","zIndex","bottomGrid","addIcon","marginRight","BottomNav","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","activeStyle","aria-label","menuItem","optionText","marginLeft","NavBar","anchorEl","setAnchorEl","handleClose","currentTarget","Menu","keepMounted","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","SignOut","timeOut","setTimeout","clearTimeout","ProtectedRoutes","path","Component","render","rest","pathname","location","App","basename","exact","Form","SignUp","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.2a9f93eb.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\",\"Open Sans\", \"sans-serif\", ',\n    fontSize: 12,\n    button: {\n      textTransform: \"none\",\n      fontWeight: 700,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#303038\" },\n    argumentColor: {\n      red: { main: \"#FF6B7A\" },\n      green: { main: \"#50D890\" },\n      blue: { main: \"#4EB1CB\" },\n      purple: { main: \"#5666F3\" },\n      yellow: { main: \"#FFB427\" },\n    },\n  },\n  shape: {\n    borderRadius: 5,\n  },\n  overrides: {\n    MuiPickersBasePicker: {\n      container: {\n        padding: \"15px\",\n      },\n      pickerView: {\n        minWidth: \"30rem\",\n      },\n    },\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#303038\",\n      },\n    },\n    MuiPickersCalendarHeader: {\n      switchHeader: {\n        color: \"#ff5630\",\n      },\n      dayLabel: {\n        margin: \"0px 15px\",\n      },\n    },\n    MuiPickersDay: {\n      day: {\n        margin: \"0px 15px\",\n      },\n      daySelected: {\n        color: \"#fff\",\n        backgroundColor: \"#ff5630\",\n      },\n    },\n  },\n});\n","const Reducer = (state, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case \"SET_HABIT\":\n            return {\n                ...state,\n                habits: payload,\n            };\n        case \"SET_CATEGORY\":\n            return {\n                ...state,\n                category: payload,\n            };\n        case \"SET_HABIT_NAME_LIST\":\n            return {\n                ...state,\n                habitsNameList: payload,\n            };\n        case \"SET_HABIT_RESTRUCTURE\":\n            return {\n                ...state,\n                habitRestructure: payload,\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: [...state.error, payload],\n            };\n        case \"SET_HABIT_STATUS\":\n            return {\n                ...state,\n                habitStatus: Object.assign({}, state.habitStatus, payload),\n            };\n        case \"SET_CURRENT_DATE\":\n            return {\n                ...state,\n                currentDate: payload,\n            };\n        case \"SET_WEEK_START_DATE\":\n            return {\n                ...state,\n                weekStartDate: payload,\n            };\n        case \"SET_WEEK_END_DATE\":\n            return {\n                ...state,\n                weekEndDate: payload,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: payload,\n            };\n        case \"SET_USER_INFO\":\n            return {\n                ...state,\n                userInfo: payload,\n            };\n        case \"SET_IS_AUTHENTICATED\":\n            return {\n                ...state,\n                isAuthenticated: payload,\n            };\n        case \"SET_IS_LOADING\":\n            return {\n                ...state,\n                isLoading: payload,\n            };\n        case \"SET_CURRENT_WEEK_DATES\":\n            return {\n                ...state,\n                currentWeekDates: payload,\n            };\n        case \"SET_HABIT_VIEW\":\n            return {\n                ...state,\n                habitView: payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;\n","import config from \"../config.json\";\nimport decodeJwt from \"jwt-decode\";\nconst tokenService = {};\n\ntokenService.setToken = function setTokenToLocalStorage(token) {\n  let tokenKey = config.tokenKey;\n  localStorage.setItem(tokenKey, token);\n};\n\ntokenService.getToken = function getTokenFromLocalStorage(tokenKey) {\n  return localStorage.getItem(tokenKey);\n};\n\ntokenService.removeToken = function removeTokenFromLocalStorage(tokenKey) {\n  localStorage.removeItem(tokenKey);\n};\n\ntokenService.getUserInfo = function decodeUserInfoFromToken(tokenKey) {\n  const token = this.getToken(tokenKey);\n  const userInfoObj = decodeJwt(token);\n\n  return userInfoObj;\n};\n\nexport default tokenService;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport { tokenKey, apiUrl } from \"../config.json\";\nimport TokenService from \"../utilities/tokenMethods\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"An unexpected error occurred , logging the error\", error);\n  }\n  return Promise.reject(error);\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getToken(tokenKey);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      config.headers.Authorization = null;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function saveHabit(data) {\n  return await http.post(apiUrl + \"saveHabit\", data);\n}\nexport async function getHabits() {\n  return await http.get(apiUrl + \"getHabits\");\n}\n\nexport async function updateHabitStatus(data) {\n  return await http.post(apiUrl + \"updateHabit\", data);\n}\n\nexport async function updateIsTracked(data) {\n  return await http.post(apiUrl + \"updateIsTracked\", data);\n}\n\nexport default {\n  saveHabit,\n  getHabits,\n  updateHabitStatus,\n  updateIsTracked,\n};\n","/**\n *  Utilities methods\n */\n\n//Dependencies\nimport { startOfWeek, endOfWeek, addDays, format } from \"date-fns\";\nimport habitService from \"../services/habitService\";\n\n// fetch data from habit server\nexport async function fetchHabitData() {\n  let response = await habitService.getHabits();\n  return response.data;\n}\n\n/**\n *\n * @param {*} habitObject\n * @returns habitsNameList\n */\nexport function extractHabitNames(habitObject) {\n  return habitObject.map((habit) => {\n    return habit.habitName;\n  }, []);\n}\n\n/**\n *\n * @param {*} habits\n * @returns habit restructured object and categories array\n */\nexport function extractCategoriesAndRestructureHabits(habits) {\n  let habitRestructure = {};\n  let categories = [];\n  // if category is present in object\n  if (habits && typeof habits === \"object\") {\n    for (let h of habits) {\n      if (!habitRestructure.hasOwnProperty(h.category)) {\n        categories.push(h.category);\n        habitRestructure[h.category] = [];\n        habitRestructure[h.category].push(h);\n      } else {\n        habitRestructure[h.category].push(h);\n      }\n    }\n  }\n  return Promise.resolve([habitRestructure, categories]);\n}\n\nexport function getTodayDate() {\n  const date = new Date();\n  console.log(date);\n  return Promise.resolve(date);\n}\n\n// get start of week from date fns\nexport function getWeekStartDate(date = new Date()) {\n  console.log(date);\n  let weekStartDate = startOfWeek(date);\n  console.log(weekStartDate);\n  return weekStartDate;\n}\n\n// get end of week from date fns\nexport function getWeekEndDate(date = new Date()) {\n  let weekEndDate = endOfWeek(date);\n\n  return weekEndDate;\n}\n\n/**\n *\n * @param {Array} habits\n * @param {Date} weekStartDate\n * @returns\n */\nexport function processHabitStatus(habits, weekStartDate) {\n  const FIRST_WEEKDAY_INDEX = 0;\n  const LAST_WEEKDAY_INDEX = 6;\n\n  console.log(habits, weekStartDate);\n\n  const isHabitComplete = {};\n\n  habits.forEach((habit) => {\n    console.log(habit.habitTrack);\n    const habitName = habit.habitName;\n    isHabitComplete[habitName] = [];\n\n    for (let i = FIRST_WEEKDAY_INDEX; i <= LAST_WEEKDAY_INDEX; i++) {\n      let dateCounter = addDays(weekStartDate, i);\n      let formatDate = format(dateCounter, \"ddMMyyyy\");\n      let status = habit.habitTrack.filter((d) => d.date === formatDate);\n      console.log(status);\n      if (status.length > 0) {\n        isHabitComplete[habitName][i] = {\n          isFullyComplete: status[0].isFullyComplete,\n          isPartialComplete: status[0].isPartialComplete,\n          done: status[0].done,\n          percentageDone: calculateHabitDonePercentage(\n            status[0].done,\n            habit.dailyGoal\n          ),\n        };\n      } else {\n        isHabitComplete[habitName][i] = {\n          isFullyComplete: false,\n          isPartialComplete: false,\n          done: 0,\n          percentageDone: 0,\n        };\n      }\n    }\n  });\n\n  return Promise.resolve(isHabitComplete);\n}\n\nexport function calculateHabitDonePercentage(done, dailyGoal) {\n  return 100 * (done / dailyGoal);\n}\n\nexport function isFullyComplete(habit) {\n  if (habit.dailyGoal === 1) return true;\n}\n\nexport function isPartialComplete(habit) {\n  if (habit.dailyGoal === 1) return true;\n}\n","import { createContext, useReducer } from \"react\";\nimport Reducer from \"../reducer/reducer\";\nimport {\n  getWeekStartDate,\n  getWeekEndDate,\n} from \"../utilities/utilitiesMethods\";\n\nconst initialState = {\n  habits: [],\n  category: [],\n  habitsNameList: [],\n  habitRestructure: {},\n  habitStatus: [],\n  error: [],\n  currentDate: new Date(),\n  weekStartDate: getWeekStartDate() || new Date(),\n  weekEndDate: getWeekEndDate() || new Date(),\n  token: \"\",\n  isAuthenticated: false,\n  userInfo: {},\n  isLoading: true,\n  habitView: \"daily\",\n  currentWeekDates: [],\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"7rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    color: \"white\",\n  },\n  grey: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#6c6c72\",\n    borderColor: \"#6c6c72\",\n  },\n  white: {\n    backgroundColor: \"#ffffff\",\n  },\n  black: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#000000\",\n    borderColor: \"#000000\",\n  },\n  yellow: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  selectedDate: {},\n  unSelectedDate: {},\n  blue: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#5666F3\",\n    borderColor: \"#5666F3\",\n  },\n  green: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#50D890\",\n    borderColor: \"#50D890\",\n  },\n  pink: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    borderColor: \"#D96383\",\n    backgroundColor: \"#D96383\",\n  },\n  backgroundYellow: {\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n}));\n\nexport default useStyles;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction HabitCard(habits) {\n  const classes = useStyles();\n  const habit = habits.habit;\n  const [state, dispatch] = useContext(Context);\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const colors = {\n    yellow: \"#FFB427\",\n    lightblue: \"#4EB1CB\",\n    green: \"#50D890\",\n    black: \"#000000\",\n    red: \"#FF6B7A\",\n    purple: \"#5666F3\",\n    blue: \"#3a8dff\",\n    orange: \"#FF8C00\",\n  };\n  const dateColor = {\n    color: habit.color,\n  };\n\n  const dateClasses = (dateColor, index) =>\n    makeStyles(() => ({\n      selected: {\n        marginTop: \"0.2rem\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        //backgroundColor: dateColor.color,\n        background: `linear-gradient(to right, ${dateColor.color} 0%,  ${\n          dateColor.color\n        }  ${\n          state.habitStatus[habit.habitName][index].percentageDone\n        }%, rgba(0,0,0,0) ${\n          state.habitStatus[habit.habitName][index].percentageDone\n        }%,rgba(0,0,0,0) 100%)`,\n        borderColor: dateColor.color,\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 4px 0px #000000ab\",\n      },\n      unSelected: {\n        marginTop: \"0.2rem\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n        color: dateColor.color,\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        borderColor: dateColor.color,\n        cursor: \"pointer\",\n      },\n    }));\n\n  function handleClick(e) {\n    const id = e.target.id;\n    const [habitName, index] = id.split(\",\");\n    let updateStatus = state.habitStatus;\n    updateStatus[habitName][index] = !updateStatus[habitName][index];\n    dispatch({ type: \"SET_HABIT_STATUS\", payload: updateStatus });\n    //update database\n  }\n\n  function SelectedDate(index) {\n    const dateC = dateClasses(dateColor, index)();\n    return (\n      <div\n        id={`${habit.habitName},${index}`}\n        onClick={(e) => handleClick(e)}\n        className={dateC.selected}\n      >\n        {state.currentWeekDates[index]}\n      </div>\n    );\n  }\n\n  function UnSelectedDate(index) {\n    const dateC = dateClasses(dateColor, index)();\n    return (\n      <div\n        id={`${habit.habitName},${index}`}\n        onClick={(e) => handleClick(e)}\n        className={dateC.unSelected}\n      >\n        {state.currentWeekDates[index]}\n      </div>\n    );\n  }\n  return (\n    <Container className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        xs={12}\n        sm={12}\n        md={12}\n        elevation={6}\n        className={classes.habitContainer}\n        component={Paper}\n      >\n        <Grid item container className={classes.habitTitleBox}>\n          <Grid item xs={6}>\n            <Typography align=\"left\" variant=\"h5\">\n              {habit.habitName}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography\n              align=\"right\"\n              className={classes.textGrey}\n              variant=\"subtitle1\"\n            >\n              6 times a week\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container direction=\"row\">\n          {weekDays.map((day, index) => {\n            return (\n              <Fragment key={index}>\n                <Grid item className={classes.titleText}>\n                  <Typography\n                    align=\"center\"\n                    variant=\"h6\"\n                    className={classes.textGrey}\n                  >{`${day}`}</Typography>\n                  {state.habitStatus[habit.habitName][index]\n                    ? SelectedDate(index)\n                    : UnSelectedDate(index)}\n                </Grid>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default HabitCard;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"4rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textStreak: {\n    color: \"#FFFFFF\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n  doneText: {\n    paddingLeft: \"0.6rem\",\n    color: \"#6c6c72\",\n  },\n}));\n\nexport default useStyles;\n","import { parse, differenceInDays, isYesterday, isToday } from \"date-fns\";\n\nconst testData = [\n  { date: \"11112021\", isComplete: true },\n  { date: \"10112021\", isComplete: true },\n  { date: \"08112021\", isComplete: true },\n  { date: \"12102021\", isComplete: true },\n  { date: \"11102021\", isComplete: true },\n  { date: \"09102021\", isComplete: true },\n  { date: \"06102021\", isComplete: true },\n];\n\n/**\n *\n * @param {Array} habitTrack\n * @returns Object with streak data\n */\nfunction calculateLongestStreak(habitTrack) {\n  const sortedDates = sortByDates(habitTrack, \"asc\");\n  let result = sortedDates.reduce(\n    (streak, habit) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = habit.date;\n      } else {\n        if (habit.isComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(habit.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(currDate, preDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n\n            streak.count = streak.count + 1;\n            streak.longestStreak = Math.max(streak.count, streak.longestStreak);\n            if (streak.count >= streak.longestStreak) {\n              streak.startDate = streak.tempStartDate;\n              streak.endDate = currDate;\n            }\n          } else {\n            if (streak.count >= streak.longestStreak) {\n              streak.endDate = preDate;\n            }\n            streak.tempStartDate = null;\n\n            streak.count = 1;\n          }\n\n          streak.previousDate = habit.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      longestStreak: 0,\n      previousDate: null,\n      tempStartDate: null,\n      tempEndDate: null,\n      startDate: null,\n      endDate: null,\n    }\n  );\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @description\n * This function will  calculate the current streak of a habit\n * First sort the habit tracker date in descending order\n * check if the latest date of habit tracked data is yesterday || today\n * run reducer to calculate the count of the continues streak\n * @returns Object with streak data\n */\nfunction calculateCurrentStreak(habitTrack) {\n  if (habitTrack.length) {\n    const sortedDates = sortByDates(habitTrack, \"desc\");\n    const isLatestDateIsYesterday = isYesterday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n    const isLatestDateIsToday = isToday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n\n    if (isLatestDateIsYesterday || isLatestDateIsToday) {\n      return calculateRecentContinuousStreak(sortedDates);\n    }\n\n    if (!isLatestDateIsToday && !isLatestDateIsYesterday) {\n      return {\n        currentStreak: 0,\n        startDate: null,\n        endDate: null,\n      };\n    }\n  } else {\n    return {\n      currentStreak: 0,\n      startDate: null,\n      endDate: null,\n    };\n  }\n}\n\n/**\n *\n * @param {Array} trackData\n * @returns\n */\nfunction calculateRecentContinuousStreak(trackData) {\n  const result = trackData.reduce(\n    (streak, trackData) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = trackData.date;\n      } else {\n        if (trackData.isComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(trackData.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(preDate, currDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n            streak.count += 1;\n            streak.currentStreak = Math.max(streak.count, streak.currentStreak);\n            streak.startDate = currDate;\n            streak.endDate = streak.tempStartDate;\n          } else {\n            return streak;\n          }\n          streak.previousDate = trackData.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      tempStartDate: null,\n      previousDate: null,\n      currentStreak: 1,\n      startDate: null,\n      endDate: null,\n    }\n  );\n\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @param {String} option  \"asc\" || \"desc\"\n * @returns Sorted Array by dates\n */\nfunction sortByDates(habitTrack, option) {\n  if (option === \"asc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(a.date, \"ddMMyyyy\", new Date()) -\n        parse(b.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n  if (option === \"desc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(b.date, \"ddMMyyyy\", new Date()) -\n        parse(a.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n}\n\nexport {\n  calculateLongestStreak,\n  calculateCurrentStreak,\n  calculateRecentContinuousStreak,\n  sortByDates,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getDay, format } from \"date-fns\";\nimport { calculateCurrentStreak } from \"../../utilities/calculateStreak\";\nimport HabitService from \"../../services/habitService\";\nimport { calculateHabitDonePercentage } from \"../../utilities/utilitiesMethods\";\n\nfunction DailyHabitCard({ habit }) {\n  const classes = useStyles();\n  //const habit = habits.habit;\n  const [state, dispatch] = useContext(Context);\n  const todayDayIndex = getDay(new Date());\n  const [streak, setStreak] = useState({\n    currentStreak: 0,\n    longestStreak: 0,\n    previousDate: null,\n  });\n  const colors = {\n    yellow: \"#FFB427\",\n    lightblue: \"#4EB1CB\",\n    green: \"#50D890\",\n    black: \"#000000\",\n    red: \"#FF6B7A\",\n    purple: \"#5666F3\",\n    blue: \"#3a8dff\",\n    orange: \"#FF8C00\",\n  };\n  const dateColor = {\n    color: habit.color,\n  };\n  useEffect(() => {\n    if (state.habits) {\n      setStreak(calculateCurrentStreak(habit.habitTrack));\n    }\n  }, [habit.habitTrack, state.habits]);\n\n  console.log(state);\n\n  const dateClasses = (dateColor) =>\n    makeStyles(() => ({\n      selected: {\n        alignItems: \"center\",\n        minWidth: \"20rem\",\n        maxWidth: \"50rem\",\n        minHeight: \"4rem\",\n        margin: \"auto\",\n        // backgroundColor: \"#303038\",\n        borderRadius: \"10px\",\n        padding: \"0.5rem\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        //backgroundColor: dateColor.color,\n        background: `linear-gradient(to right, ${dateColor.color} 0%,  ${\n          dateColor.color\n        }  ${\n          state.habitStatus[habit.habitName][todayDayIndex].percentageDone\n        }%, rgba(0,0,0,0) ${\n          state.habitStatus[habit.habitName][todayDayIndex].percentageDone\n        }%,rgba(0,0,0,0) 100%)`,\n        borderColor: dateColor.color,\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 10px 0px #000000ab\",\n      },\n      unSelected: {\n        alignItems: \"center\",\n        minWidth: \"20rem\",\n        maxWidth: \"50rem\",\n        minHeight: \"4rem\",\n        margin: \"auto\",\n        backgroundColor: \"#303038\",\n        borderRadius: \"10px\",\n        borderColor: dateColor.color,\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        padding: \"0.5rem\",\n        cursor: \"pointer\",\n      },\n    }));\n\n  const dateC = dateClasses(dateColor)();\n\n  function handleClick(habitName, index) {\n    const clickedHabitStatus = state.habitStatus[habitName][index];\n    console.log(\"clicked habit status\", clickedHabitStatus);\n    if (clickedHabitStatus.done !== habit.dailyGoal) {\n      const dailyGoalOfCurrentHabit = habit.dailyGoal;\n      const updatedTrackObj = {\n        id: habit._id,\n        date: format(state.currentDate, \"ddMMyyyy\"),\n        day: format(state.currentDate, \"EEE\"),\n        data: \"\",\n      };\n\n      const updatedStatusObj = {};\n\n      if (dailyGoalOfCurrentHabit === clickedHabitStatus.done + 1) {\n        updatedTrackObj.isFullyComplete =\n          updatedStatusObj.isFullyComplete = true;\n        updatedTrackObj.isPartialComplete =\n          updatedStatusObj.isPartialComplete = true;\n        updatedTrackObj.done = updatedStatusObj.done =\n          clickedHabitStatus.done + 1;\n        updatedStatusObj.percentageDone = calculateHabitDonePercentage(\n          clickedHabitStatus.done + 1,\n          dailyGoalOfCurrentHabit\n        );\n      } else {\n        updatedTrackObj.isFullyComplete =\n          updatedStatusObj.isFullyComplete = false;\n        updatedTrackObj.isPartialComplete = true;\n        updatedTrackObj.isPartialComplete =\n          updatedStatusObj.isPartialComplete = true;\n        updatedTrackObj.done = updatedStatusObj.done =\n          clickedHabitStatus.done + 1;\n        updatedStatusObj.percentageDone = calculateHabitDonePercentage(\n          clickedHabitStatus.done + 1,\n          dailyGoalOfCurrentHabit\n        );\n      }\n\n      const newStatus = state.habitStatus;\n      newStatus[habitName][index] = updatedStatusObj;\n      dispatch({ type: \"SET_HABIT_STATUS\", payload: newStatus });\n      console.log(updatedTrackObj, updatedStatusObj);\n      console.log(state.habitStatus);\n\n      updateStatus(updatedTrackObj);\n    }\n  }\n  const updateStatus = async (data) => {\n    let response = await HabitService.updateHabitStatus(data);\n\n    if (response.status === 200) {\n      alert(\"Habit Status updated\");\n    }\n  };\n\n  function SelectedDate(index) {\n    return (\n      <Container\n        className={classes.root}\n        onClick={() => handleClick(habit.habitName, index)}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          xs={12}\n          sm={12}\n          md={12}\n          elevation={6}\n          className={dateC.selected}\n          component={Paper}\n          item\n        >\n          <Grid item container className={classes.habitTitleBox}>\n            <Grid item xs={6}>\n              <Typography align=\"left\" variant=\"h5\">\n                {habit.habitName}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography\n                align=\"right\"\n                className={classes.textStreak}\n                variant=\"h5\"\n              >\n                {streak.currentStreak} 🔥\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid item container direction=\"row\">\n            <Typography\n              align=\"left\"\n              variant=\"subtitle2\"\n              className={classes.doneText}\n            >\n              {`DONE ${state.habitStatus[habit.habitName][index].done} / ${\n                habit.dailyGoal\n              } `}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  function UnSelectedDate(index) {\n    return (\n      <Container\n        className={classes.root}\n        onClick={() => handleClick(habit.habitName, index)}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          xs={12}\n          sm={12}\n          md={12}\n          elevation={6}\n          className={dateC.unSelected}\n          component={Paper}\n        >\n          <Grid item container className={classes.habitTitleBox}>\n            <Grid item xs={6}>\n              <Typography align=\"left\" variant=\"h5\">\n                {habit.habitName}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography\n                align=\"right\"\n                className={classes.textStreak}\n                variant=\"h5\"\n              >\n                {streak.currentStreak} 🔥\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid item container direction=\"row\">\n            <Typography\n              align=\"left\"\n              variant=\"subtitle2\"\n              className={classes.doneText}\n            >\n              DONE: 0 / 2\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n  return state.habitStatus[habit.habitName][todayDayIndex]\n    ? SelectedDate(todayDayIndex)\n    : UnSelectedDate(todayDayIndex);\n}\n\nexport default DailyHabitCard;\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport { format, eachDayOfInterval } from \"date-fns\";\nimport { Context } from \"../Store/habitStore\";\nimport HabitCard from \"./HabitCard/HabitCard\";\nimport DailyHabitCard from \"./DailyHabitCard/DailyHabitCard\";\n\nconst RenderHabits = () => {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isHabitEmpty, setIsHabitEmpty] = useState(false);\n\n  useEffect(() => {\n    if (JSON.stringify(state.habitRestructure) === \"{}\") {\n      setIsHabitEmpty(true);\n    }\n  }, [state.habitRestructure]);\n\n  useEffect(() => {\n    const fetchCurrentWeekDates = () => {\n      const result = eachDayOfInterval({\n        start: state.weekStartDate,\n        end: state.weekEndDate,\n      });\n\n      const formatDates = result.map((date) => {\n        let intDate = format(date, \"dd\");\n        return intDate;\n      });\n\n      dispatch({ type: \"SET_CURRENT_WEEK_DATES\", payload: formatDates });\n    };\n\n    fetchCurrentWeekDates();\n  }, [state.weekStartDate, state.weekEndDate, dispatch]);\n\n  return (\n    <div className={classes.root}>\n      {state.habitRestructure && !isHabitEmpty ? (\n        <>\n          {state.habits ? (\n            state.habits.map((habit, index) => {\n              return (\n                <Fragment key={habit.habitName}>\n                  {state.habitView === \"daily\" ? (\n                    <DailyHabitCard habit={habit} />\n                  ) : (\n                    <HabitCard habit={habit} />\n                  )}\n                </Fragment>\n              );\n            })\n          ) : (\n            <div>ss</div>\n          )}\n        </>\n      ) : (\n        <Typography align=\"center\" className={classes.noHabit} color=\"primary\">\n          {`No habits to display. `}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  noHabit: {\n    marginTop: \"5rem\",\n  },\n  paper: {\n    padding: \"5px\",\n    textAlign: \"center\",\n    color: \"black\",\n  },\n  table: {\n    minWidth: 350,\n  },\n}));\nexport default RenderHabits;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { addDays, format, subDays } from \"date-fns\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport {\n  fetchHabitData,\n  extractCategoriesAndRestructureHabits,\n  getTodayDate,\n  getWeekStartDate,\n  getWeekEndDate,\n  extractHabitNames,\n  processHabitStatus,\n} from \"../utilities/utilitiesMethods\";\n\nexport default function Home() {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isNextDisable, setNextDisable] = useState(false);\n\n  useEffect(() => {\n    async function hydrateStoreState() {\n      dispatch({ type: \"SET_IS_LOADING\", payload: true });\n      const habitObj = await fetchHabitData();\n\n      dispatch({ type: \"SET_HABIT\", payload: habitObj });\n      const [habitRestructure, categories] =\n        await extractCategoriesAndRestructureHabits(habitObj);\n\n      dispatch({ type: \"SET_HABIT_RESTRUCTURE\", payload: habitRestructure });\n      dispatch({ type: \"SET_CATEGORY\", payload: categories });\n\n      const habitNameList = extractHabitNames(habitObj);\n      dispatch({ type: \"SET_HABIT_NAME_LIST\", payload: habitNameList });\n\n      const todayDate = await getTodayDate();\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: todayDate });\n\n      const weekStartDate = await getWeekStartDate(new Date());\n      const weekEndDate = await getWeekEndDate(new Date());\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: weekStartDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: weekEndDate });\n\n      const habitStatus = await processHabitStatus(habitObj, weekStartDate);\n      dispatch({ type: \"SET_HABIT_STATUS\", payload: habitStatus });\n\n      dispatch({ type: \"SET_IS_LOADING\", payload: false });\n    }\n\n    hydrateStoreState();\n  }, [dispatch]);\n\n  // this fetch function is need to extracted and need to be reused\n\n  const changeDate = async (method, n) => {\n    // change the current date to prev or next date\n    if (method === \"add\") {\n      let changedDate = addDays(state.currentDate, n);\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n      const newStartWeekDate = await getWeekStartDate(changedDate);\n      const newEndWeekDate = await getWeekEndDate(changedDate);\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n    }\n    if (method === \"sub\") {\n      let changedDate = subDays(state.currentDate, n);\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n      const newStartWeekDate = await getWeekStartDate(changedDate);\n      const newEndWeekDate = await getWeekEndDate(changedDate);\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n    }\n  };\n\n  function setHabitView(viewType) {\n    dispatch({ type: \"SET_HABIT_VIEW\", payload: viewType });\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h3\"\n            align=\"center\"\n            color=\"textSecondary\"\n            className={classes.title}\n          >\n            HABITS\n          </Typography>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button\n                style={{ margin: \"5px\" }}\n                disabled={isNextDisable}\n                className={\n                  state.habitView === \"daily\"\n                    ? classes.activeButton\n                    : classes.disabledButton\n                }\n                onClick={() => setHabitView(\"daily\")}\n              >\n                Daily\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                style={{ margin: \"5px\" }}\n                disabled={isNextDisable}\n                className={\n                  state.habitView === \"weekly\"\n                    ? classes.activeButton\n                    : classes.disabledButton\n                }\n                onClick={() => setHabitView(\"weekly\")}\n              >\n                Weekly\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            {state.isLoading ? (\n              <div style={{ fontSize: \"4vw\" }}>\n                <CircularProgress style={{ color: \"white\" }} />\n              </div>\n            ) : (\n              <RenderHabits />\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  root: {\n    marginBottom: \"8rem\",\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  title: {\n    fontWeight: \"bold\",\n    marginTop: \"4rem\",\n    marginBottom: \"4rem\",\n  },\n\n  activeButton: {\n    background: \"rgba(196, 196, 196, 0.19)\",\n    color: \"#FFFFFF\",\n  },\n  disabledButton: {\n    background: \"rgba(196, 196, 196, 0.04)\",\n    color: \"#8F8E8E\",\n  },\n\n  spinIt: {\n    width: 10,\n    height: 10,\n  },\n});\n","import React from \"react\";\nimport RenderHabits from \"../components/RenderHabits\";\n\nexport default function AddHabit() {\n  return (\n    <div>\n      <RenderHabits />\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"left\",\n        maxWidth: \"25rem\",\n        margin: \"auto\",\n    },\n    title: {\n        fontWeight: \"bold\",\n        marginTop: \"1.5rem\",\n        marginBottom: \"2rem\",\n    },\n    pos: {\n        marginBottom: \"1.5rem\",\n    },\n    submitButton: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: \"4rem\",\n    },\n    directionRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    buttonMargin: {\n        margin: \"0 1rem 0.5rem 0\",\n    },\n    activeButton: {\n        background: \"rgba(196, 196, 196, 0.19)\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(196, 196, 196, 0.19)\",\n        },\n    },\n    disabledButton: {\n        background: \"rgba(196, 196, 196, 0.04)\",\n        color: \"#8F8E8E\",\n    },\n    colorWrapper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    colorBox: {\n        margin: \"0.5rem\",\n    },\n    activeColor: {\n        border: \"2px solid white\",\n    },\n    colorCircle: {\n        width: \"1.5rem\",\n        height: \"1.5rem\",\n        borderRadius: \"4rem\",\n        boxSizing: \"border-box\",\n    },\n    yellow: { backgroundColor: \"#FFB427\" },\n    lightblue: { backgroundColor: \"#4EB1CB\" },\n    green: { backgroundColor: \"#50D890\" },\n    black: { backgroundColor: \"#000000\" },\n    red: { backgroundColor: \"#FF6B7A\" },\n    purple: { backgroundColor: \"#5666F3\" },\n    blue: { backgroundColor: \"#3a8dff\" },\n    orange: { backgroundColor: \"#FF8C00\" },\n}));\n\nexport default useStyles;\n","import { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nconst Modal = ({ children }) => {\n  const elRef = useRef(null);\n\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n  useEffect(() => {\n    modalRoot.appendChild(elRef.current);\n    return () => {\n      modalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import { InputLabel } from \"@material-ui/core\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { Fragment } from \"react\";\n\nfunction FormInputLabel({ label }) {\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <InputLabel>\n                <Typography variant=\"subtitle1\" className={classes.label}>\n                    {label}\n                </Typography>\n            </InputLabel>\n        </Fragment>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        fontWeight: \"bold\",\n        marginBottom: \"0.5rem\",\n    },\n}));\n\nexport default FormInputLabel;\n","import { Fragment } from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction BackButton() {\n  const classes = useStyles();\n  const history = useHistory();\n  function handleClick() {\n    history.goBack();\n  }\n  return (\n    <div className={classes.backIcon} onClick={handleClick}>\n      <ArrowBackIcon className={classes.icon} color=\"secondary\" />\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  backIcon: {\n    position: \"absolute\",\n    left: \"1rem\",\n    top: \"1.5rem\",\n    fontWeight: \"bold\",\n  },\n  icon: {\n    fill: \"#ffffff\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default BackButton;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    count: {\n        color: \"#FFFFFF\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    countText: {\n        margin: \"0rem 1rem\",\n        fontWeight: \"bold\",\n    },\n}));\n\nexport default useStyles;\n","import { initialState } from \"../Store/habitFormContext\";\n\nconst HabitFormReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_CATEGORY\":\n      return {\n        ...state,\n        category: payload,\n      };\n    case \"SET_HABIT_NAME\":\n      return {\n        ...state,\n        habitName: payload,\n      };\n    case \"SET_DAILY_GOAL\":\n      return {\n        ...state,\n        dailyGoal: payload,\n      };\n    case \"SET_WEEKLY_GOAL\":\n      return {\n        ...state,\n        weeklyGoal: payload,\n      };\n    case \"SET_COLOR\":\n      return {\n        ...state,\n        color: payload,\n      };\n    case \"SET_HABIT_UNIT\":\n      return {\n        ...state,\n        habitUnit: payload,\n      };\n    case \"SET_INPUT_TYPE\":\n      return {\n        ...state,\n        inputType: payload,\n      };\n    case \"SET_WEEKLY_INPUT_TYPE\":\n      return {\n        ...state,\n        weeklyInputType: payload,\n      };\n    case \"SET_HABIT_UNIT_TYPE\":\n      return {\n        ...state,\n        habitUnitType: payload,\n      };\n    case \"RESET_HABIT_FORM\":\n      return {\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default HabitFormReducer;\n","import { createContext, useReducer } from \"react\";\nimport HabitFormReducer from \"../reducer/habitFormReducer\";\n\nexport const initialState = {\n  category: \"General\",\n  habitName: \"\",\n  dailyGoal: 1,\n  habitUnit: null || \"\",\n  habitUnitType: null,\n  inputType: \"checkbox\",\n  color: \"#FFB427\",\n  weeklyGoal: 7,\n  weeklyInputType: \"daily\",\n};\n\nconst HabitFormContext = ({ children }) => {\n  const [state, dispatch] = useReducer(HabitFormReducer, initialState);\n  return (\n    <FormContext.Provider value={[state, dispatch]}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const FormContext = createContext(initialState);\nexport default HabitFormContext;\n","import AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Fab, TextField, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { FormContext } from \"../../../Store/habitFormContext\";\nimport { useContext, useState, useEffect } from \"react\";\n\nfunction NumberCounter({ type }) {\n    const [habitForm, dispatch] = useContext(FormContext);\n    const classes = useStyles();\n    const [isNegCountDisabled, setCountDisabled] = useState(false);\n    const [isPosCountDisabled, setPosCount] = useState(false);\n\n    useEffect(() => {\n        if (type === \"daily\") {\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n            setPosCount(isCountValid(habitForm.dailyGoal, 10));\n        }\n    }, [habitForm.dailyGoal, type]);\n\n    useEffect(() => {\n        if (type === \"weekly\") {\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n            setPosCount(isCountValid(habitForm.weeklyGoal, 7));\n        }\n    }, [habitForm.weeklyGoal, type]);\n\n    function handleCounter(action) {\n        if (type === \"daily\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n        }\n        if (type === \"weekly\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n        }\n    }\n\n    function isCountZero(value) {\n        if (value <= 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    function isCountValid(value, max) {\n        if (value >= max) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <div className={classes.count}>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"-\")}\n                disabled={isNegCountDisabled}\n            >\n                <RemoveIcon />\n            </Fab>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.countText}\n            >\n                {type === \"daily\" ? habitForm.dailyGoal : habitForm.weeklyGoal}\n            </Typography>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"+\")}\n                disabled={isPosCountDisabled}\n            >\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default NumberCounter;\n","import {\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Grid,\n  Container,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport * as yup from \"yup\";\nimport habitService from \"../../services/habitService\";\nimport Modal from \"../modal\";\nimport { useHistory } from \"react-router-dom\";\nimport FormInputLabel from \"../FormComponents/InputLabel/InputLabel\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport NumberCounter from \"../FormComponents/NumberCounter/NumberCounter\";\nimport { FormContext } from \"../../Store/habitFormContext\";\n\nconst CreateHabitForm = () => {\n  const [habitForm, dispatch] = useContext(FormContext);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const classes = useStyles();\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const [habitSaved, setHabitSaved] = useState(false);\n  const [activeCategoryIndex, setCategoryIndex] = useState(0);\n  const [activeColorIndex, setColorIndex] = useState(0);\n  const [weeklyGoalInputType, setWeeklyGoalInputType] = useState(\n    habitForm.weeklyInputType\n  );\n  const [unityType, setUnitType] = useState(habitForm.habitUnitType);\n  const [trackType, setTrackType] = useState(habitForm.inputType);\n  const [habitText, setHabitText] = useState(habitForm.habitName);\n\n  const [showModal, setModal] = useState(false);\n\n  useEffect(() => {\n    if (habitSaved && !showModal) {\n      history.push(\"/\");\n    }\n  }, [habitSaved, history, showModal]);\n\n  const handleCategoryClick = (index, value) => {\n    setCategoryIndex(index);\n    dispatch({ type: \"SET_CATEGORY\", payload: value });\n  };\n  const handleColorClick = (index, value) => {\n    setColorIndex(index);\n    dispatch({ type: \"SET_COLOR\", payload: value });\n  };\n\n  const handleWeeklyInput = (type) => {\n    setWeeklyGoalInputType(type);\n    dispatch({ type: \"SET_WEEKLY_INPUT_TYPE\", payload: type });\n    if (type === \"daily\") {\n      dispatch({ type: \"SET_WEEKLY_GOAL\", payload: 7 });\n    }\n  };\n\n  const handleUnitInput = (type) => {\n    setUnitType(type);\n    dispatch({ type: \"SET_HABIT_UNIT_TYPE\", payload: type });\n    if (type === \"custom\") {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: \"\" });\n    } else {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: null });\n    }\n  };\n  const handleTrackInput = (type) => {\n    setTrackType(type);\n    dispatch({ type: \"SET_INPUT_TYPE\", payload: type });\n  };\n  const handleHabitName = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_NAME\", payload: value });\n  };\n  const handleHabitUnit = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_UNIT\", payload: value });\n  };\n\n  const toggleModal = () => {\n    setModal(!showModal);\n    setHabitSaved(true);\n  };\n\n  return (\n    <Container>\n      <BackButton />\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        className={classes.title}\n      >\n        CREATE A NEW HABIT\n      </Typography>\n      <Formik\n        initialValues={habitForm}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            const res = await saveHabit(data);\n            if (res) {\n              setMsg(res.msg);\n              dispatch({\n                type: \"RESET_HABIT_FORM\",\n              });\n              setSubmitting(false);\n              toggleModal();\n            }\n          } catch (err) {\n            console.log(err);\n            if (err.response.status === 400) {\n              console.log(err.response);\n\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n        enableReinitialize\n      >\n        <Form className={classes.form}>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT NAME\" />\n            <MyTextField\n              name=\"habitName\"\n              type=\"text\"\n              placeholder=\"e.g. Cold Shower, Read Book\"\n              onChange={(event) => handleHabitName(event.target.value)}\n            />\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"CATEGORY\" />\n            {categories.map((category, index) => {\n              return (\n                <Button\n                  size=\"large\"\n                  key={category.label}\n                  className={\n                    activeCategoryIndex === index\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleCategoryClick(index, category.value)}\n                >\n                  {category.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HOW MANY TIMES PER DAY?\" />\n            <NumberCounter type=\"daily\" />\n          </Grid>\n          <Grid className={`${classes.pos}`}>\n            <FormInputLabel label=\"HOW MANY DAYS PER WEEK?\" />\n            <Grid className={`${classes.directionRow}`}>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"daily\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"daily\")}\n              >\n                DAILY\n              </Button>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"custom\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"custom\")}\n              >\n                CUSTOM\n              </Button>\n              {weeklyGoalInputType === \"custom\" ? (\n                <NumberCounter type=\"weekly\" />\n              ) : (\n                <></>\n              )}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <Grid item>\n              <FormInputLabel label=\"COLOR\" />\n            </Grid>\n            <Grid container xs={12} item>\n              {colorCode.map((color, index) => {\n                return (\n                  <Grid\n                    xs={2}\n                    className={classes.colorBox}\n                    key={color.color}\n                    item\n                  >\n                    <div\n                      key={color.color}\n                      className={\n                        activeColorIndex === index\n                          ? `${classes.activeColor} \n                                                ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                          : ` ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                      }\n                      onClick={() => handleColorClick(index, color.color)}\n                    ></div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT UNIT\" />\n            <Button\n              size=\"large\"\n              name=\"habitUnit\"\n              className={\n                unityType === null\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(null)}\n            >\n              NO UNIT\n            </Button>\n            <Button\n              size=\"large\"\n              className={\n                unityType === \"custom\"\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(\"custom\")}\n            >\n              CUSTOM\n            </Button>\n            {unityType === \"custom\" ? (\n              <MyTextField\n                name=\"habitUnit\"\n                type=\"text\"\n                onChange={(event) => handleHabitUnit(event.target.value)}\n                placeholder=\"e.g. Km, Pages, glasses\"\n              />\n            ) : (\n              <></>\n            )}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"TRACK INPUT TYPE\" />\n            {inputTypes.map((type) => {\n              return (\n                <Button\n                  size=\"large\"\n                  name=\"inputType\"\n                  key={type.value}\n                  className={\n                    trackType === type.value\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleTrackInput(type.value)}\n                >\n                  {type.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <div className={classes.submitButton}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>CREATE</Typography>\n              )}\n            </Button>\n          </div>\n        </Form>\n      </Formik>\n\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div>{msg}</div>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst MyTextField = ({ placeholder, value, onChange, func, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      variant=\"outlined\"\n      placeholder={placeholder ? placeholder : \" \"}\n      helperText={errorText}\n      size=\"small\"\n      onChange={onChange}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required(\"Category is Required\").max(30),\n  habitName: yup.string().required(\"Habit Name is Required\").max(30).trim(),\n  dailyGoal: yup.number().min(1).max(15),\n  weeklyGoal: yup.number().min(1).max(7),\n  habitUnit: yup\n    .string()\n    .min(2, \"must be minimum 2 characters\")\n    .max(10)\n    .nullable(true)\n    .trim(),\n  types: yup.string(),\n  color: yup.string(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  let habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n    habitUnit: { type: habit.habitUnitType, value: habit.habitUnit },\n    weeklyGoal: {\n      type: habit.weeklyInputType,\n      value: habit.weeklyGoal,\n    },\n    dailyGoal: habit.dailyGoal,\n  };\n  console.log(\"in save habit\");\n\n  const response = await habitService.saveHabit(habitData);\n\n  return response.data;\n};\n\nconst colorCode = [\n  { name: \"yellow\", color: \"#FFB427\" },\n  { name: \"lightblue\", color: \"#4EB1CB\" },\n  { name: \"green\", color: \"#50D890\" },\n  { name: \"black\", color: \"#000000\" },\n  { name: \"red\", color: \"#FF6B7A\" },\n  { name: \"purple\", color: \"#5666F3\" },\n  { name: \"blue\", color: \"#3a8dff\" },\n  { name: \"orange\", color: \"#FF8C00\" },\n];\n\nconst inputTypes = [\n  {\n    value: \"checkbox\",\n    label: \"CHECK BOX\",\n  },\n  {\n    value: \"text\",\n    label: \"TEXT\",\n  },\n  {\n    value: \"number\",\n    label: \"NUMBER\",\n  },\n  {\n    value: \"time\",\n    label: \"TIME\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nexport default CreateHabitForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nexport async function signUp(data) {\n  try {\n    const response = await http.post(apiUrl + \"signUp\", data);\n    return Promise.resolve(response);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport async function signIn(data) {\n  return await http.post(apiUrl + \"signIn\", data);\n}\n\nexport async function signOut(tokenKey) {\n  // remove token from the local storage\n  tokenService.removeToken(tokenKey);\n}\n\nexport default {\n  signUp,\n  signIn,\n  signOut,\n};\n","import {\n  Button,\n  Card,\n  Container,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  Typography,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport Modal from \"../modal\";\n\nconst SignUpForm = () => {\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Container className={classes.root}>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          termsOfServices: false,\n        }}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            const response = await AuthService.signUp(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              console.log(`token  from response ${token}`);\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              console.log(`user info ${userInfoObj} `);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              console.log(state);\n              setSubmitting(false);\n              return history.push(\"/form\");\n\n              //then save the token to the local storage\n              // dispatch token action and  take user to signIn page\n            } else if (response.status === 401) {\n              // else dispatch set error action and display error on screen\n              const responseError = response.data.error;\n              console.log(response);\n              console.log(state);\n\n              dispatch({ type: \"SET_ERROR\", payload: responseError });\n            } else {\n              dispatch({ type: \"SET_ERROR\", payload: \"Unknown error\" });\n            }\n          } catch (err) {\n            if (err.response.status === 401) {\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n            dispatch({ type: \"SET_ERROR\", payload: err });\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Sign Up\" />\n          <div className={classes.input}>\n            <MyTextField label=\"First Name\" name=\"firstName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Last Name\" name=\"lastName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.input}>\n            <MyCheckBox\n              label=\"I accept the terms and condition\"\n              name=\"termsOfServices\"\n            />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"large\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>Sing Me Up</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Already a member? </Typography>\n            <Link to=\"/signIn\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Sign In\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                size=\"large\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup\n    .string()\n    .required()\n    .min(3, \"First name must have at least 3 character\")\n    .max(15, \"First name must be 15 character or less\"),\n  lastName: yup\n    .string()\n    .required()\n    .min(3, \"Last name must have at least 3 character\")\n    .max(20, \"Last name must be 20 character or less\"),\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n  termsOfServices: yup\n    .boolean()\n    .required()\n    .oneOf([true], \"You must accept the terms and conditions.\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\nconst MyCheckBox = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <FormControlLabel\n      label={label}\n      labelPlacement=\"end\"\n      control={<Checkbox color=\"primary\" {...field} error={!!errorText} />}\n    ></FormControlLabel>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport Modal from \"../modal\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Container className={classes.root}>\n      <div>{error.length ? <h3>{error[0]}</h3> : null}</div>\n\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        onSubmit={async (data) => {\n          setError([]);\n          setSubmitting(true);\n          console.log(error);\n          try {\n            const response = await AuthService.signIn(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              setSubmitting(false);\n              return history.push(\"/\");\n            }\n          } catch (err) {\n            console.log(err.response);\n            if (err.response.status === 401) {\n              console.log(err.data);\n\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Welcome Back!\" />\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>SingIn</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Don't have account? </Typography>\n            <Link to=\"/signUp\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Create an account\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default SignInForm;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    topProfileButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        top: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomAddButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomSummaryButton: {\n        position: \"fixed\",\n        left: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n\n    bottomContainer: {\n        position: \"fixed\",\n        zIndex: 100,\n        bottom: 0,\n        height: \"3rem\",\n        width: \"100%\",\n        marginTop: \"1rem\",\n        backgroundColor: \"#272730\",\n    },\n    icon: {\n        fill: \"#ffffff\",\n        textAlign: \"center\",\n    },\n    bottomGrid: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"100%\",\n    },\n    addIcon: {\n        marginRight: \"0.5rem\",\n    },\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport { Fragment } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { NavLink } from \"react-router-dom\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\n\nconst BottomNav = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  let isMobile = width <= 768;\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {isMobile ? (\n        <Fragment>\n          <div className={classes.bottomContainer}>\n            <Grid\n              container\n              xs={12}\n              align=\"center\"\n              className={classes.bottomGrid}\n            >\n              <Grid item align=\"center\" xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/\"\n                >\n                  <HomeOutlinedIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/form\"\n                >\n                  <AddIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/form\"\n                >\n                  <BarChartIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n            </Grid>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <NavLink\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"4vw\",\n            }}\n            to=\"/form\"\n          >\n            <Fab\n              aria-label=\"add\"\n              variant=\"extended\"\n              color=\"secondary\"\n              className={classes.bottomAddButton}\n            >\n              <AddIcon className={classes.addIcon} />\n              ADD HABIT\n            </Fab>\n          </NavLink>\n          <Fab\n            aria-label=\"add\"\n            variant=\"extended\"\n            color=\"secondary\"\n            className={classes.bottomSummaryButton}\n          >\n            <BarChartIcon className={classes.addIcon} />\n            Summary\n          </Fab>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\nexport default BottomNav;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport {\n  Button,\n  Grid,\n  CircularProgress,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Typography,\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { tokenKey } from \"../config.json\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Label } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport BottomNav from \"./BottomNav/BottomNav\";\n\nconst NavBar = () => {\n  const [state] = useContext(Context);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <nav>\n        {localStorage.getItem(tokenKey) ? (\n          <React.Fragment>\n            <Fab\n              aria-label=\"add\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleClick}\n              className={classes.topProfileButton}\n            >\n              <PersonIcon className={classes.addIcon} />\n            </Fab>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              getContentAnchorEl={null}\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            >\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\n                <NavLink className={classes.link} to=\"/signOut\">\n                  <ExitToAppIcon fontSize=\"small\" />\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.optionText}\n                  >\n                    Sign Out\n                  </Typography>\n                </NavLink>\n              </MenuItem>\n            </Menu>\n            <BottomNav />\n          </React.Fragment>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </nav>\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    display: \"contents\",\n    color: \"#FFFFFF\",\n  },\n  menuItem: {\n    padding: \"0 4px\",\n    minHeight: \"1rem\",\n  },\n  optionText: {\n    marginLeft: \"0.5rem\",\n    textAlign: \"center\",\n  },\n  topProfileButton: {\n    position: \"absolute\",\n    right: \"1rem\",\n    top: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  activeButton: {\n    background: \"rgba(196, 196, 196, 0.19)\",\n    color: \"#FFFFFF\",\n  },\n  disabledButton: {\n    background: \"rgba(196, 196, 196, 0.04)\",\n    color: \"#8F8E8E\",\n  },\n}));\n\nexport default NavBar;\n","import { signOut } from \"../../services/authServices\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { tokenKey } from \"../../config.json\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../Store/habitStore\";\nimport Modal from \"../modal\";\nimport { is } from \"date-fns/locale\";\n\nconst SignOut = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TOKEN\", payload: \"\" });\n    dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: false });\n    dispatch({ type: \"SET_USER_INFO\", payload: {} });\n    signOut(tokenKey);\n\n    if (!state.isAuthenticated) {\n      setModal(true);\n    }\n\n    let timeOut = setTimeout(() => {\n      history.push(\"/signIn\");\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [dispatch, history, state.isAuthenticated]);\n\n  return (\n    <div>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{`Your are Signed Out`}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SignOut;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { tokenKey } from \"../../config.json\";\n\nconst ProtectedRoutes = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!localStorage.getItem(tokenKey))\n          return (\n            <Redirect\n              to={{\n                pathname: \"/SignIn\",\n                state: { form: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoutes;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./themes/theme\";\n\nimport Store from \"./Store/habitStore\";\nimport Home from \"./pages\";\nimport AddHabit from \"./pages/addHabit\";\nimport Form from \"./components/CreateHabitForm/form\";\nimport SignUp from \"./components/auth/signUpForm\";\nimport SignIn from \"./components/auth/signInForm\";\nimport NavBar from \"./components/navBar\";\nimport SignOut from \"./components/auth/signOut\";\nimport ProtectedRoute from \"../src/components/auth/protectedRoutes\";\nimport HabitCard from \"./components/HabitCard/HabitCard\";\nimport DailyHabitCard from \"./components/DailyHabitCard/DailyHabitCard\";\nimport HabitFormContext from \"./Store/habitFormContext\";\n\nfunction App() {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <HashRouter basename=\"/\">\n                <Store>\n                    <HabitFormContext>\n                        <NavBar />\n                        <main className=\"container-sm\">\n                            <Switch>\n                                <ProtectedRoute\n                                    exact\n                                    path=\"/\"\n                                    component={Home}\n                                />\n                                <ProtectedRoute\n                                    path=\"/addHabit\"\n                                    component={AddHabit}\n                                />\n                                <ProtectedRoute path=\"/form\" component={Form} />\n                                <ProtectedRoute\n                                    path=\"/habitCard\"\n                                    component={HabitCard}\n                                />\n                                <ProtectedRoute\n                                    path=\"/dailyHabitCard\"\n                                    component={DailyHabitCard}\n                                />\n                                <Route path=\"/signUp\" component={SignUp} />\n                                <Route path=\"/signIn\" component={SignIn} />\n                                <ProtectedRoute\n                                    path=\"/signOut\"\n                                    component={SignOut}\n                                />\n                            </Switch>\n                        </main>\n                    </HabitFormContext>\n                </Store>\n            </HashRouter>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(\"************* In Index.js\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}