{"version":3,"sources":["reducer/reducer.js","utilities/tokenMethods.js","services/httpService.js","services/habitService.js","utilities/utilitiesMethods.js","Store/habitStore.js","components/RenderHabitsByCategory.jsx","components/RenderHabits.jsx","components/TrackHabit.jsx","pages/index.jsx","pages/addHabit.jsx","components/modal.jsx","components/form.jsx","services/authServices.js","components/auth/signUpForm.jsx","components/auth/signInForm.jsx","components/navBar.jsx","components/auth/signOut.jsx","components/auth/protectedRoutes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Reducer","state","action","type","payload","habits","category","habitsNameList","habitRestructure","error","habitStatus","Object","assign","currentDate","weekStartDate","weekEndDate","token","userInfo","isAuthenticated","isLoading","currentWeekDates","tokenService","tokenKey","config","localStorage","setItem","getItem","removeItem","this","getToken","decodeJwt","axios","interceptors","response","use","status","console","log","Promise","reject","request","TokenService","headers","Authorization","get","post","put","delete","data","a","http","apiUrl","saveHabit","getHabits","updateHabitStatus","updateIsTracked","fetchHabitData","habitService","extractHabitNames","habitObject","map","habit","habitName","extractCategoriesAndRestructureHabits","categories","h","hasOwnProperty","push","resolve","getTodayDate","date","Date","getWeekStartDate","startOfWeek","getWeekEndDate","endOfWeek","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","RenderHabitsByCategory","useContext","useState","habitData","setHabitData","cat","useEffect","forEach","isHabitComplete","name","forloop","i","dateCounter","addDays","formatDate","format","habitTrack","filter","d","length","isComplete","check","useRef","updateStatus","HabitService","alert","current","focus","handelChange","e","index","id","_id","moment","add","day","target","checked","inputData","updateData","inputType","popupVal","prompt","TableRow","TableCell","align","Checkbox","onChange","ref","size","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","color","table","minWidth","RenderHabits","classes","isHabitEmpty","setIsHabitEmpty","JSON","stringify","formatDates","eachDayOfInterval","start","end","fetchCurrentWeekDates","className","TableContainer","component","Paper","Table","aria-label","stickyHeader","TableHead","TableBody","c","TrackHabit","anchorEl","setAnchorEl","open","Boolean","undefined","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Fab","aria-describedby","onClick","event","currentTarget","Home","isNextDisable","habitObj","habitNameList","todayDate","hydrateStoreState","changeDate","method","n","changedDate","newStartWeekDate","newEndWeekDate","subDays","Fragment","style","margin","Grid","container","spacing","item","xs","justify","Button","variant","disabled","fontSize","maxWidth","paddingLeft","checkbox","green","spinIt","width","height","AddHabit","modalRoot","document","getElementById","Modal","elRef","createElement","appendChild","removeChild","createPortal","MyTextField","label","props","useField","field","meta","errorText","touched","TextField","helperText","MySelectField","options","select","option","MenuItem","validationSchema","yup","required","max","types","bullet","display","transform","title","pos","marginBottom","colors","Form","setHabit","msg","setMsg","history","useHistory","habitSaved","setHabitSaved","showModal","setModal","toggleModal","Card","raised","CardHeader","CardContent","initialValues","onSubmit","res","values","handleSubmit","handleChange","handleBlur","signOut","removeToken","signUp","signIn","firstName","min","lastName","email","password","termsOfServices","oneOf","MyCheckBox","FormControlLabel","labelPlacement","control","SignUpForm","AuthService","setToken","userInfoObj","getUserInfo","responseError","marginTop","SignInForm","setError","NavBar","textDecoration","activeStyle","to","exact","SignOut","timeOut","setTimeout","clearTimeout","ProtectedRoutes","path","Component","render","rest","pathname","form","location","App","basename","SignUp","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.c121d53b.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_HABIT\":\n      return {\n        ...state,\n        habits: payload,\n      };\n    case \"SET_CATEGORY\":\n      return {\n        ...state,\n        category: payload,\n      };\n    case \"SET_HABIT_NAME_LIST\":\n      return {\n        ...state,\n        habitsNameList: payload,\n      };\n    case \"SET_HABIT_RESTRUCTURE\":\n      return {\n        ...state,\n        habitRestructure: payload,\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: [...state.error, payload],\n      };\n    case \"SET_HABIT_STATUS\":\n      return {\n        ...state,\n        habitStatus: Object.assign({}, state.habitStatus, payload),\n      };\n    case \"SET_CURRENT_DATE\":\n      return {\n        ...state,\n        currentDate: payload,\n      };\n    case \"SET_WEEK_START_DATE\":\n      return {\n        ...state,\n        weekStartDate: payload,\n      };\n    case \"SET_WEEK_END_DATE\":\n      return {\n        ...state,\n        weekEndDate: payload,\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: payload,\n      };\n    case \"SET_USER_INFO\":\n      return {\n        ...state,\n        userInfo: payload,\n      };\n    case \"SET_IS_AUTHENTICATED\":\n      return {\n        ...state,\n        isAuthenticated: payload,\n      };\n    case \"SET_IS_LOADING\":\n      return {\n        ...state,\n        isLoading: payload,\n      };\n    case \"SET_CURRENT_WEEK_DATES\":\n      return {\n        ...state,\n        currentWeekDates: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import config from \"../config.json\";\nimport decodeJwt from \"jwt-decode\";\nconst tokenService = {};\n\ntokenService.setToken = function setTokenToLocalStorage(token) {\n  let tokenKey = config.tokenKey;\n  localStorage.setItem(tokenKey, token);\n};\n\ntokenService.getToken = function getTokenFromLocalStorage(tokenKey) {\n  return localStorage.getItem(tokenKey);\n};\n\ntokenService.removeToken = function removeTokenFromLocalStorage(tokenKey) {\n  localStorage.removeItem(tokenKey);\n};\n\ntokenService.getUserInfo = function decodeUserInfoFromToken(tokenKey) {\n  const token = this.getToken(tokenKey);\n  const userInfoObj = decodeJwt(token);\n\n  return userInfoObj;\n};\n\nexport default tokenService;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport { tokenKey, apiUrl } from \"../config.json\";\nimport TokenService from \"../utilities/tokenMethods\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"An unexpected error occurred , logging the error\", error);\n  }\n  return Promise.reject(error);\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getToken(tokenKey);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      config.headers.Authorization = null;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function saveHabit(data) {\n  return await http.post(apiUrl + \"saveHabit\", data);\n}\nexport async function getHabits() {\n  return await http.get(apiUrl + \"getHabits\");\n}\n\nexport async function updateHabitStatus(data) {\n  return await http.post(apiUrl + \"updateHabit\", data);\n}\n\nexport async function updateIsTracked(data) {\n  return await http.post(apiUrl + \"updateIsTracked\", data);\n}\n\nexport default {\n  saveHabit,\n  getHabits,\n  updateHabitStatus,\n  updateIsTracked,\n};\n","/**\n *  Utilities methods\n */\n\n//Dependencies\nimport { startOfWeek, endOfWeek } from \"date-fns\";\nimport habitService from \"../services/habitService\";\n\n// fetch data from habit server\nexport async function fetchHabitData() {\n  let response = await habitService.getHabits();\n  return response.data;\n}\n\n/**\n *\n * @param {*} habitObject\n * @returns habitsNameList\n */\nexport function extractHabitNames(habitObject) {\n  console.log(habitObject);\n  return habitObject.map((habit) => {\n    return habit.habitName;\n  }, []);\n}\n\n/**\n *\n * @param {*} habits\n * @returns habit restructured object and categories array\n */\nexport function extractCategoriesAndRestructureHabits(habits) {\n  let habitRestructure = {};\n  let categories = [];\n  // if category is present in object\n  if (habits && typeof habits === \"object\") {\n    for (let h of habits) {\n      if (!habitRestructure.hasOwnProperty(h.category)) {\n        categories.push(h.category);\n        habitRestructure[h.category] = [];\n        habitRestructure[h.category].push(h);\n      } else {\n        habitRestructure[h.category].push(h);\n      }\n    }\n  }\n  return Promise.resolve([habitRestructure, categories]);\n}\n\nexport function getTodayDate() {\n  const date = new Date();\n  console.log(date);\n  return Promise.resolve(date);\n}\n\n// get start of week from date fns\nexport function getWeekStartDate(date = new Date()) {\n  console.log(date);\n  let weekStartDate = startOfWeek(date);\n  console.log(weekStartDate);\n  return weekStartDate;\n}\n\n// get end of week from date fns\nexport function getWeekEndDate(date = new Date()) {\n  let weekEndDate = endOfWeek(date);\n\n  return weekEndDate;\n}\n","import { createContext, useReducer } from \"react\";\nimport Reducer from \"../reducer/reducer\";\nimport {\n  getWeekStartDate,\n  getWeekEndDate,\n} from \"../utilities/utilitiesMethods\";\n\nconst initialState = {\n  habits: [],\n  category: [],\n  habitsNameList: [],\n  habitRestructure: {},\n  habitStatus: [],\n  error: [],\n  currentDate: new Date(),\n  weekStartDate: getWeekStartDate() || new Date(),\n  weekEndDate: getWeekEndDate() || new Date(),\n  token: \"\",\n  isAuthenticated: false,\n  userInfo: {},\n  isLoading: true,\n  currentWeekDates: [],\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","import { Checkbox, TableCell, TableRow } from \"@material-ui/core\";\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport moment from \"moment\";\nimport HabitService from \"../services/habitService\";\nimport { Context } from \"../Store/habitStore\";\nimport { addDays, format } from \"date-fns\";\n\n// First day of week is sunday\nconst FIRST_WEEKDAY_INDEX = 0;\n\n// Last day of week is saturday\nconst LAST_WEEKDAY_INDEX = 6;\n\nconst RenderHabitsByCategory = ({ category }) => {\n  const [state, dispatch] = useContext(Context);\n  const [habitData, setHabitData] = useState(null);\n  const [cat] = useState(category);\n\n  useEffect(() => {\n    setHabitData(state.habitRestructure);\n  }, [state.habitRestructure]);\n\n  useEffect(() => {\n    const getCurrentStatus = (habit) => {\n      habit[cat].forEach((h) => {\n        let isHabitComplete = {};\n        let name = h.habitName;\n        isHabitComplete[name] = [];\n        let forloop = false;\n        for (let i = FIRST_WEEKDAY_INDEX; i <= LAST_WEEKDAY_INDEX; i++) {\n          let dateCounter = addDays(state.weekStartDate, i);\n\n          let formatDate = format(dateCounter, \"ddMMyyyy\");\n          let status = h.habitTrack.filter((d) => d.date === formatDate);\n\n          if (status.length > 0 && status[0].isComplete) {\n            isHabitComplete[name][i] = true;\n          } else {\n            isHabitComplete[name][i] = false;\n          }\n\n          if (i === 6) {\n            forloop = true;\n          }\n        }\n\n        if (forloop) {\n          dispatch({ type: \"SET_HABIT_STATUS\", payload: isHabitComplete });\n        }\n      });\n    };\n    getCurrentStatus(state.habitRestructure);\n  }, [cat, dispatch, state.weekStartDate, state.habitRestructure]);\n\n  const check = useRef();\n\n  const updateStatus = async (data) => {\n    let response = await HabitService.updateHabitStatus(data);\n\n    if (response.status === 200) {\n      alert(\"Habit Status updated\");\n      check.current.focus();\n    }\n  };\n\n  const handelChange = (e, habit, index) => {\n    let data = {\n      id: habit._id,\n      date: moment(state.weekStartDate).add(index, \"days\").format(\"DDMMYYYY\"),\n      day: moment(state.weekStartDate).add(index, \"days\").format(\"ddd\"),\n      isComplete: e.target.checked,\n      inputData: null,\n    };\n    let name = habit.habitName;\n\n    let updateData = state.habitStatus;\n    updateData[name][index] = e.target.checked;\n    dispatch({ type: \"SET_HABIT_STATUS\", payload: updateData });\n\n    if (habit.inputType !== \"checkbox\" && e.target.checked === true) {\n      let popupVal = prompt(`Enter the  value for ${habit.habitName}`, \"\");\n\n      if (popupVal === null) {\n        alert(\"Please enter the value \");\n      } else {\n        // save the changes to data base\n        data.inputData = popupVal;\n        updateStatus(data);\n      }\n    } else {\n      //format data for update which includes date, day , isComplete, data\n      //send post request to server to update data\n      updateStatus(data);\n    }\n  };\n\n  return (\n    <>\n      {habitData ? (\n        habitData[cat].map((h) => {\n          return (\n            <TableRow key={h._id}>\n              <TableCell key={h._id} align=\"center\">\n                {h.habitName}\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={state.habitStatus[h.habitName][0] || false}\n                  index={0}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 0)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][1]\n                      : false\n                  }\n                  index={1}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 1)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][2]\n                      : false\n                  }\n                  index={2}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 2)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][3]\n                      : false\n                  }\n                  index={3}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 3)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][4]\n                      : false\n                  }\n                  index={4}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 4)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][5]\n                      : false\n                  }\n                  index={5}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 5)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={\n                    state.habitStatus\n                      ? state.habitStatus[h.habitName][6]\n                      : false\n                  }\n                  index={6}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h, 6)}\n                  ref={check}\n                  size=\"small\"\n                ></Checkbox>\n              </TableCell>\n            </TableRow>\n          );\n        })\n      ) : (\n        <div>\n          You are no tracking any habits yet, please add habits and it will show\n          here\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default RenderHabitsByCategory;\n","import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { format, eachDayOfInterval } from \"date-fns\";\nimport RenderHabitsByCategory from \"../components/RenderHabitsByCategory\";\nimport { Context } from \"../Store/habitStore\";\n\nconst RenderHabits = () => {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isHabitEmpty, setIsHabitEmpty] = useState(false);\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  useEffect(() => {\n    if (JSON.stringify(state.habitRestructure) === \"{}\") {\n      setIsHabitEmpty(true);\n    }\n  }, [state.habitRestructure]);\n\n  useEffect(() => {\n    const fetchCurrentWeekDates = () => {\n      const result = eachDayOfInterval({\n        start: state.weekStartDate,\n        end: state.weekEndDate,\n      });\n\n      const formatDates = result.map((date) => {\n        let intDate = format(date, \"dd\");\n        return intDate;\n      });\n\n      dispatch({ type: \"SET_CURRENT_WEEK_DATES\", payload: formatDates });\n    };\n\n    fetchCurrentWeekDates();\n  }, [state.weekStartDate, state.weekEndDate, dispatch]);\n\n  return (\n    <div className={classes.root}>\n      <TableContainer className={classes.table} component={Paper}>\n        <Table\n          aria-label=\"simple table\"\n          padding=\"none\"\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Habits </TableCell>\n              {weekDays.map((day, index) => {\n                return (\n                  <TableCell align=\"center\">{`${day} ${state.currentWeekDates[index]}`}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {state.habitRestructure && !isHabitEmpty ? (\n              <>\n                {state.category ? (\n                  state.category.map((c, index) => {\n                    return (\n                      <>\n                        <TableRow key={c}>\n                          <TableCell>\n                            <strong>{c}</strong>\n                          </TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n\n                        <RenderHabitsByCategory category={c} />\n                      </>\n                    );\n                  })\n                ) : (\n                  <TableRow>ss</TableRow>\n                )}\n              </>\n            ) : (\n              <TableRow>\n                <TableCell align=\"center\">{`Loading ...  `} </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: \"5px\",\n    textAlign: \"center\",\n    color: \"black\",\n  },\n  table: {\n    minWidth: 350,\n  },\n}));\nexport default RenderHabits;\n","import Popover from \"@material-ui/core/Popover\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TrackHabit() {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Habits </TableCell>\n                <TableCell align=\"center\">Track Habit</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody></TableBody>\n          </Table>\n        </div>\n      </Popover>\n\n      <Fab\n        aria-describedby={id}\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n}\n\nexport default TrackHabit;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { addDays, format, subDays } from \"date-fns\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport TrackHabit from \"../components/TrackHabit\";\nimport {\n  fetchHabitData,\n  extractCategoriesAndRestructureHabits,\n  getTodayDate,\n  getWeekStartDate,\n  getWeekEndDate,\n  extractHabitNames,\n} from \"../utilities/utilitiesMethods\";\n\nconsole.log(\"************ In Home page Component \");\n\nexport default function Home() {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isNextDisable, setNextDisable] = useState(false);\n\n  useEffect(() => {\n    async function hydrateStoreState() {\n      dispatch({ type: \"SET_IS_LOADING\", payload: true });\n      const habitObj = await fetchHabitData();\n\n      dispatch({ type: \"SET_HABIT\", payload: habitObj });\n      const [habitRestructure, categories] =\n        await extractCategoriesAndRestructureHabits(habitObj);\n\n      dispatch({ type: \"SET_HABIT_RESTRUCTURE\", payload: habitRestructure });\n      dispatch({ type: \"SET_CATEGORY\", payload: categories });\n\n      const habitNameList = extractHabitNames(habitObj);\n      dispatch({ type: \"SET_HABIT_NAME_LIST\", payload: habitNameList });\n\n      const todayDate = await getTodayDate();\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: todayDate });\n\n      const weekStartDate = await getWeekStartDate(new Date());\n      const weekEndDate = await getWeekEndDate(new Date());\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: weekStartDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: weekEndDate });\n      dispatch({ type: \"SET_IS_LOADING\", payload: false });\n    }\n\n    hydrateStoreState();\n  }, [dispatch]);\n\n  // this fetch function is need to extracted and need to be reused\n\n  const changeDate = async (method, n) => {\n    // change the current date to prev or next date\n    if (method === \"add\") {\n      let changedDate = addDays(state.currentDate, n);\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n      const newStartWeekDate = await getWeekStartDate(changedDate);\n      const newEndWeekDate = await getWeekEndDate(changedDate);\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n    }\n    if (method === \"sub\") {\n      let changedDate = subDays(state.currentDate, n);\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n      const newStartWeekDate = await getWeekStartDate(changedDate);\n      const newEndWeekDate = await getWeekEndDate(changedDate);\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"20px\" }}>\n        {`${format(state.weekStartDate, \"dd MMMM\")} to ${format(\n          state.weekEndDate,\n          \"dd MMMM\"\n        )}`}\n      </div>\n\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(\"sub\", 7)}\n              >\n                Prev\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                disabled={isNextDisable}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(\"add\", 7)}\n              >\n                Next\n              </Button>\n            </Grid>\n            <Grid xs={3} item></Grid>\n            <Grid item justify=\"flex-end\">\n              <TrackHabit />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            {state.isLoading ? (\n              <div\n                style={{ fontSize: \"4vw\" }}\n              >{`Loading Habits .... \\uD83E\\uDD2A`}</div>\n            ) : (\n              <RenderHabits />\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n\n  spinIt: {\n    width: 10,\n    height: 10,\n  },\n});\n","import React from \"react\";\nimport RenderHabits from \"../components/RenderHabits\";\n\nexport default function AddHabit() {\n  return (\n    <div>\n      <RenderHabits />\n    </div>\n  );\n}\n","import { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nconst Modal = ({ children }) => {\n  const elRef = useRef(null);\n\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n  useEffect(() => {\n    modalRoot.appendChild(elRef.current);\n    return () => {\n      modalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Formik, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport * as yup from \"yup\";\nimport habitService from \"../services/habitService\";\nimport Modal from \"./modal\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Form = () => {\n  const [habit, setHabit] = useState(null);\n  const classes = useStyles();\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const [habitSaved, setHabitSaved] = useState(false);\n\n  const [showModal, setModal] = useState(false);\n\n  useEffect(() => {\n    if (habitSaved && !showModal) {\n      history.push(\"/\");\n    }\n  }, [habitSaved, history, showModal]);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n    setHabitSaved(true);\n  };\n\n  return (\n    <Card raised={true} className={classes.root}>\n      <CardHeader title=\"Add New Habit\" />\n      <CardContent>\n        <Formik\n          initialValues={{\n            category: \"General\",\n            habitName: \"\",\n            types: \"checkbox\",\n            color: \"black\",\n          }}\n          onSubmit={async (data) => {\n            try {\n              console.log(data);\n              setHabit(data);\n              const res = await saveHabit(data);\n              if (res) {\n                setMsg(res.msg);\n                toggleModal();\n              }\n            } catch (err) {\n              if (err.response.status === 400) {\n                console.log(err.response);\n\n                setMsg(err.response.data.error);\n                toggleModal();\n              }\n            }\n          }}\n          validationSchema={validationSchema}\n        >\n          {({ values, handleSubmit, handleChange, handleBlur }) => (\n            <form onSubmit={handleSubmit}>\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.category}\n                  select\n                  label=\"Category\"\n                  name=\"category\"\n                  options={categories}\n                />\n              </div>\n              <div className={classes.root}>\n                <MyTextField label=\"Habit Name\" name=\"habitName\" type=\"input\" />\n              </div>\n\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.types}\n                  select\n                  label=\"Types\"\n                  name=\"types\"\n                  options={types}\n                />\n              </div>\n\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.color}\n                  select\n                  label=\"Color\"\n                  name=\"color\"\n                  options={colors}\n                />\n              </div>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Save Habit\n                </Button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </CardContent>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Card>\n  );\n};\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst MySelectField = ({ label, options, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      select\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    >\n      {options.map((option) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required().max(30),\n  habitName: yup.string().required().max(30),\n  types: yup.string().required(),\n  color: yup.string().required(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  let habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n  };\n  console.log(\"in save habit\");\n\n  const response = await habitService.saveHabit(habitData);\n\n  return response.data;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst types = [\n  {\n    value: \"checkbox\",\n    label: \"Check Box\",\n  },\n  {\n    value: \"text\",\n    label: \"Text\",\n  },\n  {\n    value: \"number\",\n    label: \"Number\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nconst colors = [\n  {\n    value: \"red\",\n    label: \"Red\",\n  },\n  {\n    value: \"blue\",\n    label: \"Blue\",\n  },\n  {\n    value: \"black\",\n    label: \"Black\",\n  },\n  {\n    value: \"green\",\n    label: \"Green\",\n  },\n];\n\nexport default Form;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nexport async function signUp(data) {\n  try {\n    const response = await http.post(apiUrl + \"signUp\", data);\n    return Promise.resolve(response);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport async function signIn(data) {\n  return await http.post(apiUrl + \"signIn\", data);\n}\n\nexport async function signOut(tokenKey) {\n  // remove token from the local storage\n  tokenService.removeToken(tokenKey);\n}\n\nexport default {\n  signUp,\n  signIn,\n  signOut,\n};\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport Modal from \"../modal\";\n\nconst SignUpForm = () => {\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Card raised={true} className={classes.root}>\n      <CardHeader title=\"SignUp\" />\n      <CardContent>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            termsOfServices: false,\n          }}\n          onSubmit={async (data) => {\n            try {\n              const response = await AuthService.signUp(data);\n              console.log(response);\n              if (response.status === 200) {\n                const token = response.data.token;\n                console.log(`token  from response ${token}`);\n                TokenService.setToken(token);\n                dispatch({ type: \"SET_TOKEN\", payload: token });\n\n                const userInfoObj = TokenService.getUserInfo(tokenKey);\n                console.log(`user info ${userInfoObj} `);\n                dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n                dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n                console.log(state);\n\n                return history.push(\"/form\");\n\n                //then save the token to the local storage\n                // dispatch token action and  take user to signIn page\n              } else if (response.status === 401) {\n                // else dispatch set error action and display error on screen\n                const responseError = response.data.error;\n                console.log(response);\n                console.log(state);\n\n                dispatch({ type: \"SET_ERROR\", payload: responseError });\n              } else {\n                dispatch({ type: \"SET_ERROR\", payload: \"Unknown error\" });\n              }\n            } catch (err) {\n              if (err.response.status === 401) {\n                setMsg(err.response.data.error);\n                toggleModal();\n              }\n              dispatch({ type: \"SET_ERROR\", payload: err });\n            }\n          }}\n          validationSchema={validationSchema}\n        >\n          <Form>\n            <div className={classes.root}>\n              <MyTextField label=\"First Name\" name=\"firstName\" type=\"input\" />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Last Name\" name=\"lastName\" type=\"input\" />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n            </div>\n\n            <div className={classes.root}>\n              <MyCheckBox\n                label=\"I accept the terms and condition\"\n                name=\"termsOfServices\"\n              />\n            </div>\n\n            <div className={classes.root}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Sing Me Up\n              </Button>\n            </div>\n          </Form>\n        </Formik>\n        {showModal ? (\n          <Modal>\n            <Card raised={true}>\n              <CardContent>\n                <div style={{ margin: \"20px\" }}>{msg}</div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={toggleModal}\n                >\n                  OK\n                </Button>\n              </CardContent>\n            </Card>\n          </Modal>\n        ) : null}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup\n    .string()\n    .required()\n    .min(3, \"First name must have at least 3 character\")\n    .max(15, \"First name must be 15 character or less\"),\n  lastName: yup\n    .string()\n    .required()\n    .min(3, \"Last name must have at least 3 character\")\n    .max(20, \"Last name must be 20 character or less\"),\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n  termsOfServices: yup\n    .boolean()\n    .required()\n    .oneOf([true], \"You must accept the terms and conditions.\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\nconst MyCheckBox = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <FormControlLabel\n      label={label}\n      labelPlacement=\"end\"\n      control={<Checkbox {...field} error={!!errorText} />}\n    ></FormControlLabel>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport Modal from \"../modal\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Card raised={true} className={classes.root}>\n      <div>{error.length ? <h3>{error[0]}</h3> : null}</div>\n      <CardHeader title=\"SignIn\" />\n      <CardContent>\n        <Formik\n          initialValues={{\n            password: \"\",\n            email: \"\",\n          }}\n          onSubmit={async (data) => {\n            setError([]);\n            console.log(error);\n            try {\n              const response = await AuthService.signIn(data);\n              console.log(response);\n              if (response.status === 200) {\n                const token = response.data.token;\n                TokenService.setToken(token);\n                dispatch({ type: \"SET_TOKEN\", payload: token });\n\n                const userInfoObj = TokenService.getUserInfo(tokenKey);\n                console.log(`user info ${userInfoObj} `);\n                dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n                dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n                console.log(state);\n\n                return history.push(\"/\");\n              }\n            } catch (err) {\n              console.log(err.response);\n              if (err.response.status === 401) {\n                console.log(err.data);\n\n                setMsg(err.response.data.error);\n                toggleModal();\n              }\n            }\n          }}\n          validationSchema={validationSchema}\n        >\n          <Form>\n            <div className={classes.root}>\n              <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n            </div>\n\n            <div className={classes.root}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                SingIn\n              </Button>\n            </div>\n          </Form>\n        </Formik>\n        {showModal ? (\n          <Modal>\n            <Card raised={true}>\n              <CardContent>\n                <div style={{ margin: \"20px\" }}>{msg}</div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={toggleModal}\n                >\n                  OK\n                </Button>\n              </CardContent>\n            </Card>\n          </Modal>\n        ) : null}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 10,\n    marginTop: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default SignInForm;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../Store/habitStore\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { tokenKey } from \"../config.json\";\nimport { Label } from \"@material-ui/icons\";\n\nconst NavBar = () => {\n  const [state] = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <nav>\n        {localStorage.getItem(tokenKey) ? (\n          <React.Fragment>\n            <NavLink\n              style={{\n                textDecoration: \"none\",\n                padding: \"15px\",\n                color: \"darkgrey\",\n                fontSize: \"4vw\",\n              }}\n              activeStyle={{\n                color: \"black\",\n                fontSize: \"4vw\",\n              }}\n              to=\"/\"\n              exact\n            >\n              Home\n            </NavLink>\n            <NavLink\n              style={{\n                textDecoration: \"none\",\n                padding: \"15px\",\n                color: \"darkgrey\",\n                fontSize: \"4vw\",\n              }}\n              activeStyle={{\n                color: \"black\",\n                fontSize: \"4vw\",\n              }}\n              to=\"/form\"\n            >\n              Add Habit\n            </NavLink>\n\n            <NavLink\n              style={{\n                textDecoration: \"none\",\n                padding: \"15px\",\n                color: \"darkgrey\",\n                fontSize: \"4vw\",\n              }}\n              activeStyle={{\n                color: \"black\",\n                fontSize: \"4vw\",\n              }}\n              to=\"/signOut\"\n            >\n              SignOut\n            </NavLink>\n            <h2>{`Hello, ${state.userInfo.firstName}`} </h2>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {\" \"}\n            <NavLink\n              style={{\n                textDecoration: \"none\",\n                padding: \"15px\",\n                color: \"darkgrey\",\n                fontSize: \"4vw\",\n              }}\n              activeStyle={{\n                color: \"black\",\n                fontSize: \"4vw\",\n              }}\n              to=\"/signUp\"\n            >\n              SignUp\n            </NavLink>\n            <NavLink\n              style={{\n                textDecoration: \"none\",\n                padding: \"15px\",\n                color: \"darkgrey\",\n                fontSize: \"4vw\",\n              }}\n              activeStyle={{\n                color: \"black\",\n                fontSize: \"4vw\",\n              }}\n              to=\"/signIn\"\n            >\n              SignIn\n            </NavLink>{\" \"}\n          </React.Fragment>\n        )}\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n","import { signOut } from \"../../services/authServices\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { tokenKey } from \"../../config.json\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../Store/habitStore\";\nimport Modal from \"../modal\";\nimport { is } from \"date-fns/locale\";\n\nconst SignOut = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TOKEN\", payload: \"\" });\n    dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: false });\n    dispatch({ type: \"SET_USER_INFO\", payload: {} });\n    signOut(tokenKey);\n\n    if (!state.isAuthenticated) {\n      setModal(true);\n    }\n\n    let timeOut = setTimeout(() => {\n      history.push(\"/signIn\");\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [dispatch, history, state.isAuthenticated]);\n\n  return (\n    <div>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{`Your are Signed Out`}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SignOut;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { tokenKey } from \"../../config.json\";\n\nconst ProtectedRoutes = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!localStorage.getItem(tokenKey))\n          return (\n            <Redirect\n              to={{\n                pathname: \"/SignIn\",\n                state: { form: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoutes;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store/habitStore\";\nimport Home from \"./pages\";\nimport AddHabit from \"./pages/addHabit\";\nimport Form from \"./components/form\";\nimport SignUp from \"./components/auth/signUpForm\";\nimport SignIn from \"./components/auth/signInForm\";\nimport NavBar from \"./components/navBar\";\nimport SignOut from \"./components/auth/signOut\";\nimport ProtectedRoute from \"../src/components/auth/protectedRoutes\";\n\nconsole.log(\"*************** In App\");\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <HashRouter basename=\"/\">\n        <Store>\n          <NavBar />\n          <main className=\"container-sm\">\n            <Switch>\n              <ProtectedRoute exact path=\"/\" component={Home} />\n              <ProtectedRoute path=\"/addHabit\" component={AddHabit} />\n              <ProtectedRoute path=\"/form\" component={Form} />\n              <Route path=\"/signUp\" component={SignUp} />\n              <Route path=\"/signIn\" component={SignIn} />\n              <ProtectedRoute path=\"/signOut\" component={SignOut} />\n            </Switch>\n          </main>\n        </Store>\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(\"************* In Index.js\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}