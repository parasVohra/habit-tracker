{"version":3,"sources":["themes/theme.js","reducer/reducer.js","utilities/tokenMethods.js","services/httpService.js","services/habitService.js","utilities/utilitiesMethods.js","Store/habitStore.js","components/HabitCard/useStyles.js","utilities/updateHabitMethods.js","components/HabitCard/HabitCard.jsx","components/DailyHabitCard/useStyles.js","utilities/calculateStreak.js","components/DailyHabitCard/DailyHabitCard.jsx","components/RenderHabits.jsx","pages/index.jsx","pages/addHabit.jsx","components/FormComponents/BackButton/BackButton.jsx","components/CreateHabitForm/useStyles.js","components/modal.jsx","components/FormComponents/InputLabel/InputLabel.jsx","components/FormComponents/NumberCounter/useStyles.js","reducer/habitFormReducer.js","Store/habitFormContext.js","components/FormComponents/NumberCounter/NumberCounter.jsx","components/CreateHabitForm/HabitForm.jsx","components/CreateHabitForm/CreateHabitForm.jsx","services/authServices.js","components/auth/signUpForm.jsx","components/auth/signInForm.jsx","components/BottomNav/useStyles.js","components/BottomNav/BottomNav.jsx","components/navBar.jsx","components/auth/signOut.jsx","components/auth/protectedRoutes.jsx","components/Summary/useStyles.js","components/HabitStats/useStyles.js","utilities/calenderUtilMethods.js","components/LineChart/LineChart.jsx","components/HabitStats/HabitStats.jsx","components/Summary/Summary.jsx","components/SummaryDetails/SummaryDetails.jsx","components/UpdateHabit/useStyles.js","components/UpdateHabit/UpdateHabit.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","type","primary","main","secondary","argumentColor","red","green","blue","purple","yellow","shape","borderRadius","overrides","MuiPickersBasePicker","container","padding","pickerView","minWidth","MuiPaper","root","backgroundColor","MuiPickersCalendarHeader","switchHeader","color","dayLabel","margin","MuiPickersDay","day","daySelected","Reducer","state","action","payload","habits","category","habitsNameList","habitRestructure","error","habitStatus","Object","assign","currentDate","weekStartDate","weekEndDate","token","userInfo","isAuthenticated","isLoading","currentWeekDates","habitView","currentStatHabit","statCurrentDate","tokenService","tokenKey","config","localStorage","setItem","getItem","getToken","removeItem","this","decodeJwt","axios","interceptors","response","use","status","console","log","Promise","reject","request","TokenService","headers","Authorization","get","post","put","delete","data","a","http","apiUrl","saveHabit","getHabits","updateHabitStatus","updateIsTracked","updateHabitContent","getStartOfMonth","date","startOfMonth","getEndOfMonth","Number","format","lastDayOfMonth","firstDayIndexOfMonth","monthStartDate","getDay","fetchHabitData","habitService","extractHabitNames","habitObject","map","habit","habitName","extractCategoriesAndRestructureHabits","categories","h","hasOwnProperty","push","resolve","getTodayDate","Date","getWeekStartDate","startOfWeek","getWeekEndDate","endOfWeek","processHabitStatus","isHabitComplete","forEach","i","dateCounter","addDays","formatDate","habitTrack","filter","d","length","isFullyComplete","isPartialComplete","done","percentageDone","calculateHabitDonePercentage","dailyGoal","initialState","hasToken","Context","createContext","Store","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","display","alignItems","justifyContent","marginTop","titleText","habitContainer","maxWidth","minHeight","textGrey","textWhite","habitTitleBox","width","grey","border","borderColor","white","black","selectedDate","unSelectedDate","pink","backgroundYellow","datesBox","height","textAlign","lineHeight","updateTrackObjToFullyComplete","trackObj","updateStatusObjToFullyComplete","statusObj","isHabitFullyDone","clickedHabitStatus","updateLocalHabitStatus","updatedStatusObj","index","newStatus","isHabitDailyGoalMetAfterClick","dailyGoalOfCurrentHabit","updateStatusObjToPartialComplete","currentGoal","updateTrackObjToPartialComplete","currentGoalCount","HabitCard","classes","useContext","todayDayIndex","dateColor","isDateInFuture","dateIndex","dateClasses","selected","background","cursor","boxShadow","unSelected","noPointer","pointerEvents","pointer","handleClick","id","_id","updateStatus","HabitService","alert","SelectedDate","dateC","pointerClass","onClick","e","className","justDate","UnSelectedDate","Container","Grid","direction","xs","sm","md","elevation","component","Paper","item","Typography","align","variant","weeklyGoal","textStreak","doneText","paddingLeft","calculateLongestStreak","sortByDates","reduce","streak","previousDate","preDate","parse","currDate","differenceInDays","tempStartDate","count","longestStreak","Math","max","startDate","endDate","tempEndDate","calculateCurrentStreak","completedHabits","isFullComplete","filterCompletedHabits","currentStreak","sortedDates","isLatestDateIsYesterday","isYesterday","isLatestDateIsToday","isToday","trackData","option","sort","b","DailyHabitCard","useState","setStreak","useEffect","borderStyle","borderWidth","flexGrow","noHabit","paper","table","RenderHabits","isHabitEmpty","setIsHabitEmpty","JSON","stringify","formatDates","eachDayOfInterval","start","end","fullDate","fetchCurrentWeekDates","Home","isNextDisable","setHabitView","viewType","habitObj","habitNameList","todayDate","hydrateStoreState","Fragment","title","lastUpdate","justify","Button","style","disabled","activeButton","disabledButton","CircularProgress","marginBottom","checkbox","spinIt","AddHabit","backIcon","position","left","top","icon","fill","BackButton","history","useHistory","goBack","bullet","transform","form","flexDirection","pos","submitButton","directionRow","buttonMargin","colorWrapper","colorBox","activeColor","colorCircle","boxSizing","lightblue","orange","modalRoot","document","getElementById","Modal","elRef","useRef","current","createElement","appendChild","removeChild","createPortal","label","FormInputLabel","InputLabel","countText","HabitFormReducer","habitId","weeklyInputType","habitUnit","habitUnitType","trackType","FormContext","HabitFormContext","NumberCounter","habitForm","isNegCountDisabled","setCountDisabled","isPosCountDisabled","setPosCount","handleCounter","isCountZero","isCountValid","Fab","size","MyTextField","placeholder","onChange","props","func","useField","field","meta","errorText","touched","TextField","helperText","validationSchema","yup","required","trim","min","nullable","types","habitData","inputType","updateHabit","newHabitData","colorCode","name","inputTypes","HabitForm","isSubmitting","setSubmitting","msg","setMsg","pathname","useLocation","habitSaved","setHabitSaved","setCategoryIndex","setColorIndex","weeklyGoalInputType","setWeeklyGoalInputType","unityType","setUnitType","setTrackType","setHabitText","showModal","setModal","handleWeeklyInput","handleUnitInput","toggleModal","initialValues","onSubmit","updateRes","res","enableReinitialize","event","target","handleCategoryClick","handleColorClick","Card","raised","CardContent","CreateHabitForm","signOut","removeToken","signUp","signIn","firstName","lastName","email","password","termsOfServices","oneOf","MyCheckBox","FormControlLabel","labelPlacement","control","Checkbox","input","singUpWrapper","link","textDecoration","textInput","SignUpForm","AuthService","setToken","userInfoObj","getUserInfo","responseError","CardHeader","to","SignInForm","setError","topProfileButton","right","bottomAddButton","bottom","bottomSummaryButton","bottomContainer","zIndex","bottomGrid","addIcon","marginRight","BottomNav","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","activeStyle","aria-label","menuItem","optionText","marginLeft","NavBar","anchorEl","setAnchorEl","isAuth","setAuth","handleClose","currentTarget","Menu","keepMounted","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","SignOut","timeOut","setTimeout","clearTimeout","ProtectedRoutes","path","Component","render","rest","location","box","statsText","textShadow","renderCalendar","isHabitDone","month","week","dayCount","Month","startIndex","compose","firstWeek","isDone","j","toString","padStart","getYear","makeMonth","track","substring","filterCurrentMonthDate","LineChart","chartData","HabitStats","yearlyStatData","reverse","acc","val","statyear","statmonth","statdate","shortYear","statmonthName","statMonthYear","x","y","chartdata","labels","datasets","habitColor","highlight","monthDataStructure","changeMonth","opt","oprater","changeMonthDate","addMonths","getCompletedHabitCount","getPartiallyCompletedHabitCount","Summary","dispatchHabit","handleEditClick","handleStatsClick","SummaryDetails","UpdateHabit","App","basename","exact","SignUp","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.c81dff31.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\",\"Open Sans\", \"sans-serif\", ',\n    fontSize: 12,\n    button: {\n      textTransform: \"none\",\n      fontWeight: 700,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#303038\" },\n    argumentColor: {\n      red: { main: \"#FF6B7A\" },\n      green: { main: \"#50D890\" },\n      blue: { main: \"#4EB1CB\" },\n      purple: { main: \"#5666F3\" },\n      yellow: { main: \"#FFB427\" },\n    },\n  },\n  shape: {\n    borderRadius: 5,\n  },\n  overrides: {\n    MuiPickersBasePicker: {\n      container: {\n        padding: \"15px\",\n      },\n      pickerView: {\n        minWidth: \"30rem\",\n      },\n    },\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#303038\",\n      },\n    },\n    MuiPickersCalendarHeader: {\n      switchHeader: {\n        color: \"#ff5630\",\n      },\n      dayLabel: {\n        margin: \"0px 15px\",\n      },\n    },\n    MuiPickersDay: {\n      day: {\n        margin: \"0px 15px\",\n      },\n      daySelected: {\n        color: \"#fff\",\n        backgroundColor: \"#ff5630\",\n      },\n    },\n  },\n});\n","const Reducer = (state, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case \"SET_HABIT\":\n            return {\n                ...state,\n                habits: payload,\n            };\n        case \"SET_CATEGORY\":\n            return {\n                ...state,\n                category: payload,\n            };\n        case \"SET_HABIT_NAME_LIST\":\n            return {\n                ...state,\n                habitsNameList: payload,\n            };\n        case \"SET_HABIT_RESTRUCTURE\":\n            return {\n                ...state,\n                habitRestructure: payload,\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: [...state.error, payload],\n            };\n        case \"SET_HABIT_STATUS\":\n            return {\n                ...state,\n                habitStatus: Object.assign({}, state.habitStatus, payload),\n            };\n        case \"SET_CURRENT_DATE\":\n            return {\n                ...state,\n                currentDate: payload,\n            };\n        case \"SET_WEEK_START_DATE\":\n            return {\n                ...state,\n                weekStartDate: payload,\n            };\n        case \"SET_WEEK_END_DATE\":\n            return {\n                ...state,\n                weekEndDate: payload,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: payload,\n            };\n        case \"SET_USER_INFO\":\n            return {\n                ...state,\n                userInfo: payload,\n            };\n        case \"SET_IS_AUTHENTICATED\":\n            return {\n                ...state,\n                isAuthenticated: payload,\n            };\n        case \"SET_IS_LOADING\":\n            return {\n                ...state,\n                isLoading: payload,\n            };\n        case \"SET_CURRENT_WEEK_DATES\":\n            return {\n                ...state,\n                currentWeekDates: payload,\n            };\n        case \"SET_HABIT_VIEW\":\n            return {\n                ...state,\n                habitView: payload,\n            };\n        case \"SET_CURRENT_STAT_HABIT\":\n            return {\n                ...state,\n                currentStatHabit: payload,\n            };\ncase \"SET_STAT_CURRENT_DATE\":\n            return {\n                ...state,\n                statCurrentDate: payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;\n","import config from \"../config.json\";\nimport decodeJwt from \"jwt-decode\";\nconst tokenService = {};\n\ntokenService.setToken = function setTokenToLocalStorage(token) {\n  let tokenKey = config.tokenKey;\n  localStorage.setItem(tokenKey, token);\n};\n\ntokenService.getToken = function getTokenFromLocalStorage(tokenKey) {\n  return localStorage.getItem(tokenKey);\n};\n\ntokenService.hasToken = function checkTokenIsPresent(tokenKey) {\n  return tokenService.getToken(tokenKey) !== null ? true : false;\n};\n\ntokenService.removeToken = function removeTokenFromLocalStorage(tokenKey) {\n  localStorage.removeItem(tokenKey);\n};\n\ntokenService.getUserInfo = function decodeUserInfoFromToken(tokenKey) {\n  const token = this.getToken(tokenKey);\n  const userInfoObj = decodeJwt(token);\n  return userInfoObj;\n};\n\nexport default tokenService;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport { tokenKey, apiUrl } from \"../config.json\";\nimport TokenService from \"../utilities/tokenMethods\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"An unexpected error occurred , logging the error\", error);\n  }\n  return Promise.reject(error);\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getToken(tokenKey);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      config.headers.Authorization = null;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function saveHabit(data) {\n  return await http.post(apiUrl + \"saveHabit\", data);\n}\nexport async function getHabits() {\n  return await http.get(apiUrl + \"getHabits\");\n}\n\nexport async function updateHabitStatus(data) {\n  return await http.post(apiUrl + \"updateHabit\", data);\n}\nexport async function updateHabitContent(data) {\n  return await http.post(apiUrl + \"updateHabitContent\", data);\n}\n\nexport async function updateIsTracked(data) {\n  return await http.post(apiUrl + \"updateIsTracked\", data);\n}\n\nexport default {\n  saveHabit,\n  getHabits,\n  updateHabitStatus,\n  updateIsTracked,\n  updateHabitContent,\n};\n","/**\n *  Utilities methods\n */\n\n//Dependencies\nimport {\n    startOfWeek,\n    endOfWeek,\n    addDays,\n    format,\n    getYear,\n    getMonth,\n    startOfMonth,\n    lastDayOfMonth,\n    getDay,\n} from \"date-fns\";\nimport habitService from \"../services/habitService\";\n\n/**\n *\n * @param {date} date\n * @returns {number}\n */\nexport function getCurrentYear(date) {\n    const year = getYear(date);\n\n    return year;\n}\n\n/**\n *\n * @param {date} date\n * @returns {number}\n */\nexport function getCurrentMonth(date) {\n    const month = getMonth(date) + (1 % 12);\n    return month;\n}\n\n/**\n *\n * @param {date} date\n * @returns {date}\n */\nexport function getStartOfMonth(date) {\n    const monthStartDate = startOfMonth(date);\n    return monthStartDate;\n}\n\n/**\n *\n * @param {date} date\n * @returns {date}\n */\nexport function getEndOfMonth(date) {\n    const endOfMonth = Number(format(lastDayOfMonth(date), \"d\"));\n    return endOfMonth;\n}\n\n/**\n *\n * @param {date} monthStartDate\n * @returns {number}\n */\nexport function firstDayIndexOfMonth(monthStartDate) {\n    const monthStartDayIndex = getDay(monthStartDate);\n    return monthStartDayIndex;\n}\n// fetch data from habit server\nexport async function fetchHabitData() {\n    let response = await habitService.getHabits();\n    return response.data;\n}\n\n/**\n *\n * @param {*} habitObject\n * @returns habitsNameList\n */\nexport function extractHabitNames(habitObject) {\n    return habitObject.map((habit) => {\n        return habit.habitName;\n    }, []);\n}\n\n/**\n *\n * @param {*} habits\n * @returns habit restructured object and categories array\n */\nexport function extractCategoriesAndRestructureHabits(habits) {\n    let habitRestructure = {};\n    let categories = [];\n    // if category is present in object\n    if (habits && typeof habits === \"object\") {\n        for (let h of habits) {\n            if (!habitRestructure.hasOwnProperty(h.category)) {\n                categories.push(h.category);\n                habitRestructure[h.category] = [];\n                habitRestructure[h.category].push(h);\n            } else {\n                habitRestructure[h.category].push(h);\n            }\n        }\n    }\n    return Promise.resolve([habitRestructure, categories]);\n}\n\nexport function getTodayDate() {\n    const date = new Date();\n    return Promise.resolve(date);\n}\n\n// get start of week from date fns\nexport function getWeekStartDate(date = new Date()) {\n    let weekStartDate = startOfWeek(date);\n    return weekStartDate;\n}\n\n// get end of week from date fns\nexport function getWeekEndDate(date = new Date()) {\n    let weekEndDate = endOfWeek(date);\n    return weekEndDate;\n}\n\n/**\n *\n * @param {Array} habits\n * @param {Date} weekStartDate\n * @returns\n */\nexport function processHabitStatus(habits, weekStartDate) {\n    const FIRST_WEEKDAY_INDEX = 0;\n    const LAST_WEEKDAY_INDEX = 6;\n    const isHabitComplete = {};\n\n    habits.forEach((habit) => {\n        const habitName = habit.habitName;\n        isHabitComplete[habitName] = [];\n\n        for (let i = FIRST_WEEKDAY_INDEX; i <= LAST_WEEKDAY_INDEX; i++) {\n            let dateCounter = addDays(weekStartDate, i);\n            let formatDate = format(dateCounter, \"ddMMyyyy\");\n            let status = habit.habitTrack.filter((d) => d.date === formatDate);\n            if (status.length > 0) {\n                isHabitComplete[habitName][i] = {\n                    isFullyComplete: status[0].isFullyComplete,\n                    isPartialComplete: status[0].isPartialComplete,\n                    done: status[0].done,\n                    percentageDone: calculateHabitDonePercentage(\n                        status[0].done,\n                        habit.dailyGoal\n                    ),\n                };\n            } else {\n                isHabitComplete[habitName][i] = {\n                    isFullyComplete: false,\n                    isPartialComplete: false,\n                    done: 0,\n                    percentageDone: 0,\n                };\n            }\n        }\n    });\n\n    return Promise.resolve(isHabitComplete);\n}\n\nexport function calculateHabitDonePercentage(done, dailyGoal) {\n    return 100 * (done / dailyGoal);\n}\n\nexport function isFullyComplete(habit) {\n    if (habit.dailyGoal === 1) return true;\n}\n\nexport function isPartialComplete(habit) {\n    if (habit.dailyGoal === 1) return true;\n}\n\n/**\n *\n * @param {array} habitTrack\n * @returns {number} count of partially completed habits\n */\nexport function calculatePartiallyCompletedHabitCount(habitTrack) {\n    //write reducer function to count where partial completed is true\n    let result = habitTrack.reduce(\n        (acc, habit) => {\n            if (habit.isPartialComplete) {\n                acc.count = acc.count + 1;\n            }\n            return acc;\n        },\n        {\n            count: 0,\n        }\n    );\n    return result;\n}\n/**\n *\n * @param {array} habitTrack\n * @returns {object} count of fully completed habits\n */\nexport function calculateFullyCompletedHabitCount(habitTrack) {\n    let result = habitTrack.reduce(\n        (acc, habit) => {\n            if (habit.isFullyComplete) {\n                acc.count = acc.count + 1;\n            }\n            return acc;\n        },\n        {\n            count: 0,\n        }\n    );\n    return result;\n}\n\nexport function calculateHabitStrength(habitTrack) {\n    // calculate past 66 day date from current day\n    // then count how many times habit partially performed since last 66 days\n    // percentage is = (count / 66 ) * 100\n}\n","import { createContext, useReducer } from \"react\";\nimport Reducer from \"../reducer/reducer\";\nimport {\n    getWeekStartDate,\n    getWeekEndDate,\n} from \"../utilities/utilitiesMethods\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nconst initialState = {\n    habits: [],\n    category: [],\n    habitsNameList: [],\n    habitRestructure: {},\n    habitStatus: [],\n    error: [],\n    currentDate: new Date(),\n    weekStartDate: getWeekStartDate() || new Date(),\n    weekEndDate: getWeekEndDate() || new Date(),\n    token: \"\",\n    isAuthenticated: tokenService.hasToken(\"habit_token\"),\n    userInfo: {},\n    isLoading: true,\n    habitView: \"daily\",\n    currentWeekDates: [],\n    currentStatHabit: null,\n    statCurrentDate: new Date(),\n};\n\nconst Store = ({ children }) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n    return (\n        <Context.Provider value={[state, dispatch]}>\n            {children}\n        </Context.Provider>\n    );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"7rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textWhite: {\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    color: \"white\",\n  },\n  grey: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#6c6c72\",\n    borderColor: \"#6c6c72\",\n  },\n  white: {\n    backgroundColor: \"#ffffff\",\n  },\n  black: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#000000\",\n    borderColor: \"#000000\",\n  },\n  yellow: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  selectedDate: {},\n  unSelectedDate: {},\n  blue: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#5666F3\",\n    borderColor: \"#5666F3\",\n  },\n  green: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#50D890\",\n    borderColor: \"#50D890\",\n  },\n  pink: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    borderColor: \"#D96383\",\n    backgroundColor: \"#D96383\",\n  },\n  backgroundYellow: {\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n}));\n\nexport default useStyles;\n","import { calculateHabitDonePercentage } from \"./utilitiesMethods\";\n\nexport function updateTrackObjToFullyComplete({ trackObj, dailyGoal }) {\n  trackObj.isFullyComplete = true;\n  trackObj.isPartialComplete = true;\n  trackObj.done = dailyGoal;\n\n  return trackObj;\n}\n\nexport function updateStatusObjToFullyComplete({ dailyGoal }) {\n  const statusObj = {};\n  statusObj.isFullyComplete = true;\n  statusObj.isPartialComplete = true;\n  statusObj.done = dailyGoal;\n  statusObj.percentageDone = 100;\n  return statusObj;\n}\n\nexport function isHabitFullyDone(clickedHabitStatus, habit) {\n  return clickedHabitStatus.done === habit.dailyGoal;\n}\n\nexport function updateLocalHabitStatus({\n  habit,\n  habitStatus,\n  updatedStatusObj,\n  dispatch,\n  index,\n}) {\n  const newStatus = { ...habitStatus };\n  newStatus[`${habit.habitName}`][index] = updatedStatusObj;\n  dispatch({ type: \"SET_HABIT_STATUS\", payload: newStatus });\n  console.log(habitStatus);\n}\n\nexport function isHabitDailyGoalMetAfterClick(\n  dailyGoalOfCurrentHabit,\n  clickedHabitStatus\n) {\n  return dailyGoalOfCurrentHabit === clickedHabitStatus.done + 1;\n}\n\nexport function updateStatusObjToPartialComplete({ currentGoal, dailyGoal }) {\n  const statusObj = {};\n  statusObj.isFullyComplete = false;\n  statusObj.isPartialComplete = true;\n  statusObj.done = currentGoal + 1;\n  statusObj.percentageDone = calculateHabitDonePercentage(\n    currentGoal + 1,\n    dailyGoal\n  );\n  return statusObj;\n}\n\nexport function updateTrackObjToPartialComplete({\n  trackObj,\n  currentGoalCount,\n}) {\n  trackObj.isPartialComplete = true;\n  trackObj.done = currentGoalCount + 1;\n  return trackObj;\n}\n","import React, { Fragment, useContext } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getDay, format } from \"date-fns\";\nimport HabitService from \"../../services/habitService\";\nimport {\n    updateLocalHabitStatus,\n    updateStatusObjToFullyComplete,\n    updateStatusObjToPartialComplete,\n    updateTrackObjToFullyComplete,\n    updateTrackObjToPartialComplete,\n    isHabitDailyGoalMetAfterClick,\n    isHabitFullyDone,\n} from \"../../utilities/updateHabitMethods\";\n\nfunction HabitCard(habits) {\n    const classes = useStyles();\n    const habit = habits.habit;\n    const [state, dispatch] = useContext(Context);\n    const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const todayDayIndex = getDay(state.currentDate);\n    console.log(\"weelky today index\", todayDayIndex);\n    const dateColor = {\n        color: habit.color,\n    };\n    console.log(\"state\", state);\n\n    const isDateInFuture = (todayDayIndex, dateIndex) => {\n        return dateIndex <= todayDayIndex ? true : false;\n    };\n\n    const dateClasses = (dateColor, index) =>\n        makeStyles(() => ({\n            selected: {\n                marginTop: \"0.2rem\",\n                height: \"2rem\",\n                width: \"2rem\",\n                textAlign: \"center\",\n                lineHeight: \"2rem\",\n                color: \"#ffffff\",\n                border: \"2px solid\",\n                borderRadius: \"2rem\",\n                //backgroundColor: dateColor.color,\n                background: `linear-gradient(to right, ${\n                    dateColor.color\n                } 0%,  ${dateColor.color}  ${\n                    state.habitStatus[habit.habitName][index].percentageDone\n                }%, rgba(0,0,0,0) ${\n                    state.habitStatus[habit.habitName][index].percentageDone\n                }%,rgba(0,0,0,0) 100%)`,\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n                boxShadow: \"1px 1px 4px 0px #000000ab\",\n            },\n            unSelected: {\n                marginTop: \"0.2rem\",\n                height: \"2rem\",\n                width: \"2rem\",\n                textAlign: \"center\",\n                lineHeight: \"2rem\",\n                color: dateColor.color,\n                border: \"2px solid\",\n                borderRadius: \"2rem\",\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n            },\n            noPointer: {\n                pointerEvents: \"none\",\n            },\n            pointer: {\n                pointerEvents: \"all\",\n            },\n        }));\n\n    function handleClick(habit, index) {\n        const clickedHabitStatus =\n            state.habitStatus[`${habit.habitName}`][index];\n        const dailyGoalOfCurrentHabit = habit.dailyGoal;\n        const trackObj = {\n            id: habit._id,\n            date: state.currentWeekDates[index].formatDate,\n            day: state.currentWeekDates[index].day,\n            data: \"\",\n            isFullyComplete: false,\n            isPartialComplete: false,\n            done: 0,\n        };\n        console.log(clickedHabitStatus);\n        if (isHabitFullyDone(clickedHabitStatus, habit)) {\n            const resetStatusObj = {\n                isFullyComplete: false,\n                isPartialComplete: false,\n                done: 0,\n                percentageDone: 0,\n            };\n            console.log(\"before status\", state.habitStatus);\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: resetStatusObj,\n                dispatch,\n                index,\n            });\n            updateStatus(trackObj);\n            return;\n        }\n        if (\n            !isHabitDailyGoalMetAfterClick(\n                dailyGoalOfCurrentHabit,\n                clickedHabitStatus\n            )\n        ) {\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: updateStatusObjToPartialComplete({\n                    currentGoal: clickedHabitStatus.done,\n                    dailyGoal: dailyGoalOfCurrentHabit,\n                }),\n                dispatch,\n                index,\n            });\n\n            updateStatus(\n                updateTrackObjToPartialComplete({\n                    trackObj,\n                    currentGoalCount: clickedHabitStatus.done,\n                })\n            );\n            return;\n        }\n        updateLocalHabitStatus({\n            habit,\n            habitStatus: state.habitStatus,\n            updatedStatusObj: updateStatusObjToFullyComplete({\n                dailyGoal: habit.dailyGoal,\n            }),\n            dispatch,\n            index,\n        });\n\n        updateStatus(\n            updateTrackObjToFullyComplete({\n                trackObj,\n                dailyGoal: habit.dailyGoal,\n            })\n        );\n        console.log(clickedHabitStatus);\n    }\n\n    const updateStatus = async (data) => {\n        try {\n            let response = await HabitService.updateHabitStatus(data);\n\n            if (response.status === 201) {\n                //alert(\"Habit Status updated\");\n            }\n        } catch {\n            alert(\n                \"Something went wrong, Please refresh the page and try again\"\n            );\n        }\n    };\n\n    function SelectedDate(index) {\n        const dateC = dateClasses(dateColor, index)();\n        const isClickable = isDateInFuture(todayDayIndex, index);\n        const pointerClass = isClickable ? dateC.pointer : dateC.noPointer;\n\n        return (\n            <div\n                id={`${habit.habitName},${index}`}\n                onClick={(e) => handleClick(habit, index)}\n                className={`${dateC.selected} ${pointerClass}`}\n            >\n                {state.currentWeekDates[index].justDate}\n            </div>\n        );\n    }\n\n    function UnSelectedDate(index) {\n        const dateC = dateClasses(dateColor, index)();\n        const isClickable = isDateInFuture(todayDayIndex, index);\n        const pointerClass = isClickable ? dateC.pointer : dateC.noPointer;\n\n        return (\n            <div\n                id={`${habit.habitName},${index}`}\n                onClick={(e) => handleClick(habit, index)}\n                className={`${dateC.unSelected} ${pointerClass}`}\n            >\n                {state.currentWeekDates[index].justDate}\n            </div>\n        );\n    }\n    return (\n        <Container className={classes.root}>\n            <Grid\n                container\n                direction=\"column\"\n                xs={12}\n                sm={12}\n                md={12}\n                elevation={6}\n                className={classes.habitContainer}\n                component={Paper}\n            >\n                <Grid item container className={classes.habitTitleBox}>\n                    <Grid item xs={6}>\n                        <Typography align=\"left\" variant=\"h5\">\n                            {habit.habitName}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography\n                            align=\"right\"\n                            className={classes.textGrey}\n                            variant=\"subtitle1\"\n                        >\n                            {habit.weeklyGoal.value} times a week\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid item container direction=\"row\">\n                    {weekDays.map((day, index) => {\n                        return (\n                            <Fragment key={index}>\n                                <Grid item className={classes.titleText}>\n                                    {todayDayIndex === index ? (\n                                        <Typography\n                                            align=\"center\"\n                                            variant=\"h6\"\n                                            className={classes.textWhite}\n                                        >{`${day}`}</Typography>\n                                    ) : (\n                                        <Typography\n                                            align=\"center\"\n                                            variant=\"h6\"\n                                            className={classes.textGrey}\n                                        >{`${day}`}</Typography>\n                                    )}\n\n                                    {state.habitStatus[habit.habitName][index]\n                                        ? SelectedDate(index)\n                                        : UnSelectedDate(index)}\n                                </Grid>\n                            </Fragment>\n                        );\n                    })}\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default HabitCard;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"4rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textStreak: {\n    color: \"#FFFFFF\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n  doneText: {\n    paddingLeft: \"0.6rem\",\n    color: \"#6c6c72\",\n  },\n}));\n\nexport default useStyles;\n","import { parse, differenceInDays, isYesterday, isToday } from \"date-fns\";\n\n// const testData = [\n//   { date: \"11112021\", isComplete: true },\n//   { date: \"10112021\", isComplete: true },\n//   { date: \"08112021\", isComplete: true },\n//   { date: \"12102021\", isComplete: true },\n//   { date: \"11102021\", isComplete: true },\n//   { date: \"09102021\", isComplete: true },\n//   { date: \"06102021\", isComplete: true },\n// ];\n\n/**\n *\n * @param {Array} habitTrack\n * @returns Object with streak data\n */\nfunction calculateLongestStreak(habitTrack) {\n  const sortedDates = sortByDates(habitTrack, \"asc\");\n  let result = sortedDates.reduce(\n    (streak, habit) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = habit.date;\n      } else {\n        if (habit.isPartialComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(habit.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(currDate, preDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n\n            streak.count = streak.count + 1;\n            streak.longestStreak = Math.max(streak.count, streak.longestStreak);\n            if (streak.count >= streak.longestStreak) {\n              streak.startDate = streak.tempStartDate;\n              streak.endDate = currDate;\n            }\n          } else {\n            if (streak.count >= streak.longestStreak) {\n              streak.endDate = preDate;\n            }\n            streak.tempStartDate = null;\n\n            streak.count = 1;\n          }\n\n          streak.previousDate = habit.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      longestStreak: 0,\n      previousDate: null,\n      tempStartDate: null,\n      tempEndDate: null,\n      startDate: null,\n      endDate: null,\n    }\n  );\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @description\n * This function will  calculate the current streak of a habit\n * First sort the habit tracker date in descending order\n * check if the latest date of habit tracked data is yesterday || today\n * run reducer to calculate the count of the continues streak\n * @returns Object with streak data\n */\nfunction calculateCurrentStreak(habitTrack) {\n  const completedHabits = filterCompletedHabits(habitTrack);\n  if (completedHabits.length) {\n    const sortedDates = sortByDates(completedHabits, \"desc\");\n    const isLatestDateIsYesterday = isYesterday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n    const isLatestDateIsToday = isToday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n\n    if (isLatestDateIsYesterday || isLatestDateIsToday) {\n      return calculateRecentContinuousStreak(sortedDates);\n    }\n\n    if (!isLatestDateIsToday && !isLatestDateIsYesterday) {\n      return {\n        currentStreak: 0,\n        startDate: null,\n        endDate: null,\n      };\n    }\n  } else {\n    return {\n      currentStreak: 0,\n      startDate: null,\n      endDate: null,\n    };\n  }\n}\n\n/**\n *\n * @param {Array} trackData\n * @returns\n */\nfunction calculateRecentContinuousStreak(trackData) {\n  const result = trackData.reduce(\n    (streak, trackData) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = trackData.date;\n      } else {\n        if (trackData.isFullComplete || trackData.isPartialComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(trackData.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(preDate, currDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n            streak.count += 1;\n            streak.currentStreak = Math.max(streak.count, streak.currentStreak);\n            streak.startDate = currDate;\n            streak.endDate = streak.tempStartDate;\n          } else {\n            return streak;\n          }\n          streak.previousDate = trackData.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      tempStartDate: null,\n      previousDate: null,\n      currentStreak: 1,\n      startDate: null,\n      endDate: null,\n    }\n  );\n\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @param {String} option  \"asc\" || \"desc\"\n * @returns Sorted Array by dates\n */\nfunction sortByDates(habitTrack, option) {\n  if (option === \"asc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(a.date, \"ddMMyyyy\", new Date()) -\n        parse(b.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n  if (option === \"desc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(b.date, \"ddMMyyyy\", new Date()) -\n        parse(a.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n}\n\nfunction filterCompletedHabits(habitTrack) {\n  return habitTrack.filter(\n    (habit) => habit.isFullComplete || habit.isPartialComplete\n  );\n}\n\nexport {\n  calculateLongestStreak,\n  calculateCurrentStreak,\n  calculateRecentContinuousStreak,\n  sortByDates,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getDay, format } from \"date-fns\";\nimport { calculateCurrentStreak } from \"../../utilities/calculateStreak\";\nimport HabitService from \"../../services/habitService\";\nimport {\n    updateLocalHabitStatus,\n    updateStatusObjToFullyComplete,\n    updateStatusObjToPartialComplete,\n    updateTrackObjToFullyComplete,\n    updateTrackObjToPartialComplete,\n    isHabitDailyGoalMetAfterClick,\n    isHabitFullyDone,\n} from \"../../utilities/updateHabitMethods\";\nimport { compose } from \"ramda\";\n\nfunction DailyHabitCard({ habit }) {\n    const classes = useStyles();\n    const [state, dispatch] = useContext(Context);\n    const todayDayIndex = getDay(new Date());\n\n    const [streak, setStreak] = useState({\n        currentStreak: 0,\n        longestStreak: 0,\n        previousDate: null,\n    });\n    const dateColor = {\n        color: habit.color,\n    };\n\n    useEffect(() => {\n        if (state.habits) {\n            setStreak(calculateCurrentStreak(habit.habitTrack));\n        }\n    }, [habit.habitTrack, state.habits]);\n\n    const dateClasses = (dateColor) =>\n        makeStyles(() => ({\n            selected: {\n                alignItems: \"center\",\n                minWidth: \"20rem\",\n                maxWidth: \"50rem\",\n                minHeight: \"4rem\",\n                margin: \"auto\",\n                // backgroundColor: \"#303038\",\n                borderRadius: \"10px\",\n                padding: \"0.5rem\",\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n                //backgroundColor: dateColor.color,\n                background: `linear-gradient(to right, ${\n                    dateColor.color\n                } 0%,  ${dateColor.color}  ${\n                    state.habitStatus[habit.habitName][todayDayIndex]\n                        .percentageDone\n                }%, rgba(0,0,0,0) ${\n                    state.habitStatus[habit.habitName][todayDayIndex]\n                        .percentageDone\n                }%,rgba(0,0,0,0) 100%)`,\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n                boxShadow: \"1px 1px 10px 0px #000000ab\",\n            },\n            unSelected: {\n                alignItems: \"center\",\n                minWidth: \"20rem\",\n                maxWidth: \"50rem\",\n                minHeight: \"4rem\",\n                margin: \"auto\",\n                backgroundColor: \"#303038\",\n                borderRadius: \"10px\",\n                borderColor: dateColor.color,\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n                padding: \"0.5rem\",\n                cursor: \"pointer\",\n            },\n        }));\n\n    const dateC = dateClasses(dateColor)();\n\n    function handleClick(habit, index) {\n        // getting status of clicked habit\n        const clickedHabitStatus =\n            state.habitStatus[`${habit.habitName}`][index];\n        // get daily goal of habit\n        const dailyGoalOfCurrentHabit = habit.dailyGoal;\n\n        // initializing track obj\n        const trackObj = {\n            id: habit._id,\n            date: format(state.currentDate, \"ddMMyyyy\"),\n            day: format(state.currentDate, \"EEE\"),\n            data: \"\",\n            isFullyComplete: false,\n            isPartialComplete: false,\n            done: 0,\n        };\n\n        if (isHabitFullyDone(clickedHabitStatus, habit)) {\n            const resetStatusObj = {\n                isFullyComplete: false,\n                isPartialComplete: false,\n                done: 0,\n                percentageDone: 0,\n            };\n\n            // mutate the habit status object\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: resetStatusObj,\n                dispatch,\n                index,\n            });\n\n            updateStatus(trackObj);\n            return;\n        }\n        // if habit does not meet daily goal\n        // if the habit daily goal meet after updating clicking the habit -> update update Partial and fully complete status obj\n        if (\n            !isHabitDailyGoalMetAfterClick(\n                dailyGoalOfCurrentHabit,\n                clickedHabitStatus\n            )\n        ) {\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: updateStatusObjToPartialComplete({\n                    currentGoal: clickedHabitStatus.done,\n                    dailyGoal: dailyGoalOfCurrentHabit,\n                }),\n                dispatch,\n                index,\n            });\n\n            updateStatus(\n                updateTrackObjToPartialComplete({\n                    trackObj,\n                    currentGoalCount: clickedHabitStatus.done,\n                })\n            );\n            return;\n        }\n        updateLocalHabitStatus({\n            habit,\n            habitStatus: state.habitStatus,\n            updatedStatusObj: updateStatusObjToFullyComplete({\n                dailyGoal: habit.dailyGoal,\n            }),\n            dispatch,\n            index,\n        });\n\n        updateStatus(\n            updateTrackObjToFullyComplete({\n                trackObj,\n                dailyGoal: habit.dailyGoal,\n            })\n        );\n    }\n\n    const updateStatus = async (data) => {\n        try {\n            let response = await HabitService.updateHabitStatus(data);\n\n            if (response.status === 201) {\n                //alert(\"Habit Status updated\");\n            }\n        } catch {\n            alert(\"Something went wrong, Please try again\");\n        }\n    };\n\n    function SelectedDate(index) {\n        return (\n            <Container\n                className={classes.root}\n                onClick={() => handleClick(habit, index)}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    elevation={6}\n                    className={dateC.selected}\n                    component={Paper}\n                    item\n                >\n                    <Grid item container className={classes.habitTitleBox}>\n                        <Grid item xs={6}>\n                            <Typography align=\"left\" variant=\"h5\">\n                                {habit.habitName}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                align=\"right\"\n                                className={classes.textStreak}\n                                variant=\"h5\"\n                            >\n                                {streak.currentStreak} 🔥\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container direction=\"row\">\n                        <Typography\n                            align=\"left\"\n                            variant=\"subtitle2\"\n                            className={classes.doneText}\n                        >\n                            {`DONE ${\n                                state.habitStatus[habit.habitName][index].done\n                            } / ${habit.dailyGoal} `}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n\n    function UnSelectedDate(index) {\n        return (\n            <Container\n                className={classes.root}\n                onClick={() => handleClick(habit, index)}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    elevation={6}\n                    className={dateC.unSelected}\n                    component={Paper}\n                >\n                    <Grid item container className={classes.habitTitleBox}>\n                        <Grid item xs={6}>\n                            <Typography align=\"left\" variant=\"h5\">\n                                {habit.habitName}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                align=\"right\"\n                                className={classes.textStreak}\n                                variant=\"h5\"\n                            >\n                                {streak.currentStreak} 🔥\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container direction=\"row\">\n                        <Typography\n                            align=\"left\"\n                            variant=\"subtitle2\"\n                            className={classes.doneText}\n                        >\n                            DONE: 0 / 2\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n    return state.habitStatus[habit.habitName][todayDayIndex]\n        ? SelectedDate(todayDayIndex)\n        : UnSelectedDate(todayDayIndex);\n}\n\nexport default DailyHabitCard;\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport { format, eachDayOfInterval } from \"date-fns\";\nimport { Context } from \"../Store/habitStore\";\nimport HabitCard from \"./HabitCard/HabitCard\";\nimport DailyHabitCard from \"./DailyHabitCard/DailyHabitCard\";\n\nconst RenderHabits = () => {\n    const [state, dispatch] = useContext(Context);\n    const classes = useStyles();\n    const [isHabitEmpty, setIsHabitEmpty] = useState(false);\n\n    useEffect(() => {\n        if (JSON.stringify(state.habitRestructure) === \"{}\") {\n            setIsHabitEmpty(true);\n        }\n    }, [state.habitRestructure]);\n\n    useEffect(() => {\n        const fetchCurrentWeekDates = () => {\n            const result = eachDayOfInterval({\n                start: state.weekStartDate,\n                end: state.weekEndDate,\n            });\n\n            const formatDates = result.map((date) => {\n                let intDate = {\n                    justDate: format(date, \"dd\"),\n                    fullDate: date,\n                    formatDate: format(date, \"ddMMyyyy\"),\n                    day: format(date, \"EEE\"),\n                };\n                return intDate;\n            });\n\n            dispatch({ type: \"SET_CURRENT_WEEK_DATES\", payload: formatDates });\n        };\n\n        fetchCurrentWeekDates();\n    }, [state.weekStartDate, state.weekEndDate, dispatch]);\n\n    return (\n        <div className={classes.root}>\n            {state.habitRestructure && !isHabitEmpty ? (\n                <>\n                    {state.habits ? (\n                        state.habits.map((habit, index) => {\n                            return (\n                                <Fragment key={`${habit.habitName}-${index}`}>\n                                    {state.habitView === \"daily\" ? (\n                                        <DailyHabitCard habit={habit} />\n                                    ) : (\n                                        <HabitCard habit={habit} />\n                                    )}\n                                </Fragment>\n                            );\n                        })\n                    ) : (\n                        <div>ss</div>\n                    )}\n                </>\n            ) : (\n                <Typography\n                    align=\"center\"\n                    className={classes.noHabit}\n                    color=\"primary\"\n                >\n                    {`No habits to display. `}\n                </Typography>\n            )}\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    noHabit: {\n        marginTop: \"5rem\",\n    },\n    paper: {\n        padding: \"5px\",\n        textAlign: \"center\",\n        color: \"black\",\n    },\n    table: {\n        minWidth: 350,\n    },\n}));\nexport default RenderHabits;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport {\n    fetchHabitData,\n    extractCategoriesAndRestructureHabits,\n    getTodayDate,\n    getWeekStartDate,\n    getWeekEndDate,\n    extractHabitNames,\n    processHabitStatus,\n} from \"../utilities/utilitiesMethods\";\nimport { format } from \"date-fns\";\n\nexport default function Home() {\n    const [state, dispatch] = useContext(Context);\n    const classes = useStyles();\n    const [isNextDisable] = useState(false);\n\n    useEffect(() => {\n        async function hydrateStoreState() {\n            dispatch({ type: \"SET_IS_LOADING\", payload: true });\n            const habitObj = await fetchHabitData();\n\n            dispatch({ type: \"SET_HABIT\", payload: habitObj });\n            const [habitRestructure, categories] =\n                await extractCategoriesAndRestructureHabits(habitObj);\n\n            dispatch({\n                type: \"SET_HABIT_RESTRUCTURE\",\n                payload: habitRestructure,\n            });\n            dispatch({ type: \"SET_CATEGORY\", payload: categories });\n\n            const habitNameList = extractHabitNames(habitObj);\n            dispatch({ type: \"SET_HABIT_NAME_LIST\", payload: habitNameList });\n\n            const todayDate = await getTodayDate();\n            dispatch({ type: \"SET_CURRENT_DATE\", payload: todayDate });\n\n            const weekStartDate = await getWeekStartDate(new Date());\n            const weekEndDate = await getWeekEndDate(new Date());\n\n            dispatch({ type: \"SET_WEEK_START_DATE\", payload: weekStartDate });\n            dispatch({ type: \"SET_WEEK_END_DATE\", payload: weekEndDate });\n\n            const habitStatus = await processHabitStatus(\n                habitObj,\n                weekStartDate\n            );\n            dispatch({ type: \"SET_HABIT_STATUS\", payload: habitStatus });\n\n            dispatch({ type: \"SET_IS_LOADING\", payload: false });\n        }\n\n        hydrateStoreState();\n    }, [dispatch]);\n\n    function setHabitView(viewType) {\n        dispatch({ type: \"SET_HABIT_VIEW\", payload: viewType });\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container className={classes.root}>\n                <Grid item xs={12}>\n                    <Typography\n                        variant=\"h3\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        className={classes.title}\n                    >\n                        HABITS\n                    </Typography>\n                    <Typography\n                        className={classes.lastUpdate}\n                        align=\"center\"\n                        color=\"textSecondary\"\n                    >\n                        {`Last updated: ${format(state.currentDate, \"PPp\")}`}\n                    </Typography>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Button\n                                style={{ margin: \"5px\" }}\n                                disabled={isNextDisable}\n                                className={\n                                    state.habitView === \"daily\"\n                                        ? classes.activeButton\n                                        : classes.disabledButton\n                                }\n                                onClick={() => setHabitView(\"daily\")}\n                            >\n                                Daily\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                style={{ margin: \"5px\" }}\n                                disabled={isNextDisable}\n                                className={\n                                    state.habitView === \"weekly\"\n                                        ? classes.activeButton\n                                        : classes.disabledButton\n                                }\n                                onClick={() => setHabitView(\"weekly\")}\n                            >\n                                Weekly\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\">\n                        {state.isLoading ? (\n                            <div style={{ fontSize: \"4vw\" }}>\n                                <CircularProgress style={{ color: \"white\" }} />\n                            </div>\n                        ) : (\n                            <RenderHabits />\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 200,\n        maxWidth: 600,\n        paddingLeft: 10,\n    },\n    root: {\n        marginBottom: \"8rem\",\n    },\n    checkbox: {\n        color: green[400],\n        \"&$checked\": {\n            color: green[600],\n        },\n    },\n    title: {\n        fontWeight: \"bold\",\n        marginTop: \"4rem\",\n        marginBottom: \"2rem\",\n    },\n    lastUpdate: {\n        marginBottom: \"1rem\",\n    },\n\n    activeButton: {\n        background: \"rgba(196, 196, 196, 0.19)\",\n        color: \"#FFFFFF\",\n    },\n    disabledButton: {\n        background: \"rgba(196, 196, 196, 0.04)\",\n        color: \"#8F8E8E\",\n    },\n\n    spinIt: {\n        width: 10,\n        height: 10,\n    },\n});\n","import React from \"react\";\nimport RenderHabits from \"../components/RenderHabits\";\n\nexport default function AddHabit() {\n  return (\n    <div>\n      <RenderHabits />\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction BackButton() {\n  const classes = useStyles();\n  const history = useHistory();\n  function handleClick() {\n    history.goBack();\n  }\n  return (\n    <div className={classes.backIcon} onClick={handleClick}>\n      <ArrowBackIcon className={classes.icon} color=\"secondary\" />\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  backIcon: {\n    position: \"absolute\",\n    left: \"1rem\",\n    top: \"1.5rem\",\n    fontWeight: \"bold\",\n  },\n  icon: {\n    fill: \"#ffffff\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default BackButton;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"left\",\n        maxWidth: \"25rem\",\n        margin: \"auto\",\n    },\n    title: {\n        fontWeight: \"bold\",\n        marginTop: \"1.5rem\",\n        marginBottom: \"2rem\",\n    },\n    pos: {\n        marginBottom: \"1.5rem\",\n    },\n    submitButton: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: \"4rem\",\n    },\n    directionRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    buttonMargin: {\n        margin: \"0 1rem 0.5rem 0\",\n    },\n    activeButton: {\n        background: \"rgba(196, 196, 196, 0.19)\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(196, 196, 196, 0.19)\",\n        },\n    },\n    disabledButton: {\n        background: \"rgba(196, 196, 196, 0.04)\",\n        color: \"#8F8E8E\",\n    },\n    colorWrapper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    colorBox: {\n        margin: \"0.5rem\",\n    },\n    activeColor: {\n        border: \"2px solid white\",\n    },\n    colorCircle: {\n        width: \"1.5rem\",\n        height: \"1.5rem\",\n        borderRadius: \"4rem\",\n        boxSizing: \"border-box\",\n    },\n    yellow: { backgroundColor: \"#FFB427\" },\n    lightblue: { backgroundColor: \"#4EB1CB\" },\n    green: { backgroundColor: \"#50D890\" },\n    black: { backgroundColor: \"#000000\" },\n    red: { backgroundColor: \"#FF6B7A\" },\n    purple: { backgroundColor: \"#5666F3\" },\n    blue: { backgroundColor: \"#3a8dff\" },\n    orange: { backgroundColor: \"#FF8C00\" },\n}));\n\nexport default useStyles;\n","import { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nconst Modal = ({ children }) => {\n  const elRef = useRef(null);\n\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n  useEffect(() => {\n    modalRoot.appendChild(elRef.current);\n    return () => {\n      modalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import { InputLabel } from \"@material-ui/core\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { Fragment } from \"react\";\n\nfunction FormInputLabel({ label }) {\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <InputLabel>\n                <Typography variant=\"subtitle1\" className={classes.label}>\n                    {label}\n                </Typography>\n            </InputLabel>\n        </Fragment>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        fontWeight: \"bold\",\n        marginBottom: \"0.5rem\",\n    },\n}));\n\nexport default FormInputLabel;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    count: {\n        color: \"#FFFFFF\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    countText: {\n        margin: \"0rem 1rem\",\n        fontWeight: \"bold\",\n    },\n}));\n\nexport default useStyles;\n","import { initialState } from \"../Store/habitFormContext\";\n\nconst HabitFormReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_HABIT_ID\":\n      return {\n        ...state,\n        habitId: payload,\n      };\n    case \"SET_CATEGORY\":\n      return {\n        ...state,\n        category: payload,\n      };\n    case \"SET_HABIT_NAME\":\n      return {\n        ...state,\n        habitName: payload,\n      };\n    case \"SET_DAILY_GOAL\":\n      return {\n        ...state,\n        dailyGoal: payload,\n      };\n    case \"SET_WEEKLY_GOAL\":\n      return {\n        ...state,\n        weeklyGoal: payload,\n      };\n    case \"SET_WEEKLY_INPUT_TYPE\":\n      return {\n        ...state,\n        weeklyInputType: payload,\n      };\n    case \"SET_COLOR\":\n      return {\n        ...state,\n        color: payload,\n      };\n    case \"SET_HABIT_UNIT\":\n      return {\n        ...state,\n        habitUnit: payload,\n      };\n    case \"SET_HABIT_UNIT_TYPE\":\n      return {\n        ...state,\n        habitUnitType: payload,\n      };\n    case \"SET_INPUT_TYPE\":\n      return {\n        ...state,\n        trackType: payload,\n      };\n    case \"RESET_HABIT_FORM\":\n      return {\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default HabitFormReducer;\n","import { createContext, useReducer } from \"react\";\nimport HabitFormReducer from \"../reducer/habitFormReducer\";\n\nexport const initialState = {\n  habitId: \"\",\n  category: \"General\",\n  habitName: \"\",\n  dailyGoal: 1,\n  habitUnit: null || \"\",\n  habitUnitType: null,\n  trackType: \"Checkbox\",\n  color: \"#FFB427\",\n  weeklyGoal: 7,\n  weeklyInputType: \"daily\",\n};\n\nconst HabitFormContext = ({ children }) => {\n  const [state, dispatch] = useReducer(HabitFormReducer, initialState);\n  return (\n    <FormContext.Provider value={[state, dispatch]}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const FormContext = createContext(initialState);\nexport default HabitFormContext;\n","import AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Fab, TextField, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { FormContext } from \"../../../Store/habitFormContext\";\nimport { useContext, useState, useEffect } from \"react\";\n\nfunction NumberCounter({ type }) {\n    const [habitForm, dispatch] = useContext(FormContext);\n    const classes = useStyles();\n    const [isNegCountDisabled, setCountDisabled] = useState(false);\n    const [isPosCountDisabled, setPosCount] = useState(false);\n\n    useEffect(() => {\n        if (type === \"daily\") {\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n            setPosCount(isCountValid(habitForm.dailyGoal, 10));\n        }\n    }, [habitForm.dailyGoal, type]);\n\n    useEffect(() => {\n        if (type === \"weekly\") {\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n            setPosCount(isCountValid(habitForm.weeklyGoal, 7));\n        }\n    }, [habitForm.weeklyGoal, type]);\n\n    function handleCounter(action) {\n        if (type === \"daily\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n        }\n        if (type === \"weekly\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n        }\n    }\n\n    function isCountZero(value) {\n        if (value <= 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    function isCountValid(value, max) {\n        if (value >= max) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <div className={classes.count}>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"-\")}\n                disabled={isNegCountDisabled}\n            >\n                <RemoveIcon />\n            </Fab>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.countText}\n            >\n                {type === \"daily\" ? habitForm.dailyGoal : habitForm.weeklyGoal}\n            </Typography>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"+\")}\n                disabled={isPosCountDisabled}\n            >\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default NumberCounter;\n","import {\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Grid,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport * as yup from \"yup\";\nimport habitService from \"../../services/habitService\";\nimport Modal from \"../modal\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport FormInputLabel from \"../FormComponents/InputLabel/InputLabel\";\nimport NumberCounter from \"../FormComponents/NumberCounter/NumberCounter\";\nimport { FormContext } from \"../../Store/habitFormContext\";\nimport { Context } from \"../../Store/habitStore\";\n\nconst HabitForm = () => {\n  const [habitForm, dispatch] = useContext(FormContext);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const classes = useStyles();\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [habitSaved, setHabitSaved] = useState(false);\n  const [activeCategoryIndex, setCategoryIndex] = useState(0);\n  const [activeColorIndex, setColorIndex] = useState(0);\n  const [weeklyGoalInputType, setWeeklyGoalInputType] = useState(\n    habitForm.weeklyInputType\n  );\n  const [unityType, setUnitType] = useState(habitForm.habitUnitType);\n  const [trackType, setTrackType] = useState(habitForm.trackType);\n  const [habitText, setHabitText] = useState(habitForm.habitName);\n\n  console.log(\"habit form context\", habitForm);\n\n  const [showModal, setModal] = useState(false);\n\n  useEffect(() => {\n    if (habitSaved && !showModal) {\n      history.push(\"/\");\n    }\n  }, [habitSaved, history, showModal]);\n\n  const handleCategoryClick = (index, value) => {\n    setCategoryIndex(index);\n    dispatch({ type: \"SET_CATEGORY\", payload: value });\n  };\n  const handleColorClick = (index, value) => {\n    setColorIndex(index);\n    dispatch({ type: \"SET_COLOR\", payload: value });\n  };\n\n  const handleWeeklyInput = (type) => {\n    setWeeklyGoalInputType(type);\n    dispatch({ type: \"SET_WEEKLY_INPUT_TYPE\", payload: type });\n    if (type === \"daily\") {\n      dispatch({ type: \"SET_WEEKLY_GOAL\", payload: 7 });\n    }\n  };\n\n  const handleUnitInput = (type) => {\n    setUnitType(type);\n    dispatch({ type: \"SET_HABIT_UNIT_TYPE\", payload: type });\n    if (type === \"custom\") {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: \"\" });\n    } else {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: null });\n    }\n  };\n  const handleTrackInput = (value) => {\n    setTrackType(value);\n    dispatch({ type: \"SET_INPUT_TYPE\", payload: value });\n  };\n  const handleHabitName = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_NAME\", payload: value });\n  };\n  const handleHabitUnit = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_UNIT\", payload: value });\n  };\n\n  const toggleModal = () => {\n    setModal(!showModal);\n    setHabitSaved(true);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={habitForm}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            if (pathname === \"/updateHabit\") {\n              const updateRes = await updateHabit(data, habitForm.habitId);\n              if (updateRes) {\n                setMsg(updateRes.msg);\n                dispatch({\n                  type: \"RESET_HABIT_FORM\",\n                });\n                setSubmitting(false);\n                toggleModal();\n              }\n            }\n            if (pathname === \"/createHabit\") {\n              const res = await saveHabit(data);\n              if (res) {\n                setMsg(res.msg);\n                dispatch({\n                  type: \"RESET_HABIT_FORM\",\n                });\n                setSubmitting(false);\n                toggleModal();\n              }\n            }\n          } catch (err) {\n            console.log(err);\n            if (err.response.status === 400) {\n              console.log(err.response);\n\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n        enableReinitialize\n      >\n        <Form className={classes.form}>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT NAME\" />\n            <MyTextField\n              name=\"habitName\"\n              type=\"text\"\n              placeholder=\"e.g. Cold Shower, Read Book\"\n              onChange={(event) => handleHabitName(event.target.value)}\n            />\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"CATEGORY\" />\n            {categories.map((category, index) => {\n              return (\n                <Button\n                  size=\"large\"\n                  key={category.label}\n                  className={\n                    category.label === habitForm.category\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleCategoryClick(index, category.value)}\n                >\n                  {category.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HOW MANY TIMES PER DAY?\" />\n            <NumberCounter type=\"daily\" />\n          </Grid>\n          <Grid className={`${classes.pos}`}>\n            <FormInputLabel label=\"HOW MANY DAYS PER WEEK?\" />\n            <Grid className={`${classes.directionRow}`}>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"daily\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"daily\")}\n              >\n                DAILY\n              </Button>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"custom\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"custom\")}\n              >\n                CUSTOM\n              </Button>\n              {weeklyGoalInputType === \"custom\" ? (\n                <NumberCounter type=\"weekly\" />\n              ) : (\n                <></>\n              )}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <Grid item>\n              <FormInputLabel label=\"COLOR\" />\n            </Grid>\n            <Grid container xs={12} item>\n              {colorCode.map((color, index) => {\n                return (\n                  <Grid\n                    xs={2}\n                    className={classes.colorBox}\n                    key={color.color}\n                    item\n                  >\n                    <div\n                      key={color.color}\n                      className={\n                        color.color === habitForm.color\n                          ? `${classes.activeColor} \n                                                ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                          : ` ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                      }\n                      onClick={() => handleColorClick(index, color.color)}\n                    ></div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT UNIT\" />\n            <Button\n              size=\"large\"\n              name=\"habitUnit\"\n              className={\n                unityType === null\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(null)}\n            >\n              NO UNIT\n            </Button>\n            <Button\n              size=\"large\"\n              className={\n                unityType === \"custom\"\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(\"custom\")}\n            >\n              CUSTOM\n            </Button>\n            {unityType === \"custom\" ? (\n              <MyTextField\n                name=\"habitUnit\"\n                type=\"text\"\n                onChange={(event) => handleHabitUnit(event.target.value)}\n                placeholder=\"e.g. Km, Pages, glasses\"\n              />\n            ) : (\n              <></>\n            )}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"TRACK INPUT TYPE\" />\n            {inputTypes.map((type) => {\n              return (\n                <Button\n                  size=\"large\"\n                  name=\"trackType\"\n                  key={type.value}\n                  className={\n                    type.value === trackType\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleTrackInput(type.value)}\n                >\n                  {type.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <div className={classes.submitButton}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : pathname === \"/createHabit\" ? (\n                <Typography>CREATE</Typography>\n              ) : (\n                <Typography>UPDATE</Typography>\n              )}\n            </Button>\n          </div>\n        </Form>\n      </Formik>\n\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div>{msg}</div>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nconst MyTextField = ({ placeholder, value, onChange, func, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      variant=\"outlined\"\n      placeholder={placeholder ? placeholder : \" \"}\n      helperText={errorText}\n      size=\"small\"\n      onChange={onChange}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required(\"Category is Required\").max(30),\n  habitName: yup.string().required(\"Habit Name is Required\").max(30).trim(),\n  dailyGoal: yup.number().min(1).max(15),\n  weeklyGoal: yup.number().min(1).max(7),\n  habitUnit: yup\n    .string()\n    .min(2, \"must be minimum 2 characters\")\n    .max(10)\n    .nullable(true)\n    .trim(),\n  types: yup.string(),\n  color: yup.string(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  const habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n    habitUnit: { type: habit.habitUnitType, value: habit.habitUnit },\n    weeklyGoal: {\n      type: habit.weeklyInputType,\n      value: habit.weeklyGoal,\n    },\n    dailyGoal: habit.dailyGoal,\n    trackType: habit.trackType,\n  };\n  const response = await habitService.saveHabit(habitData);\n\n  return response.data;\n};\n\nconst updateHabit = async (habit, habitId) => {\n  const newHabitData = {\n    habitId: habitId,\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n    habitUnit: { type: habit.habitUnitType, value: habit.habitUnit },\n    weeklyGoal: {\n      type: habit.weeklyInputType,\n      value: habit.weeklyGoal,\n    },\n    dailyGoal: habit.dailyGoal,\n    trackType: habit.trackType,\n  };\n  const response = await habitService.updateHabitContent(newHabitData);\n  return response.data;\n};\n\nconst colorCode = [\n  { name: \"yellow\", color: \"#FFB427\" },\n  { name: \"lightblue\", color: \"#4EB1CB\" },\n  { name: \"green\", color: \"#50D890\" },\n  { name: \"black\", color: \"#000000\" },\n  { name: \"red\", color: \"#FF6B7A\" },\n  { name: \"purple\", color: \"#5666F3\" },\n  { name: \"blue\", color: \"#3a8dff\" },\n  { name: \"orange\", color: \"#FF8C00\" },\n];\n\nconst inputTypes = [\n  {\n    value: \"Checkbox\",\n    label: \"CHECK BOX\",\n  },\n  {\n    value: \"text\",\n    label: \"TEXT\",\n  },\n  {\n    value: \"number\",\n    label: \"NUMBER\",\n  },\n  {\n    value: \"time\",\n    label: \"TIME\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nexport default HabitForm;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport useStyles from \"./useStyles\";\nimport HabitForm from \"./HabitForm\";\n\nconst CreateHabitForm = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <BackButton />\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        className={classes.title}\n      >\n        CREATE A NEW HABIT\n      </Typography>\n      <HabitForm />\n    </Container>\n  );\n};\n\nexport default CreateHabitForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nexport async function signUp(data) {\n  try {\n    const response = await http.post(apiUrl + \"signUp\", data);\n    return Promise.resolve(response);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport async function signIn(data) {\n  return await http.post(apiUrl + \"signIn\", data);\n}\n\nexport async function signOut(tokenKey) {\n  // remove token from the local storage\n  tokenService.removeToken(tokenKey);\n}\n\nexport default {\n  signUp,\n  signIn,\n  signOut,\n};\n","import {\n  Button,\n  Card,\n  Container,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  Typography,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport Modal from \"../modal\";\n\nconst SignUpForm = () => {\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Container className={classes.root}>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          termsOfServices: false,\n        }}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            const response = await AuthService.signUp(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              console.log(`token  from response ${token}`);\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              console.log(`user info ${userInfoObj} `);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              console.log(state);\n              setSubmitting(false);\n              return history.push(\"/form\");\n\n              //then save the token to the local storage\n              // dispatch token action and  take user to signIn page\n            } else if (response.status === 401) {\n              // else dispatch set error action and display error on screen\n              const responseError = response.data.error;\n              console.log(response);\n              console.log(state);\n\n              dispatch({ type: \"SET_ERROR\", payload: responseError });\n            } else {\n              dispatch({ type: \"SET_ERROR\", payload: \"Unknown error\" });\n            }\n          } catch (err) {\n            if (err.response.status === 401) {\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n            dispatch({ type: \"SET_ERROR\", payload: err });\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Sign Up\" />\n          <div className={classes.input}>\n            <MyTextField label=\"First Name\" name=\"firstName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Last Name\" name=\"lastName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.input}>\n            <MyCheckBox\n              label=\"I accept the terms and condition\"\n              name=\"termsOfServices\"\n            />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"large\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>Sing Me Up</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Already a member? </Typography>\n            <Link to=\"/signIn\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Sign In\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                size=\"large\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup\n    .string()\n    .required()\n    .min(3, \"First name must have at least 3 character\")\n    .max(15, \"First name must be 15 character or less\"),\n  lastName: yup\n    .string()\n    .required()\n    .min(3, \"Last name must have at least 3 character\")\n    .max(20, \"Last name must be 20 character or less\"),\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n  termsOfServices: yup\n    .boolean()\n    .required()\n    .oneOf([true], \"You must accept the terms and conditions.\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\nconst MyCheckBox = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <FormControlLabel\n      label={label}\n      labelPlacement=\"end\"\n      control={<Checkbox color=\"primary\" {...field} error={!!errorText} />}\n    ></FormControlLabel>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport Modal from \"../modal\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <div>{error.length ? <h3>{error[0]}</h3> : null}</div>\n\n      <Formik\n        initialValues={{\n          password: \"123456\",\n          email: \"demo@gmail.com\",\n        }}\n        onSubmit={async (data) => {\n          console.log(data);\n          setError([]);\n          setSubmitting(true);\n          console.log(error);\n          try {\n            const response = await AuthService.signIn(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n              setSubmitting(false);\n              return history.push(\"/\");\n            }\n          } catch (err) {\n            console.log(err.response);\n            if (err.response.status === 401) {\n              console.log(err.data);\n              setMsg(err.response.data.error);\n              setSubmitting(false);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Welcome Back!\" />\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>Sing In</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Don't have account? </Typography>\n            <Link to=\"/signUp\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Create an account\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default SignInForm;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    topProfileButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        top: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomAddButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomSummaryButton: {\n        position: \"fixed\",\n        left: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n\n    bottomContainer: {\n        position: \"fixed\",\n        zIndex: 100,\n        bottom: 0,\n        height: \"3rem\",\n        width: \"100%\",\n        marginTop: \"1rem\",\n        backgroundColor: \"#272730\",\n    },\n    icon: {\n        fill: \"#ffffff\",\n        textAlign: \"center\",\n    },\n    bottomGrid: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"100%\",\n    },\n    addIcon: {\n        marginRight: \"0.5rem\",\n    },\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport { Fragment } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { NavLink } from \"react-router-dom\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\n\nconst BottomNav = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  let isMobile = width <= 768;\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {isMobile ? (\n        <Fragment>\n          <div className={classes.bottomContainer}>\n            <Grid\n              container\n              xs={12}\n              align=\"center\"\n              className={classes.bottomGrid}\n            >\n              <Grid item align=\"center\" xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/\"\n                >\n                  <HomeOutlinedIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/createHabit\"\n                >\n                  <AddIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/summary\"\n                >\n                  <BarChartIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n            </Grid>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <NavLink\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"4vw\",\n            }}\n            to=\"/createHabit\"\n          >\n            <Fab\n              aria-label=\"add\"\n              variant=\"extended\"\n              color=\"secondary\"\n              className={classes.bottomAddButton}\n            >\n              <AddIcon className={classes.addIcon} />\n              ADD HABIT\n            </Fab>\n          </NavLink>\n          <NavLink\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"4vw\",\n            }}\n            to=\"/summary\"\n          >\n            <Fab\n              aria-label=\"add\"\n              variant=\"extended\"\n              color=\"secondary\"\n              className={classes.bottomSummaryButton}\n            >\n              <BarChartIcon className={classes.addIcon} />\n              Summary\n            </Fab>\n          </NavLink>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\nexport default BottomNav;\n","import React, { useState } from \"react\";\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { tokenKey } from \"../config.json\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport BottomNav from \"./BottomNav/BottomNav\";\nimport { Context } from \"../Store/habitStore\";\nimport { useEffect, useContext } from \"react\";\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const [isAuth, setAuth] = useState(false);\n\n  useEffect(() => {\n    setAuth(state.isAuthenticated);\n  }, [state.isAuthenticated]);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <nav>\n        {isAuth ? (\n          <React.Fragment>\n            <Fab\n              aria-label=\"add\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleClick}\n              className={classes.topProfileButton}\n            >\n              <PersonIcon className={classes.addIcon} />\n            </Fab>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              getContentAnchorEl={null}\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            >\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\n                <NavLink className={classes.link} to=\"/signOut\">\n                  <ExitToAppIcon fontSize=\"small\" />\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.optionText}\n                  >\n                    Sign Out\n                  </Typography>\n                </NavLink>\n              </MenuItem>\n            </Menu>\n            <BottomNav />\n          </React.Fragment>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </nav>\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    display: \"contents\",\n    color: \"#FFFFFF\",\n  },\n  menuItem: {\n    padding: \"0 4px\",\n    minHeight: \"1rem\",\n  },\n  optionText: {\n    marginLeft: \"0.5rem\",\n    textAlign: \"center\",\n  },\n  topProfileButton: {\n    position: \"absolute\",\n    right: \"1rem\",\n    top: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  activeButton: {\n    background: \"rgba(196, 196, 196, 0.19)\",\n    color: \"#FFFFFF\",\n  },\n  disabledButton: {\n    background: \"rgba(196, 196, 196, 0.04)\",\n    color: \"#8F8E8E\",\n  },\n}));\n\nexport default NavBar;\n","import { signOut } from \"../../services/authServices\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { tokenKey } from \"../../config.json\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../Store/habitStore\";\nimport Modal from \"../modal\";\nimport { is } from \"date-fns/locale\";\n\nconst SignOut = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TOKEN\", payload: \"\" });\n    dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: false });\n    dispatch({ type: \"SET_USER_INFO\", payload: {} });\n    signOut(tokenKey);\n\n    if (!state.isAuthenticated) {\n      setModal(true);\n    }\n\n    let timeOut = setTimeout(() => {\n      history.push(\"/signIn\");\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [dispatch, history, state.isAuthenticated]);\n\n  return (\n    <div>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{`Your are Signed Out`}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SignOut;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { tokenKey } from \"../../config.json\";\n\nconst ProtectedRoutes = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!localStorage.getItem(tokenKey))\n          return (\n            <Redirect\n              to={{\n                pathname: \"/SignIn\",\n                state: { form: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoutes;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: \"0.5rem\",\n        maxWidth: \"30rem\",\n        minWidth: \"10rem\",\n    },\n    title: {\n        marginTop: \"3rem\",\n        marginBottom: \"2rem\",\n    },\n    titleText: {\n        margin: \"auto\",\n    },\n    activeButton: {\n        background: \"rgba(196, 196, 196, 0.19)\",\n        color: \"#FFFFFF\",\n    },\n    disabledButton: {\n        background: \"rgba(196, 196, 196, 0.04)\",\n        color: \"#8F8E8E\",\n    },\n    box: {\n        margin: \"auto\",\n    },\n    habitContainer: {\n        alignItems: \"center\",\n        minHeight: \"6rem\",\n        backgroundColor: \"#303038\",\n        borderRadius: \"10px\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        padding: \"0.5rem\",\n    },\n    textGrey: {\n        color: \"#6c6c72\",\n    },\n    textStreak: {\n        color: \"#FFFFFF\",\n    },\n    habitTitleBox: {\n        width: \"100%\",\n        padding: \"0rem 0.5rem 0rem 0.5rem\",\n        fontWeight: \"bold\",\n        color: \"white\",\n    },\n    datesBox: {\n        marginTop: \"10px\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n    },\n    doneText: {\n        paddingLeft: \"0.6rem\",\n        color: \"#6c6c72\",\n    },\n    statsText: {\n        padding: \"2px\",\n        margin: \"auto\",\n    },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: \"5rem\",\n        minWidth: \"15rem\",\n        padding: \"2px\",\n    },\n    title: {\n        marginTop: \"3rem\",\n        marginBottom: \"2rem\",\n    },\n    titleText: {\n        width: \"3rem\",\n    },\n    habitContainer: {\n        alignItems: \"center\",\n        minWidth: \"22rem\",\n        maxWidth: \"22rem\",\n        minHeight: \"14rem\",\n        margin: \"auto\",\n        backgroundColor: \"#303038\",\n        borderRadius: \"10px\",\n        padding: \"0.5rem\",\n    },\n    textGrey: {\n        color: \"#6c6c72\",\n    },\n    textWhite: {\n        color: \"#ffffff\",\n        fontWeight: \"bold\",\n    },\n    habitTitleBox: {\n        width: \"100%\",\n        color: \"white\",\n    },\n    grey: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        backgroundColor: \"#6c6c72\",\n        borderColor: \"#6c6c72\",\n    },\n    white: {\n        backgroundColor: \"#ffffff\",\n    },\n    black: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        backgroundColor: \"#000000\",\n        borderColor: \"#000000\",\n    },\n    yellow: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        backgroundColor: \"#FFB427\",\n        borderColor: \"#FFB427\",\n    },\n    selectedDate: {},\n    unSelectedDate: {},\n    blue: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        backgroundColor: \"#5666F3\",\n        borderColor: \"#5666F3\",\n    },\n    green: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        backgroundColor: \"#50D890\",\n        borderColor: \"#50D890\",\n    },\n    pink: {\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        borderColor: \"#D96383\",\n        backgroundColor: \"#D96383\",\n    },\n    backgroundYellow: {\n        backgroundColor: \"#FFB427\",\n        borderColor: \"#FFB427\",\n    },\n    datesBox: {\n        marginTop: \"10px\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n    },\n    selected: {\n        marginTop: \"0.5rem\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n        color: \"#ffffff\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        textShadow: \"0.5px 0.5px 1px #000000eb\",\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 4px 0px #000000ab\",\n    },\n    unSelected: {\n        marginTop: \"0.5rem\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        height: \"2rem\",\n        width: \"2rem\",\n        textAlign: \"center\",\n        lineHeight: \"2rem\",\n        border: \"2px solid\",\n        borderRadius: \"2rem\",\n        cursor: \"pointer\",\n    },\n}));\n\nexport default useStyles;\n","/**\n *  Utilities methods\n */\n\n//Dependencies\nimport { format } from \"date-fns\";\nimport {\n    firstDayIndexOfMonth,\n    getCurrentYear,\n    getEndOfMonth,\n    getStartOfMonth,\n} from \"./utilitiesMethods\";\nimport { compose, reverse } from \"ramda\";\n\nconst filterCurrentMonthDate = (habitTrack, currentDate) => {\n    return habitTrack.filter(\n        (track) => format(currentDate, \"MMyyyy\") === track.date.substring(2)\n    );\n};\n\nexport function yearlyStat(habitTrack, currentDate) {\n    const copyTrack = reverse(habitTrack);\n    const stat = copyTrack.reduce(\n        (acc, val) => {\n            const statyear = Number(val.date.substring(4, 9));\n            const statmonth = Number(val.date.substring(2, 4)) - 1;\n            const statdate = Number(val.date.substring(0, 2));\n            const shortYear = format(\n                new Date(statyear, statmonth, statdate),\n                \"y\"\n            );\n            const statmonthName = format(\n                new Date(statyear, statmonth, statdate),\n                \"MMM\"\n            );\n            const statMonthYear = `${statmonthName}-${shortYear}`;\n            if (acc.x.length === 0) {\n                acc.x.push(statMonthYear);\n                acc.y[acc.x.length - 1] = 0;\n            }\n            if (acc.x[acc.x.length - 1] === statMonthYear) {\n                acc.y[acc.x.length - 1]++;\n            } else {\n                acc.x.push(statMonthYear);\n                acc.y[acc.x.length - 1] = 1;\n            }\n            return acc;\n        },\n        {\n            x: [],\n            y: [],\n        }\n    );\n    return stat;\n}\n\nfunction makeMonth(currentDate, isHabitDone) {\n    let month = [];\n    let week = [];\n    let dayCount = 0;\n    const monthStart = 1;\n    const Month = format(currentDate, \"MM\");\n    const startIndex = compose(firstDayIndexOfMonth, getStartOfMonth);\n    let firstWeek = true;\n    for (let i = monthStart; i <= getEndOfMonth(currentDate); i++) {\n        const day = {\n            date: \"\",\n            fullDate: \"\",\n            color: \"blue\",\n            isDone: false,\n        };\n        if (firstWeek) {\n            for (let j = 0; j < startIndex(currentDate); j++) {\n                week[j] = null;\n            }\n            dayCount = startIndex(currentDate);\n            firstWeek = false;\n        }\n        if (dayCount > 6) {\n            firstWeek = false;\n            dayCount = 0;\n            month.push(week);\n            week = [];\n        }\n        if (i === getEndOfMonth(currentDate)) {\n            month.push(week);\n        }\n        day.date = `${i}`;\n        day.fullDate = `${i\n            .toString()\n            .padStart(2, \"0\")}${Month}${getCurrentYear(currentDate)}`;\n        week[dayCount] = day;\n        day.isDone = isHabitDone(\n            `${i.toString().padStart(2, \"0\")}${Month}${format(\n                currentDate,\n                \"yyyy\"\n            )}`\n        );\n        dayCount++;\n    }\n    return month;\n}\n\nexport function renderCalendar(currentDate, habitTrack) {\n    function isHabitDone(fullDate) {\n        for (let d of filterCurrentMonthDate(habitTrack, currentDate)) {\n            if (fullDate === d.date) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return makeMonth(currentDate, isHabitDone);\n}\n","import { Line } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\"\nconst LineChart = ({ chartData }) => {\n    return (\n        <div>\n            <Line data={chartData} />\n        </div>\n    );\n};\n\nexport default LineChart;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Grid, Container, Paper, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useStyles from \"./useStyles\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport { Context } from \"../../Store/habitStore\";\nimport { format, addMonths } from \"date-fns/esm\";\nimport {\n    renderCalendar,\n    yearlyStat,\n} from \"../../utilities/calenderUtilMethods\";\nimport LineChart from \"../LineChart/LineChart\";\n\nfunction HabitStats() {\n    const classes = useStyles();\n    const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const [state, dispatch] = useContext(Context);\n    const currentStatHabit = state.currentStatHabit;\n    const yearlyStatData = yearlyStat(\n        currentStatHabit.habitTrack,\n        state.statCurrentDate\n    );\n    const chartdata = {\n        label: \"Monthly Count\",\n        labels: yearlyStatData.x,\n        datasets: [\n            {\n                data: yearlyStatData.y,\n                backgroundColor: currentStatHabit.color,\n                borderColor: currentStatHabit.color,\n                //label: currentStatHabit.name,\n            },\n        ],\n    };\n    useEffect(() => {}, [state.statCurrentDate]);\n\n    const dateColor = (dateColor) =>\n        makeStyles(() => ({\n            highlight: {\n                backgroundColor: dateColor.color,\n                borderColor: dateColor.color,\n            },\n        }));\n\n    const habitColor = dateColor(currentStatHabit)();\n    const monthDataStructure = renderCalendar(\n        state.statCurrentDate,\n        currentStatHabit.habitTrack\n    );\n\n    function changeMonth(opt) {\n        let oprater = 1;\n        if (opt === \"sub\") {\n            oprater = -1;\n        }\n        const changeMonthDate = addMonths(state.statCurrentDate, oprater);\n        dispatch({ type: \"SET_STAT_CURRENT_DATE\", payload: changeMonthDate });\n        return changeMonthDate;\n    }\n    console.log(monthDataStructure);\n    return (\n        <Fragment>\n            <BackButton />\n            <div className={classes.title}>\n                <Typography align=\"center\" color=\"TextSecondary\" variant=\"h3\">\n                    {currentStatHabit.habitName}\n                </Typography>\n            </div>\n            <div style={{ minWidth: 350, maxWidth: 500, margin: \" auto\" }}>\n                <LineChart chartData={chartdata} />\n            </div>\n            <Container className={classes.root}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    elevation={6}\n                    className={classes.habitContainer}\n                    component={Paper}\n                >\n                    <Grid item container className={classes.habitTitleBox}>\n                        <Grid item xs={12}>\n                            <Grid item container xs={12}>\n                                <Grid item xs={4} align=\"left\">\n                                    <Button onClick={() => changeMonth(\"sub\")}>\n                                        Prev\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={4} align=\"center\">\n                                    <Typography align=\"left\" variant=\"h4\" item>\n                                        {format(state.statCurrentDate, \"LLLL\")}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4} align=\"right\">\n                                    <Button onClick={() => changeMonth(\"add\")}>\n                                        Next\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {weekDays.map((day, index) => {\n                            return (\n                                <Grid item className={classes.titleText}>\n                                    <Typography\n                                        align=\"center\"\n                                        variant=\"h6\"\n                                        className={classes.textGrey}\n                                    >\n                                        {day}\n                                    </Typography>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    {monthDataStructure.map((week, index) => {\n                        return (\n                            <Grid item container key={index} direction=\"row\">\n                                {week.map((day, index) => {\n                                    return (\n                                        <Fragment key={index}>\n                                            <Grid\n                                                item\n                                                className={classes.titleText}\n                                            >\n                                                {day !== null ? (\n                                                    day.isDone ? (\n                                                        <Typography\n                                                            align=\"center\"\n                                                            variant=\"h6\"\n                                                            className={`${classes.selected}\n                                    ${habitColor.highlight}`}\n                                                        >{`${day.date}`}</Typography>\n                                                    ) : (\n                                                        <Typography\n                                                            align=\"center\"\n                                                            variant=\"h6\"\n                                                            className={`${classes.unSelected} ${classes.textGrey}`}\n                                                        >{`${day.date}`}</Typography>\n                                                    )\n                                                ) : (\n                                                    <Typography></Typography>\n                                                )}\n                                            </Grid>\n                                        </Fragment>\n                                    );\n                                })}\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default HabitStats;\n","import React, { useContext } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { FormContext } from \"../../Store/habitFormContext\";\nimport { calculateLongestStreak } from \"../../utilities/calculateStreak\";\nimport {\n    calculatePartiallyCompletedHabitCount,\n    calculateFullyCompletedHabitCount,\n} from \"../../utilities/utilitiesMethods\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport HabitStats from \"../HabitStats/HabitStats\";\n\nconst Summary = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [state, dispatchHabit = dispatch] = useContext(Context);\n    const [habitForm, dispatch] = useContext(FormContext);\n\n    function handleEditClick({\n        _id,\n        category,\n        color,\n        dailyGoal,\n        habitName,\n        habitUnit,\n        weeklyGoal,\n        trackType,\n    }) {\n        console.log(\n            _id,\n            category,\n            color,\n            dailyGoal,\n            habitName,\n            habitUnit,\n            weeklyGoal,\n            trackType\n        );\n        dispatch({ type: \"SET_HABIT_ID\", payload: _id });\n        dispatch({ type: \"SET_CATEGORY\", payload: category });\n        dispatch({ type: \"SET_HABIT_NAME\", payload: habitName });\n        dispatch({ type: \"SET_DAILY_GOAL\", payload: dailyGoal });\n        dispatch({ type: \"SET_WEEKLY_GOAL\", payload: weeklyGoal.value });\n        dispatch({ type: \"SET_WEEKLY_INPUT_TYPE\", payload: weeklyGoal.type });\n        dispatch({ type: \"SET_COLOR\", payload: color });\n        dispatch({ type: \"SET_HABIT_UNIT\", payload: habitUnit.value });\n        dispatch({ type: \"SET_HABIT_UNIT_TYPE\", payload: habitUnit.type });\n        dispatch({ type: \"SET_INPUT_TYPE\", payload: trackType });\n        history.push(\"/updateHabit\");\n    }\n    function handleStatsClick(habit) {\n        dispatchHabit({ type: \"SET_CURRENT_STAT_HABIT\", payload: habit });\n        console.log(\"state at summary\", state);\n        history.push(\"/habitStats\");\n    }\n\n    return (\n        <>\n            <BackButton />\n            <div className={classes.title}>\n                <Typography align=\"center\" color=\"TextSecondary\" variant=\"h3\">\n                    Summary\n                </Typography>\n            </div>\n            {state.habits.length\n                ? state.habits.map((habit) => {\n                      return (\n                          <Container\n                              className={classes.root}\n                              style={{ color: `${habit.color}` }}\n                              key={habit._id}\n                          >\n                              <Grid\n                                  container\n                                  direction=\"column\"\n                                  xs={12}\n                                  sm={12}\n                                  md={12}\n                                  elevation={6}\n                                  className={classes.habitContainer}\n                                  component={Paper}\n                                  style={{ color: `${habit.color}` }}\n                                  item\n                              >\n                                  <Grid item container>\n                                      <Grid align=\"left\" item xs={8}>\n                                          <Typography variant=\"h5\">\n                                              {habit.habitName}\n                                          </Typography>\n                                      </Grid>\n                                      <Grid item align=\"right\" xs={2}>\n                                          <Fab\n                                              className={classes.disabledButton}\n                                              onClick={() =>\n                                                  handleEditClick(habit)\n                                              }\n                                              size=\"small\"\n                                          >\n                                              <EditOutlinedIcon\n                                                  className={classes.icon}\n                                              />\n                                          </Fab>\n                                      </Grid>\n                                      <Grid item align=\"right\" xs={2}>\n                                          <Fab\n                                              className={classes.disabledButton}\n                                              onClick={() =>\n                                                  handleStatsClick(habit)\n                                              }\n                                              size=\"small\"\n                                          >\n                                              <EqualizerIcon\n                                                  className={classes.icon}\n                                              />\n                                          </Fab>\n                                      </Grid>\n                                  </Grid>\n\n                                  <Grid\n                                      item\n                                      container\n                                      direction=\"row\"\n                                      className={classes.box}\n                                  >\n                                      <Grid item xs={4}>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              Completed\n                                          </Typography>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              {getCompletedHabitCount(habit)}\n                                          </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              Partial\n                                          </Typography>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              {getPartiallyCompletedHabitCount(\n                                                  habit\n                                              )}\n                                          </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              Longest Streak\n                                          </Typography>\n                                          <Typography\n                                              className={classes.statsText}\n                                              align=\"center\"\n                                          >\n                                              {getLongestStreak(\n                                                  habit.habitTrack\n                                              )}\n                                          </Typography>\n                                      </Grid>\n                                  </Grid>\n                              </Grid>\n                          </Container>\n                      );\n                  })\n                : null}\n        </>\n    );\n};\nfunction getConcurredPercentage(habit) {\n    return 23;\n}\nfunction getCompletedHabitCount(habit) {\n    let res = calculateFullyCompletedHabitCount(habit.habitTrack);\n    return res.count;\n}\nfunction getPartiallyCompletedHabitCount(habit) {\n    let res = calculatePartiallyCompletedHabitCount(habit.habitTrack);\n    return res.count;\n}\nfunction getLongestStreak(habitTrack) {\n    return calculateLongestStreak(habitTrack).longestStreak;\n}\n\nexport default Summary;\n","import React from \"react\";\n\nconst SummaryDetails = () => {\n  return <div>Summary Details</div>;\n};\n\nexport default SummaryDetails;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: \"bold\",\n    marginTop: \"1.5rem\",\n    marginBottom: \"2rem\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport useStyles from \"./useStyles\";\nimport HabitForm from \"../CreateHabitForm/HabitForm\";\n\nconst UpdateHabit = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <BackButton />\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        className={classes.title}\n      >\n        UPDATE HABIT\n      </Typography>\n      <HabitForm />\n    </Container>\n  );\n};\n\nexport default UpdateHabit;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./themes/theme\";\n\nimport Store from \"./Store/habitStore\";\nimport Home from \"./pages\";\nimport AddHabit from \"./pages/addHabit\";\nimport CreateHabitForm from \"./components/CreateHabitForm/CreateHabitForm\";\nimport SignUp from \"./components/auth/signUpForm\";\nimport SignIn from \"./components/auth/signInForm\";\nimport NavBar from \"./components/navBar\";\nimport SignOut from \"./components/auth/signOut\";\nimport ProtectedRoute from \"../src/components/auth/protectedRoutes\";\nimport HabitCard from \"./components/HabitCard/HabitCard\";\nimport DailyHabitCard from \"./components/DailyHabitCard/DailyHabitCard\";\nimport HabitFormContext from \"./Store/habitFormContext\";\nimport Summary from \"./components/Summary/Summary\";\nimport SummaryDetails from \"./components/SummaryDetails/SummaryDetails\";\nimport UpdateHabit from \"./components/UpdateHabit/UpdateHabit\";\nimport HabitStats from \"./components/HabitStats/HabitStats\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <HashRouter basename=\"/\">\n        <Store>\n          <HabitFormContext>\n            <NavBar />\n            <main className=\"container-sm\">\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <ProtectedRoute path=\"/addHabit\" component={AddHabit} />\n                <ProtectedRoute\n                  path=\"/createHabit\"\n                  component={CreateHabitForm}\n                />\n                <ProtectedRoute path=\"/habitCard\" component={HabitCard} />\n                <ProtectedRoute\n                  path=\"/dailyHabitCard\"\n                  component={DailyHabitCard}\n                />\n                <ProtectedRoute path=\"/updateHabit\" component={UpdateHabit} />\n                <ProtectedRoute path=\"/summary\" component={Summary} />\n                <ProtectedRoute path=\"/habitStats\" component={HabitStats} />\n                <ProtectedRoute\n                  path=\"/summaryDetails\"\n                  component={SummaryDetails}\n                />\n                <Route path=\"/signUp\" component={SignUp} />\n                <Route path=\"/signIn\" component={SignIn} />\n                <ProtectedRoute path=\"/signOut\" component={SignOut} />\n              </Switch>\n            </main>\n          </HabitFormContext>\n        </Store>\n      </HashRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(\"************* In Index.js\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}