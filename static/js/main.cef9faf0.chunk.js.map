{"version":3,"sources":["reducer/reducer.js","Store/habitStore.js","services/httpService.js","services/habitService.js","components/RenderHabitsByCategory.jsx","components/RenderHabits.jsx","components/TrackHabit.jsx","pages/index.jsx","pages/addHabit.jsx","components/form.jsx","components/navBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Reducer","state","action","type","payload","habits","category","habitRestructure","habitStatus","Object","assign","currentDate","initialState","error","moment","_d","Context","createContext","Store","children","useReducer","dispatch","Provider","value","get","axios","post","put","delete","data","a","http","apiUrl","saveHabit","getHabits","updateHabitStatus","updateIsTracked","RenderHabitsByCategory","useContext","useState","habitData","setHabitData","cat","setCurrentDate","setHabitStatus","useEffect","habit","forEach","h","fDate","format","status","habitTrack","filter","d","date","length","habitName","name","complete","isComplete","console","log","getCurrentStatus","check","useRef","updateStatus","HabitService","response","alert","current","focus","map","TableRow","TableCell","align","_id","Checkbox","checked","id","onChange","e","day","target","inputData","updateData","inputType","popupVal","prompt","handelChange","ref","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","color","RenderHabits","classes","categories","hasOwnProperty","push","HabitsByCategory","className","TableContainer","table","component","Paper","Table","aria-label","TableHead","TableBody","c","index","TrackHabit","anchorEl","setAnchorEl","open","Boolean","undefined","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","i","event","isTracked","res","nModified","handleChange","Fab","aria-describedby","size","onClick","currentTarget","Home","isNextDisable","setNextDisable","fetchData","changeDate","n","changedDate","add","Fragment","style","margin","Grid","container","spacing","item","xs","justify","Button","variant","disabled","minWidth","maxWidth","paddingLeft","checkbox","green","AddHabit","MyTextField","label","props","useField","field","meta","errorText","touched","TextField","helperText","MySelectField","options","select","option","MenuItem","validationSchema","yup","required","max","types","habitService","bullet","display","transform","title","fontSize","pos","marginBottom","colors","Form","setHabit","Card","initialValues","onSubmit","values","handleSubmit","handleBlur","JSON","stringify","NavBar","textDecoration","activeStyle","to","exact","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cef9faf0.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_HABIT\":\n      return {\n        ...state,\n        habits: payload,\n      };\n    case \"SET_CATEGORY\":\n      return {\n        ...state,\n        category: payload,\n      };\n    case \"SET_HABIT_RESTRUCTURE\":\n      return {\n        ...state,\n        habitRestructure: payload,\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n      };\n    case \"SET_HABIT_STATUS\":\n      return {\n        ...state,\n        habitStatus: Object.assign({}, state.habitStatus, payload),\n      };\n    case \"SET_CURRENT_DATE\":\n      return {\n        ...state,\n        currentDate: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { createContext, useReducer } from \"react\";\nimport moment from \"moment\";\nimport Reducer from \"../reducer/reducer\";\n\nconst initialState = {\n  habits: null,\n  category: [],\n  habitRestructure: [],\n  habitStatus: {},\n  error: null,\n  currentDate: moment()._d,\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function saveHabit(data) {\n  return await http.post(apiUrl + \"saveHabit\", data);\n}\nexport async function getHabits() {\n  return await http.get(apiUrl + \"getHabits\");\n}\n\nexport async function updateHabitStatus(data) {\n  return await http.post(apiUrl + \"updateHabit\", data);\n}\n\nexport async function updateIsTracked(data) {\n  return await http.post(apiUrl + \"updateIsTracked\", data);\n}\n\nexport default {\n  saveHabit,\n  getHabits,\n  updateHabitStatus,\n  updateIsTracked,\n};\n","import { Checkbox, TableCell, TableRow } from \"@material-ui/core\";\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport moment from \"moment\";\nimport HabitService from \"../services/habitService\";\nimport { Context } from \"../Store/habitStore\";\n\nconst RenderHabitsByCategory = ({ category }) => {\n  const [state, dispatch] = useContext(Context);\n  const [habitData, setHabitData] = useState(null);\n  const [cat] = useState(category);\n  const [currentDate, setCurrentDate] = useState(null);\n  const [habitStatus, setHabitStatus] = useState(null);\n\n  useEffect(() => {\n    setHabitData(state.habitRestructure);\n    setCurrentDate(state.currentDate);\n    setHabitStatus(state.habitStatus);\n  }, [\n    state.habitRestructure,\n    state.category,\n    state.currentDate,\n    state.habitStatus,\n  ]);\n\n  useEffect(() => {\n    const getCurrentStatus = (currentDate, habit) => {\n      habit\n        ? habit[cat].forEach((h) => {\n            let fDate = moment(currentDate).format(\"DDMMYYYY\");\n\n            let status = h.habitTrack.filter((d) => d.date === fDate);\n\n            if (status.length === 0) {\n              let data = {};\n              let name = h.habitName;\n              let complete = false;\n              data[name] = complete;\n              dispatch({ type: \"SET_HABIT_STATUS\", payload: data });\n            } else if (status.length > 0) {\n              let name = h.habitName;\n              let complete = status[0].isComplete;\n              let data = {};\n              data[name] = complete;\n              dispatch({ type: \"SET_HABIT_STATUS\", payload: data });\n            }\n          })\n        : console.log(habit);\n    };\n    getCurrentStatus(currentDate, habitData);\n  }, [currentDate, habitData, cat, dispatch]);\n\n  const check = useRef();\n\n  const updateStatus = async (data) => {\n    let response = await HabitService.updateHabitStatus(data);\n    console.log(response);\n    if (response.status === 200) {\n      alert(\"Habit Status updated\");\n      check.current.focus();\n    }\n  };\n\n  const handelChange = (e, habit) => {\n    let data = {\n      id: habit._id,\n      date: moment(currentDate).format(\"DDMMYYYY\"),\n      day: moment(currentDate).format(\"ddd\"),\n      isComplete: e.target.checked,\n      inputData: null,\n    };\n\n    let name = habit.habitName;\n\n    let updateData = {};\n    updateData[name] = e.target.checked;\n    dispatch({ type: \"SET_HABIT_STATUS\", payload: updateData });\n\n    if (habit.inputType !== \"checkbox\" && e.target.checked === true) {\n      let popupVal = prompt(`Enter the  value for ${habit.habitName}`, \"\");\n\n      if (popupVal === null) {\n        alert(\"Please enter the value \");\n      } else {\n        // save the changes to data base\n        data.inputData = popupVal;\n        updateStatus(data);\n      }\n    } else {\n      //format data for update which includes date, day , isComplete, data\n      //send post request to server to update data\n      updateStatus(data);\n    }\n  };\n\n  return (\n    <>\n      {habitData ? (\n        habitData[cat].map((h) => {\n          return (\n            <TableRow key={h._id}>\n              <TableCell key={h._id} align=\"center\">\n                {h.habitName}\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  checked={habitStatus[h.habitName] || false}\n                  id={h._id}\n                  onChange={(e) => handelChange(e, h)}\n                  ref={check}\n                ></Checkbox>\n              </TableCell>\n            </TableRow>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default RenderHabitsByCategory;\n","import {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect } from \"react\";\n\nimport RenderHabitsByCategory from \"../components/RenderHabitsByCategory\";\nimport { Context } from \"../Store/habitStore\";\n\nconst RenderHabits = ({ habit, date }) => {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const [habit, category] = HabitsByCategory(state.habits);\n\n    dispatch({ type: \"SET_CATEGORY\", payload: category });\n\n    dispatch({ type: \"SET_HABIT_RESTRUCTURE\", payload: habit });\n\n    console.log(\"hi\");\n  }, [dispatch, state.habits]);\n\n  return (\n    <div className={classes.root}>\n      <TableContainer className={classes.table} component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Habits </TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {state.habitRestructure ? (\n              <>\n                {state.category ? (\n                  state.category.map((c, index) => {\n                    return (\n                      <>\n                        <TableRow key={c}>\n                          <TableCell>{c}</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                        <RenderHabitsByCategory category={c} />\n                      </>\n                    );\n                  })\n                ) : (\n                  <TableCell>ss</TableCell>\n                )}\n              </>\n            ) : (\n              <TableCell>ss</TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: \"20px\",\n    textAlign: \"center\",\n    color: \"black\",\n  },\n}));\n\n//restructure habits by categories\nfunction HabitsByCategory(habits) {\n  let habitRestructure = {};\n  let categories = [];\n  // if category is present in object\n  if (habits) {\n    for (let h of habits) {\n      if (!habitRestructure.hasOwnProperty(h.category)) {\n        categories.push(h.category);\n        habitRestructure[h.category] = [];\n        habitRestructure[h.category].push(h);\n      } else {\n        habitRestructure[h.category].push(h);\n      }\n    }\n  }\n  return [habitRestructure, categories];\n}\nexport default RenderHabits;\n","import Popover from \"@material-ui/core/Popover\";\nimport { Context } from \"../Store/habitStore\";\nimport HabitService from \"../services/habitService\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  Checkbox,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TrackHabit() {\n  const [state, dispatch] = useContext(Context);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [habitTracked, setHabitTracked] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleChange = (event) => {\n    let data = {\n      id: event.target.id,\n      isTracked: event.target.checked,\n    };\n\n    // update is track is also need to extracted\n    async function updateIsTracked() {\n      const res = await HabitService.updateIsTracked(data);\n      if (res.status === 200 && res.data.nModified === 1) {\n        // here i want to fetch the updated habit data from the server\n        // and also i want want to render the habits\n      }\n    }\n\n    updateIsTracked();\n  };\n\n  const open = Boolean(anchorEl);\n\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Habits </TableCell>\n                <TableCell align=\"center\">Track Habit</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {state.habits\n                ? state.habits.map((h, i) => {\n                    return (\n                      <TableRow key={i}>\n                        <TableCell align=\"center\">{h.habitName}</TableCell>\n                        <TableCell align=\"center\">\n                          <Checkbox\n                            id={h._id}\n                            onChange={(e) => handleChange(e)}\n                            checked={h.isTracked}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </div>\n      </Popover>\n\n      <Fab\n        aria-describedby={id}\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n}\n\nexport default TrackHabit;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport HabitService from \"../services/habitService\";\nimport moment from \"moment\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport TrackHabit from \"../components/TrackHabit\";\n\nexport function Home() {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isNextDisable, setNextDisable] = useState(false);\n\n  console.log(state);\n\n  // this fetch function is need to extracted and need to be reused\n  useEffect(() => {\n    //fetch habits from server\n    if (\n      moment(state.currentDate).format(\"DDMMYYYY\") ===\n      moment().format(\"DDMMYYYY\")\n    ) {\n      setNextDisable(true);\n    } else {\n      setNextDisable(false);\n    }\n    async function fetchData() {\n      // You can await here\n      const { data } = await HabitService.getHabits();\n      dispatch({ type: \"SET_HABIT\", payload: data });\n    }\n    fetchData();\n  }, [state.currentDate, dispatch]);\n\n  const changeDate = (n) => {\n    // change the current date to prev or next date\n    let changedDate = moment(state.currentDate).add(n, \"days\");\n    dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate._d });\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"20px\" }}>\n        {moment(state.currentDate).format(\"DDMMYYYY\")}\n      </div>\n\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(-1)}\n              >\n                Prev\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                disabled={isNextDisable}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(1)}\n              >\n                Next\n              </Button>\n            </Grid>\n            <Grid xs={3} item></Grid>\n            <Grid item justify=\"flex-end\">\n              <TrackHabit />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            <RenderHabits />\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n});\n","import React from \"react\";\nimport RenderHabits from \"../components/RenderHabits\";\n\nexport function AddHabit() {\n  return (\n    <div>\n      <RenderHabits />\n    </div>\n  );\n}\n","import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Formik, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport * as yup from \"yup\";\nimport habitService from \"../services/habitService\";\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst MySelectField = ({ label, options, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      select\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    >\n      {options.map((option) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required().max(30),\n  habitName: yup.string().required().max(30),\n  types: yup.string().required(),\n  color: yup.string().required(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  let habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n  };\n  console.log(\"in save habit\");\n\n  const response = await habitService.saveHabit(habitData);\n\n  console.log(response);\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst types = [\n  {\n    value: \"checkbox\",\n    label: \"Check Box\",\n  },\n  {\n    value: \"text\",\n    label: \"Text\",\n  },\n  {\n    value: \"number\",\n    label: \"Number\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nconst colors = [\n  {\n    value: \"red\",\n    label: \"Red\",\n  },\n  {\n    value: \"blue\",\n    label: \"Blue\",\n  },\n  {\n    value: \"black\",\n    label: \"Black\",\n  },\n  {\n    value: \"green\",\n    label: \"Green\",\n  },\n];\n\nconst Form = () => {\n  const [habit, setHabit] = useState(null);\n  const classes = useStyles();\n\n  useEffect(() => {}, []);\n\n  return (\n    <Card className={classes.root}>\n      <h2>Add New Habit</h2>\n      <Formik\n        initialValues={{\n          category: \"General\",\n          habitName: \"\",\n          types: \"checkbox\",\n          color: \"black\",\n        }}\n        onSubmit={(data) => {\n          console.log(data);\n          setHabit(data);\n          saveHabit(data);\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleSubmit, handleChange, handleBlur }) => (\n          <form onSubmit={handleSubmit}>\n            <div className={classes.root}>\n              <MySelectField\n                value={values.category}\n                select\n                label=\"Category\"\n                name=\"category\"\n                options={categories}\n              />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Habit Name\" name=\"habitName\" type=\"input\" />\n            </div>\n\n            <div className={classes.root}>\n              <MySelectField\n                value={values.types}\n                select\n                label=\"Types\"\n                name=\"types\"\n                options={types}\n              />\n            </div>\n\n            <div className={classes.root}>\n              <MySelectField\n                value={values.color}\n                select\n                label=\"Color\"\n                name=\"color\"\n                options={colors}\n              />\n            </div>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save Habit\n              </Button>\n            </div>\n\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </form>\n        )}\n      </Formik>\n    </Card>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <nav>\n        <React.Fragment>\n          <NavLink\n            style={{\n              textDecoration: \"none\",\n              padding: \"20px\",\n              color: \"grey\",\n              fontSize: \"25px\",\n            }}\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"26px\",\n            }}\n            to=\"/\"\n            exact\n          >\n            Home\n          </NavLink>\n          <NavLink\n            style={{\n              textDecoration: \"none\",\n              padding: \"20px\",\n              color: \"grey\",\n              fontSize: \"25px\",\n            }}\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"26px\",\n            }}\n            to=\"/form\"\n          >\n            Form\n          </NavLink>\n        </React.Fragment>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store/habitStore\";\nimport { Home } from \"./pages\";\nimport { AddHabit } from \"./pages/addHabit\";\nimport Form from \"./components/form\";\nimport NavBar from \"./components/navBar\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Store>\n        <NavBar />\n        <main className=\"container-sm\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/addHabit\" component={AddHabit} />\n            <Route path=\"/form\" component={Form} />\n          </Switch>\n        </main>\n      </Store>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}