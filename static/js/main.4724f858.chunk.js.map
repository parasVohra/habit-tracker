{"version":3,"sources":["themes/theme.js","reducer/reducer.js","utilities/tokenMethods.js","services/httpService.js","services/habitService.js","utilities/utilitiesMethods.js","Store/habitStore.js","components/HabitCard/useStyles.js","utilities/updateHabitMethods.js","components/HabitCard/HabitCard.jsx","components/DailyHabitCard/useStyles.js","utilities/calculateStreak.js","components/DailyHabitCard/DailyHabitCard.jsx","components/RenderHabits.jsx","pages/index.jsx","pages/addHabit.jsx","components/FormComponents/BackButton/BackButton.jsx","components/CreateHabitForm/useStyles.js","components/modal.jsx","components/FormComponents/InputLabel/InputLabel.jsx","components/FormComponents/NumberCounter/useStyles.js","reducer/habitFormReducer.js","Store/habitFormContext.js","components/FormComponents/NumberCounter/NumberCounter.jsx","components/CreateHabitForm/HabitForm.jsx","components/CreateHabitForm/CreateHabitForm.jsx","services/authServices.js","components/auth/signUpForm.jsx","components/auth/signInForm.jsx","components/BottomNav/useStyles.js","components/BottomNav/BottomNav.jsx","components/navBar.jsx","components/auth/signOut.jsx","components/auth/protectedRoutes.jsx","components/Summary/useStyles.js","components/Summary/Summary.jsx","components/SummaryDetails/SummaryDetails.jsx","components/UpdateHabit/useStyles.js","components/UpdateHabit/UpdateHabit.jsx","components/HabitStats/HabitStats.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","type","primary","main","secondary","argumentColor","red","green","blue","purple","yellow","shape","borderRadius","overrides","MuiPickersBasePicker","container","padding","pickerView","minWidth","MuiPaper","root","backgroundColor","MuiPickersCalendarHeader","switchHeader","color","dayLabel","margin","MuiPickersDay","day","daySelected","Reducer","state","action","payload","habits","category","habitsNameList","habitRestructure","error","habitStatus","Object","assign","currentDate","weekStartDate","weekEndDate","token","userInfo","isAuthenticated","isLoading","currentWeekDates","habitView","tokenService","tokenKey","config","localStorage","setItem","getItem","getToken","removeItem","this","decodeJwt","axios","interceptors","response","use","status","console","log","Promise","reject","request","TokenService","headers","Authorization","get","post","put","delete","data","a","http","apiUrl","saveHabit","getHabits","updateHabitStatus","updateIsTracked","updateHabitContent","fetchHabitData","habitService","extractHabitNames","habitObject","map","habit","habitName","extractCategoriesAndRestructureHabits","categories","h","hasOwnProperty","push","resolve","getTodayDate","date","Date","getWeekStartDate","startOfWeek","getWeekEndDate","endOfWeek","processHabitStatus","isHabitComplete","forEach","i","dateCounter","addDays","formatDate","format","habitTrack","filter","d","length","isFullyComplete","isPartialComplete","done","percentageDone","calculateHabitDonePercentage","dailyGoal","initialState","hasToken","Context","createContext","Store","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","display","alignItems","justifyContent","marginTop","titleText","habitContainer","maxWidth","minHeight","textGrey","textWhite","habitTitleBox","width","grey","border","borderColor","white","black","selectedDate","unSelectedDate","pink","backgroundYellow","datesBox","height","textAlign","lineHeight","updateTrackObjToFullyComplete","trackObj","updateStatusObjToFullyComplete","statusObj","isHabitFullyDone","clickedHabitStatus","updateLocalHabitStatus","updatedStatusObj","index","newStatus","isHabitDailyGoalMetAfterClick","dailyGoalOfCurrentHabit","updateStatusObjToPartialComplete","currentGoal","updateTrackObjToPartialComplete","currentGoalCount","HabitCard","classes","useContext","todayDayIndex","getDay","dateColor","isDateInFuture","dateIndex","dateClasses","selected","background","cursor","boxShadow","unSelected","noPointer","pointerEvents","pointer","handleClick","id","_id","updateStatus","HabitService","alert","SelectedDate","dateC","pointerClass","onClick","e","className","justDate","UnSelectedDate","Container","Grid","direction","xs","sm","md","elevation","component","Paper","item","Typography","align","variant","weeklyGoal","textStreak","doneText","paddingLeft","calculateLongestStreak","sortByDates","reduce","streak","previousDate","preDate","parse","currDate","differenceInDays","tempStartDate","count","longestStreak","Math","max","startDate","endDate","tempEndDate","calculateCurrentStreak","completedHabits","isFullComplete","filterCompletedHabits","currentStreak","sortedDates","isLatestDateIsYesterday","isYesterday","isLatestDateIsToday","isToday","trackData","option","sort","b","DailyHabitCard","useState","setStreak","useEffect","borderStyle","borderWidth","flexGrow","noHabit","paper","table","RenderHabits","isHabitEmpty","setIsHabitEmpty","JSON","stringify","formatDates","eachDayOfInterval","start","end","fullDate","fetchCurrentWeekDates","Home","isNextDisable","setHabitView","viewType","habitObj","habitNameList","todayDate","hydrateStoreState","Fragment","title","justify","Button","style","disabled","activeButton","disabledButton","CircularProgress","marginBottom","checkbox","spinIt","AddHabit","backIcon","position","left","top","icon","fill","BackButton","history","useHistory","goBack","bullet","transform","form","flexDirection","pos","submitButton","directionRow","buttonMargin","colorWrapper","colorBox","activeColor","colorCircle","boxSizing","lightblue","orange","modalRoot","document","getElementById","Modal","elRef","useRef","current","createElement","appendChild","removeChild","createPortal","label","FormInputLabel","InputLabel","countText","HabitFormReducer","habitId","weeklyInputType","habitUnit","habitUnitType","trackType","FormContext","HabitFormContext","NumberCounter","habitForm","isNegCountDisabled","setCountDisabled","isPosCountDisabled","setPosCount","handleCounter","isCountZero","isCountValid","Fab","size","MyTextField","placeholder","onChange","props","func","useField","field","meta","errorText","touched","TextField","helperText","validationSchema","yup","required","trim","min","nullable","types","habitData","inputType","updateHabit","newHabitData","colorCode","name","inputTypes","HabitForm","isSubmitting","setSubmitting","msg","setMsg","pathname","useLocation","habitSaved","setHabitSaved","setCategoryIndex","setColorIndex","weeklyGoalInputType","setWeeklyGoalInputType","unityType","setUnitType","setTrackType","setHabitText","showModal","setModal","handleWeeklyInput","handleUnitInput","toggleModal","initialValues","onSubmit","updateRes","res","enableReinitialize","event","target","handleCategoryClick","handleColorClick","Card","raised","CardContent","CreateHabitForm","signOut","removeToken","signUp","signIn","firstName","lastName","email","password","termsOfServices","oneOf","MyCheckBox","FormControlLabel","labelPlacement","control","Checkbox","input","singUpWrapper","link","textDecoration","textInput","SignUpForm","AuthService","setToken","userInfoObj","getUserInfo","responseError","CardHeader","to","SignInForm","setError","topProfileButton","right","bottomAddButton","bottom","bottomSummaryButton","bottomContainer","zIndex","bottomGrid","addIcon","marginRight","BottomNav","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","activeStyle","aria-label","menuItem","optionText","marginLeft","NavBar","anchorEl","setAnchorEl","isAuth","setAuth","handleClose","currentTarget","Menu","keepMounted","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","SignOut","timeOut","setTimeout","clearTimeout","ProtectedRoutes","path","Component","render","rest","location","box","statsText","getCompletedHabitCount","acc","getPartiallyCompletedHabitCount","Summary","handleEditClick","SummaryDetails","UpdateHabit","HabitStats","labels","datasets","options","maintainAspectRatio","App","basename","exact","SignUp","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.4724f858.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\",\"Open Sans\", \"sans-serif\", ',\n    fontSize: 12,\n    button: {\n      textTransform: \"none\",\n      fontWeight: 700,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#303038\" },\n    argumentColor: {\n      red: { main: \"#FF6B7A\" },\n      green: { main: \"#50D890\" },\n      blue: { main: \"#4EB1CB\" },\n      purple: { main: \"#5666F3\" },\n      yellow: { main: \"#FFB427\" },\n    },\n  },\n  shape: {\n    borderRadius: 5,\n  },\n  overrides: {\n    MuiPickersBasePicker: {\n      container: {\n        padding: \"15px\",\n      },\n      pickerView: {\n        minWidth: \"30rem\",\n      },\n    },\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#303038\",\n      },\n    },\n    MuiPickersCalendarHeader: {\n      switchHeader: {\n        color: \"#ff5630\",\n      },\n      dayLabel: {\n        margin: \"0px 15px\",\n      },\n    },\n    MuiPickersDay: {\n      day: {\n        margin: \"0px 15px\",\n      },\n      daySelected: {\n        color: \"#fff\",\n        backgroundColor: \"#ff5630\",\n      },\n    },\n  },\n});\n","const Reducer = (state, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case \"SET_HABIT\":\n            return {\n                ...state,\n                habits: payload,\n            };\n        case \"SET_CATEGORY\":\n            return {\n                ...state,\n                category: payload,\n            };\n        case \"SET_HABIT_NAME_LIST\":\n            return {\n                ...state,\n                habitsNameList: payload,\n            };\n        case \"SET_HABIT_RESTRUCTURE\":\n            return {\n                ...state,\n                habitRestructure: payload,\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: [...state.error, payload],\n            };\n        case \"SET_HABIT_STATUS\":\n            return {\n                ...state,\n                habitStatus: Object.assign({}, state.habitStatus, payload),\n            };\n        case \"SET_CURRENT_DATE\":\n            return {\n                ...state,\n                currentDate: payload,\n            };\n        case \"SET_WEEK_START_DATE\":\n            return {\n                ...state,\n                weekStartDate: payload,\n            };\n        case \"SET_WEEK_END_DATE\":\n            return {\n                ...state,\n                weekEndDate: payload,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: payload,\n            };\n        case \"SET_USER_INFO\":\n            return {\n                ...state,\n                userInfo: payload,\n            };\n        case \"SET_IS_AUTHENTICATED\":\n            return {\n                ...state,\n                isAuthenticated: payload,\n            };\n        case \"SET_IS_LOADING\":\n            return {\n                ...state,\n                isLoading: payload,\n            };\n        case \"SET_CURRENT_WEEK_DATES\":\n            return {\n                ...state,\n                currentWeekDates: payload,\n            };\n        case \"SET_HABIT_VIEW\":\n            return {\n                ...state,\n                habitView: payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;\n","import config from \"../config.json\";\nimport decodeJwt from \"jwt-decode\";\nconst tokenService = {};\n\ntokenService.setToken = function setTokenToLocalStorage(token) {\n  let tokenKey = config.tokenKey;\n  localStorage.setItem(tokenKey, token);\n};\n\ntokenService.getToken = function getTokenFromLocalStorage(tokenKey) {\n  return localStorage.getItem(tokenKey);\n};\n\ntokenService.hasToken = function checkTokenIsPresent(tokenKey) {\n  return tokenService.getToken(tokenKey) !== null ? true : false;\n};\n\ntokenService.removeToken = function removeTokenFromLocalStorage(tokenKey) {\n  localStorage.removeItem(tokenKey);\n};\n\ntokenService.getUserInfo = function decodeUserInfoFromToken(tokenKey) {\n  const token = this.getToken(tokenKey);\n  const userInfoObj = decodeJwt(token);\n  return userInfoObj;\n};\n\nexport default tokenService;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport { tokenKey, apiUrl } from \"../config.json\";\nimport TokenService from \"../utilities/tokenMethods\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"An unexpected error occurred , logging the error\", error);\n  }\n  return Promise.reject(error);\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getToken(tokenKey);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      config.headers.Authorization = null;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function saveHabit(data) {\n  return await http.post(apiUrl + \"saveHabit\", data);\n}\nexport async function getHabits() {\n  return await http.get(apiUrl + \"getHabits\");\n}\n\nexport async function updateHabitStatus(data) {\n  return await http.post(apiUrl + \"updateHabit\", data);\n}\nexport async function updateHabitContent(data) {\n  return await http.post(apiUrl + \"updateHabitContent\", data);\n}\n\nexport async function updateIsTracked(data) {\n  return await http.post(apiUrl + \"updateIsTracked\", data);\n}\n\nexport default {\n  saveHabit,\n  getHabits,\n  updateHabitStatus,\n  updateIsTracked,\n  updateHabitContent,\n};\n","/**\n *  Utilities methods\n */\n\n//Dependencies\nimport { startOfWeek, endOfWeek, addDays, format } from \"date-fns\";\nimport habitService from \"../services/habitService\";\n\n// fetch data from habit server\nexport async function fetchHabitData() {\n  let response = await habitService.getHabits();\n  return response.data;\n}\n\n/**\n *\n * @param {*} habitObject\n * @returns habitsNameList\n */\nexport function extractHabitNames(habitObject) {\n  return habitObject.map((habit) => {\n    return habit.habitName;\n  }, []);\n}\n\n/**\n *\n * @param {*} habits\n * @returns habit restructured object and categories array\n */\nexport function extractCategoriesAndRestructureHabits(habits) {\n  let habitRestructure = {};\n  let categories = [];\n  // if category is present in object\n  if (habits && typeof habits === \"object\") {\n    for (let h of habits) {\n      if (!habitRestructure.hasOwnProperty(h.category)) {\n        categories.push(h.category);\n        habitRestructure[h.category] = [];\n        habitRestructure[h.category].push(h);\n      } else {\n        habitRestructure[h.category].push(h);\n      }\n    }\n  }\n  return Promise.resolve([habitRestructure, categories]);\n}\n\nexport function getTodayDate() {\n  const date = new Date();\n  return Promise.resolve(date);\n}\n\n// get start of week from date fns\nexport function getWeekStartDate(date = new Date()) {\n  let weekStartDate = startOfWeek(date);\n  return weekStartDate;\n}\n\n// get end of week from date fns\nexport function getWeekEndDate(date = new Date()) {\n  let weekEndDate = endOfWeek(date);\n  return weekEndDate;\n}\n\n/**\n *\n * @param {Array} habits\n * @param {Date} weekStartDate\n * @returns\n */\nexport function processHabitStatus(habits, weekStartDate) {\n  const FIRST_WEEKDAY_INDEX = 0;\n  const LAST_WEEKDAY_INDEX = 6;\n  const isHabitComplete = {};\n\n  habits.forEach((habit) => {\n    const habitName = habit.habitName;\n    isHabitComplete[habitName] = [];\n\n    for (let i = FIRST_WEEKDAY_INDEX; i <= LAST_WEEKDAY_INDEX; i++) {\n      let dateCounter = addDays(weekStartDate, i);\n      let formatDate = format(dateCounter, \"ddMMyyyy\");\n      let status = habit.habitTrack.filter((d) => d.date === formatDate);\n      if (status.length > 0) {\n        isHabitComplete[habitName][i] = {\n          isFullyComplete: status[0].isFullyComplete,\n          isPartialComplete: status[0].isPartialComplete,\n          done: status[0].done,\n          percentageDone: calculateHabitDonePercentage(\n            status[0].done,\n            habit.dailyGoal\n          ),\n        };\n      } else {\n        isHabitComplete[habitName][i] = {\n          isFullyComplete: false,\n          isPartialComplete: false,\n          done: 0,\n          percentageDone: 0,\n        };\n      }\n    }\n  });\n\n  return Promise.resolve(isHabitComplete);\n}\n\nexport function calculateHabitDonePercentage(done, dailyGoal) {\n  return 100 * (done / dailyGoal);\n}\n\nexport function isFullyComplete(habit) {\n  if (habit.dailyGoal === 1) return true;\n}\n\nexport function isPartialComplete(habit) {\n  if (habit.dailyGoal === 1) return true;\n}\n\n/**\n *\n * @param {array} habitTrack\n * @returns {number} count of partially completed habits\n */\nexport function calculatePartiallyCompletedHabitCount(habitTrack) {\n  //write reducer function to count where partial completed is true\n  let result = habitTrack.reduce(\n    (acc, habit) => {\n      if (habit.isPartialComplete) {\n        acc.count = acc.count + 1;\n      }\n      return acc;\n    },\n    {\n      count: 0,\n    }\n  );\n  return result;\n}\n/**\n *\n * @param {array} habitTrack\n * @returns {object} count of fully completed habits\n */\nexport function calculateFullyCompletedHabitCount(habitTrack) {\n  let result = habitTrack.reduce(\n    (acc, habit) => {\n      if (habit.isFullyComplete) {\n        acc.count = acc.count + 1;\n      }\n      return acc;\n    },\n    {\n      count: 0,\n    }\n  );\n  return result;\n}\n\nexport function calculateHabitStrength(habitTrack) {\n  // calculate past 66 day date from current day\n  // then count how many times habit partially performed since last 66 days\n  // percentage is = (count / 66 ) * 100\n}\n","import { createContext, useReducer } from \"react\";\nimport Reducer from \"../reducer/reducer\";\nimport {\n  getWeekStartDate,\n  getWeekEndDate,\n} from \"../utilities/utilitiesMethods\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nconst initialState = {\n  habits: [],\n  category: [],\n  habitsNameList: [],\n  habitRestructure: {},\n  habitStatus: [],\n  error: [],\n  currentDate: new Date(),\n  weekStartDate: getWeekStartDate() || new Date(),\n  weekEndDate: getWeekEndDate() || new Date(),\n  token: \"\",\n  isAuthenticated: tokenService.hasToken(\"habit_token\"),\n  userInfo: {},\n  isLoading: true,\n  habitView: \"daily\",\n  currentWeekDates: [],\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"7rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textWhite: {\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    color: \"white\",\n  },\n  grey: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#6c6c72\",\n    borderColor: \"#6c6c72\",\n  },\n  white: {\n    backgroundColor: \"#ffffff\",\n  },\n  black: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#000000\",\n    borderColor: \"#000000\",\n  },\n  yellow: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  selectedDate: {},\n  unSelectedDate: {},\n  blue: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#5666F3\",\n    borderColor: \"#5666F3\",\n  },\n  green: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    backgroundColor: \"#50D890\",\n    borderColor: \"#50D890\",\n  },\n  pink: {\n    color: \"#ffffff\",\n    border: \"2px solid\",\n    borderRadius: \"2rem\",\n    borderColor: \"#D96383\",\n    backgroundColor: \"#D96383\",\n  },\n  backgroundYellow: {\n    backgroundColor: \"#FFB427\",\n    borderColor: \"#FFB427\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n}));\n\nexport default useStyles;\n","import { calculateHabitDonePercentage } from \"./utilitiesMethods\";\n\nexport function updateTrackObjToFullyComplete({ trackObj, dailyGoal }) {\n  trackObj.isFullyComplete = true;\n  trackObj.isPartialComplete = true;\n  trackObj.done = dailyGoal;\n\n  return trackObj;\n}\n\nexport function updateStatusObjToFullyComplete({ dailyGoal }) {\n  const statusObj = {};\n  statusObj.isFullyComplete = true;\n  statusObj.isPartialComplete = true;\n  statusObj.done = dailyGoal;\n  statusObj.percentageDone = 100;\n  return statusObj;\n}\n\nexport function isHabitFullyDone(clickedHabitStatus, habit) {\n  return clickedHabitStatus.done === habit.dailyGoal;\n}\n\nexport function updateLocalHabitStatus({\n  habit,\n  habitStatus,\n  updatedStatusObj,\n  dispatch,\n  index,\n}) {\n  const newStatus = { ...habitStatus };\n  newStatus[`${habit.habitName}`][index] = updatedStatusObj;\n  dispatch({ type: \"SET_HABIT_STATUS\", payload: newStatus });\n  console.log(habitStatus);\n}\n\nexport function isHabitDailyGoalMetAfterClick(\n  dailyGoalOfCurrentHabit,\n  clickedHabitStatus\n) {\n  return dailyGoalOfCurrentHabit === clickedHabitStatus.done + 1;\n}\n\nexport function updateStatusObjToPartialComplete({ currentGoal, dailyGoal }) {\n  const statusObj = {};\n  statusObj.isFullyComplete = false;\n  statusObj.isPartialComplete = true;\n  statusObj.done = currentGoal + 1;\n  statusObj.percentageDone = calculateHabitDonePercentage(\n    currentGoal + 1,\n    dailyGoal\n  );\n  return statusObj;\n}\n\nexport function updateTrackObjToPartialComplete({\n  trackObj,\n  currentGoalCount,\n}) {\n  trackObj.isPartialComplete = true;\n  trackObj.done = currentGoalCount + 1;\n  return trackObj;\n}\n","import React, { Fragment, useContext } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getDay, format } from \"date-fns\";\nimport HabitService from \"../../services/habitService\";\nimport {\n    updateLocalHabitStatus,\n    updateStatusObjToFullyComplete,\n    updateStatusObjToPartialComplete,\n    updateTrackObjToFullyComplete,\n    updateTrackObjToPartialComplete,\n    isHabitDailyGoalMetAfterClick,\n    isHabitFullyDone,\n} from \"../../utilities/updateHabitMethods\";\n\nfunction HabitCard(habits) {\n    const classes = useStyles();\n    const habit = habits.habit;\n    const [state, dispatch] = useContext(Context);\n    const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const todayDayIndex = getDay(state.currentDate);\n    console.log(\"weelky today index\", todayDayIndex);\n    const dateColor = {\n        color: habit.color,\n    };\n    console.log(\"state\", state);\n\n    const isDateInFuture = (todayDayIndex, dateIndex) => {\n        return dateIndex <= todayDayIndex ? true : false;\n    };\n\n    const dateClasses = (dateColor, index) =>\n        makeStyles(() => ({\n            selected: {\n                marginTop: \"0.2rem\",\n                height: \"2rem\",\n                width: \"2rem\",\n                textAlign: \"center\",\n                lineHeight: \"2rem\",\n                color: \"#ffffff\",\n                border: \"2px solid\",\n                borderRadius: \"2rem\",\n                //backgroundColor: dateColor.color,\n                background: `linear-gradient(to right, ${\n                    dateColor.color\n                } 0%,  ${dateColor.color}  ${\n                    state.habitStatus[habit.habitName][index].percentageDone\n                }%, rgba(0,0,0,0) ${\n                    state.habitStatus[habit.habitName][index].percentageDone\n                }%,rgba(0,0,0,0) 100%)`,\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n                boxShadow: \"1px 1px 4px 0px #000000ab\",\n            },\n            unSelected: {\n                marginTop: \"0.2rem\",\n                height: \"2rem\",\n                width: \"2rem\",\n                textAlign: \"center\",\n                lineHeight: \"2rem\",\n                color: dateColor.color,\n                border: \"2px solid\",\n                borderRadius: \"2rem\",\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n            },\n            noPointer: {\n                pointerEvents: \"none\",\n            },\n            pointer: {\n                pointerEvents: \"all\",\n            },\n        }));\n\n    function handleClick(habit, index) {\n        const clickedHabitStatus =\n            state.habitStatus[`${habit.habitName}`][index];\n        const dailyGoalOfCurrentHabit = habit.dailyGoal;\n        const trackObj = {\n            id: habit._id,\n            date: state.currentWeekDates[index].formatDate,\n            day: state.currentWeekDates[index].day,\n            data: \"\",\n            isFullyComplete: false,\n            isPartialComplete: false,\n            done: 0,\n        };\n        console.log(clickedHabitStatus);\n        if (isHabitFullyDone(clickedHabitStatus, habit)) {\n            const resetStatusObj = {\n                isFullyComplete: false,\n                isPartialComplete: false,\n                done: 0,\n                percentageDone: 0,\n            };\n            console.log(\"before status\", state.habitStatus);\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: resetStatusObj,\n                dispatch,\n                index,\n            });\n            updateStatus(trackObj);\n            return;\n        }\n        if (\n            !isHabitDailyGoalMetAfterClick(\n                dailyGoalOfCurrentHabit,\n                clickedHabitStatus\n            )\n        ) {\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: updateStatusObjToPartialComplete({\n                    currentGoal: clickedHabitStatus.done,\n                    dailyGoal: dailyGoalOfCurrentHabit,\n                }),\n                dispatch,\n                index,\n            });\n\n            updateStatus(\n                updateTrackObjToPartialComplete({\n                    trackObj,\n                    currentGoalCount: clickedHabitStatus.done,\n                })\n            );\n            return;\n        }\n        updateLocalHabitStatus({\n            habit,\n            habitStatus: state.habitStatus,\n            updatedStatusObj: updateStatusObjToFullyComplete({\n                dailyGoal: habit.dailyGoal,\n            }),\n            dispatch,\n            index,\n        });\n\n        updateStatus(\n            updateTrackObjToFullyComplete({\n                trackObj,\n                dailyGoal: habit.dailyGoal,\n            })\n        );\n        console.log(clickedHabitStatus);\n    }\n\n    const updateStatus = async (data) => {\n        try {\n            let response = await HabitService.updateHabitStatus(data);\n\n            if (response.status === 201) {\n                //alert(\"Habit Status updated\");\n            }\n        } catch {\n            alert(\"Something went wrong, Please try again\");\n        }\n    };\n\n    function SelectedDate(index) {\n        const dateC = dateClasses(dateColor, index)();\n        const isClickable = isDateInFuture(todayDayIndex, index);\n        const pointerClass = isClickable ? dateC.pointer : dateC.noPointer;\n\n        return (\n            <div\n                id={`${habit.habitName},${index}`}\n                onClick={(e) => handleClick(habit, index)}\n                className={`${dateC.selected} ${pointerClass}`}\n            >\n                {state.currentWeekDates[index].justDate}\n            </div>\n        );\n    }\n\n    function UnSelectedDate(index) {\n        const dateC = dateClasses(dateColor, index)();\n        const isClickable = isDateInFuture(todayDayIndex, index);\n        const pointerClass = isClickable ? dateC.pointer : dateC.noPointer;\n\n        return (\n            <div\n                id={`${habit.habitName},${index}`}\n                onClick={(e) => handleClick(habit, index)}\n                className={`${dateC.unSelected} ${pointerClass}`}\n            >\n                {state.currentWeekDates[index].justDate}\n            </div>\n        );\n    }\n    return (\n        <Container className={classes.root}>\n            <Grid\n                container\n                direction=\"column\"\n                xs={12}\n                sm={12}\n                md={12}\n                elevation={6}\n                className={classes.habitContainer}\n                component={Paper}\n            >\n                <Grid item container className={classes.habitTitleBox}>\n                    <Grid item xs={6}>\n                        <Typography align=\"left\" variant=\"h5\">\n                            {habit.habitName}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography\n                            align=\"right\"\n                            className={classes.textGrey}\n                            variant=\"subtitle1\"\n                        >\n                            {habit.weeklyGoal.value} times a week\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid item container direction=\"row\">\n                    {weekDays.map((day, index) => {\n                        return (\n                            <Fragment key={index}>\n                                <Grid item className={classes.titleText}>\n                                    {todayDayIndex === index ? (\n                                        <Typography\n                                            align=\"center\"\n                                            variant=\"h6\"\n                                            className={classes.textWhite}\n                                        >{`${day}`}</Typography>\n                                    ) : (\n                                        <Typography\n                                            align=\"center\"\n                                            variant=\"h6\"\n                                            className={classes.textGrey}\n                                        >{`${day}`}</Typography>\n                                    )}\n\n                                    {state.habitStatus[habit.habitName][index]\n                                        ? SelectedDate(index)\n                                        : UnSelectedDate(index)}\n                                </Grid>\n                            </Fragment>\n                        );\n                    })}\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default HabitCard;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"15rem\",\n    padding: \"2px\",\n  },\n  titleText: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    maxWidth: \"50rem\",\n    minHeight: \"4rem\",\n    margin: \"auto\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textStreak: {\n    color: \"#FFFFFF\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n  doneText: {\n    paddingLeft: \"0.6rem\",\n    color: \"#6c6c72\",\n  },\n}));\n\nexport default useStyles;\n","import { parse, differenceInDays, isYesterday, isToday } from \"date-fns\";\n\n// const testData = [\n//   { date: \"11112021\", isComplete: true },\n//   { date: \"10112021\", isComplete: true },\n//   { date: \"08112021\", isComplete: true },\n//   { date: \"12102021\", isComplete: true },\n//   { date: \"11102021\", isComplete: true },\n//   { date: \"09102021\", isComplete: true },\n//   { date: \"06102021\", isComplete: true },\n// ];\n\n/**\n *\n * @param {Array} habitTrack\n * @returns Object with streak data\n */\nfunction calculateLongestStreak(habitTrack) {\n  const sortedDates = sortByDates(habitTrack, \"asc\");\n  let result = sortedDates.reduce(\n    (streak, habit) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = habit.date;\n      } else {\n        if (habit.isPartialComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(habit.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(currDate, preDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n\n            streak.count = streak.count + 1;\n            streak.longestStreak = Math.max(streak.count, streak.longestStreak);\n            if (streak.count >= streak.longestStreak) {\n              streak.startDate = streak.tempStartDate;\n              streak.endDate = currDate;\n            }\n          } else {\n            if (streak.count >= streak.longestStreak) {\n              streak.endDate = preDate;\n            }\n            streak.tempStartDate = null;\n\n            streak.count = 1;\n          }\n\n          streak.previousDate = habit.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      longestStreak: 0,\n      previousDate: null,\n      tempStartDate: null,\n      tempEndDate: null,\n      startDate: null,\n      endDate: null,\n    }\n  );\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @description\n * This function will  calculate the current streak of a habit\n * First sort the habit tracker date in descending order\n * check if the latest date of habit tracked data is yesterday || today\n * run reducer to calculate the count of the continues streak\n * @returns Object with streak data\n */\nfunction calculateCurrentStreak(habitTrack) {\n  const completedHabits = filterCompletedHabits(habitTrack);\n  if (completedHabits.length) {\n    const sortedDates = sortByDates(completedHabits, \"desc\");\n    const isLatestDateIsYesterday = isYesterday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n    const isLatestDateIsToday = isToday(\n      parse(sortedDates[0].date, \"ddMMyyyy\", new Date())\n    );\n\n    if (isLatestDateIsYesterday || isLatestDateIsToday) {\n      return calculateRecentContinuousStreak(sortedDates);\n    }\n\n    if (!isLatestDateIsToday && !isLatestDateIsYesterday) {\n      return {\n        currentStreak: 0,\n        startDate: null,\n        endDate: null,\n      };\n    }\n  } else {\n    return {\n      currentStreak: 0,\n      startDate: null,\n      endDate: null,\n    };\n  }\n}\n\n/**\n *\n * @param {Array} trackData\n * @returns\n */\nfunction calculateRecentContinuousStreak(trackData) {\n  const result = trackData.reduce(\n    (streak, trackData) => {\n      if (streak.previousDate === null) {\n        streak.previousDate = trackData.date;\n      } else {\n        if (trackData.isFullComplete || trackData.isPartialComplete) {\n          let preDate = parse(streak.previousDate, \"ddMMyyyy\", new Date());\n          let currDate = parse(trackData.date, \"ddMMyyyy\", new Date());\n          let diff = differenceInDays(preDate, currDate);\n          if (diff === 1) {\n            if (streak.tempStartDate === null) {\n              streak.tempStartDate = preDate;\n            }\n            streak.count += 1;\n            streak.currentStreak = Math.max(streak.count, streak.currentStreak);\n            streak.startDate = currDate;\n            streak.endDate = streak.tempStartDate;\n          } else {\n            return streak;\n          }\n          streak.previousDate = trackData.date;\n        }\n      }\n      return streak;\n    },\n    {\n      count: 1,\n      tempStartDate: null,\n      previousDate: null,\n      currentStreak: 1,\n      startDate: null,\n      endDate: null,\n    }\n  );\n\n  return result;\n}\n\n/**\n *\n * @param {Array} habitTrack\n * @param {String} option  \"asc\" || \"desc\"\n * @returns Sorted Array by dates\n */\nfunction sortByDates(habitTrack, option) {\n  if (option === \"asc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(a.date, \"ddMMyyyy\", new Date()) -\n        parse(b.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n  if (option === \"desc\") {\n    const res = habitTrack.sort(\n      (a, b) =>\n        parse(b.date, \"ddMMyyyy\", new Date()) -\n        parse(a.date, \"ddMMyyyy\", new Date())\n    );\n    return res;\n  }\n}\n\nfunction filterCompletedHabits(habitTrack) {\n  return habitTrack.filter(\n    (habit) => habit.isFullComplete || habit.isPartialComplete\n  );\n}\n\nexport {\n  calculateLongestStreak,\n  calculateCurrentStreak,\n  calculateRecentContinuousStreak,\n  sortByDates,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getDay, format } from \"date-fns\";\nimport { calculateCurrentStreak } from \"../../utilities/calculateStreak\";\nimport HabitService from \"../../services/habitService\";\nimport {\n    updateLocalHabitStatus,\n    updateStatusObjToFullyComplete,\n    updateStatusObjToPartialComplete,\n    updateTrackObjToFullyComplete,\n    updateTrackObjToPartialComplete,\n    isHabitDailyGoalMetAfterClick,\n    isHabitFullyDone,\n} from \"../../utilities/updateHabitMethods\";\nimport { compose } from \"ramda\";\n\nfunction DailyHabitCard({ habit }) {\n    const classes = useStyles();\n    const [state, dispatch] = useContext(Context);\n    const todayDayIndex = getDay(new Date());\n    console.log(todayDayIndex, \"  ; daily   today index\");\n    const [streak, setStreak] = useState({\n        currentStreak: 0,\n        longestStreak: 0,\n        previousDate: null,\n    });\n    const dateColor = {\n        color: habit.color,\n    };\n\n    useEffect(() => {\n        if (state.habits) {\n            setStreak(calculateCurrentStreak(habit.habitTrack));\n        }\n    }, [habit.habitTrack, state.habits]);\n\n    const dateClasses = (dateColor) =>\n        makeStyles(() => ({\n            selected: {\n                alignItems: \"center\",\n                minWidth: \"20rem\",\n                maxWidth: \"50rem\",\n                minHeight: \"4rem\",\n                margin: \"auto\",\n                // backgroundColor: \"#303038\",\n                borderRadius: \"10px\",\n                padding: \"0.5rem\",\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n                //backgroundColor: dateColor.color,\n                background: `linear-gradient(to right, ${\n                    dateColor.color\n                } 0%,  ${dateColor.color}  ${\n                    state.habitStatus[habit.habitName][todayDayIndex]\n                        .percentageDone\n                }%, rgba(0,0,0,0) ${\n                    state.habitStatus[habit.habitName][todayDayIndex]\n                        .percentageDone\n                }%,rgba(0,0,0,0) 100%)`,\n                borderColor: dateColor.color,\n                cursor: \"pointer\",\n                boxShadow: \"1px 1px 10px 0px #000000ab\",\n            },\n            unSelected: {\n                alignItems: \"center\",\n                minWidth: \"20rem\",\n                maxWidth: \"50rem\",\n                minHeight: \"4rem\",\n                margin: \"auto\",\n                backgroundColor: \"#303038\",\n                borderRadius: \"10px\",\n                borderColor: dateColor.color,\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n                padding: \"0.5rem\",\n                cursor: \"pointer\",\n            },\n        }));\n\n    const dateC = dateClasses(dateColor)();\n\n    function handleClick(habit, index) {\n        // getting status of clicked habit\n        const clickedHabitStatus =\n            state.habitStatus[`${habit.habitName}`][index];\n        // get daily goal of habit\n        const dailyGoalOfCurrentHabit = habit.dailyGoal;\n\n        // initializing track obj\n        const trackObj = {\n            id: habit._id,\n            date: format(state.currentDate, \"ddMMyyyy\"),\n            day: format(state.currentDate, \"EEE\"),\n            data: \"\",\n            isFullyComplete: false,\n            isPartialComplete: false,\n            done: 0,\n        };\n\n        if (isHabitFullyDone(clickedHabitStatus, habit)) {\n            const resetStatusObj = {\n                isFullyComplete: false,\n                isPartialComplete: false,\n                done: 0,\n                percentageDone: 0,\n            };\n\n            // mutate the habit status object\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: resetStatusObj,\n                dispatch,\n                index,\n            });\n\n            updateStatus(trackObj);\n            return;\n        }\n        // if habit does not meet daily goal\n        // if the habit daily goal meet after updating clicking the habit -> update update Partial and fully complete status obj\n        if (\n            !isHabitDailyGoalMetAfterClick(\n                dailyGoalOfCurrentHabit,\n                clickedHabitStatus\n            )\n        ) {\n            updateLocalHabitStatus({\n                habit,\n                habitStatus: state.habitStatus,\n                updatedStatusObj: updateStatusObjToPartialComplete({\n                    currentGoal: clickedHabitStatus.done,\n                    dailyGoal: dailyGoalOfCurrentHabit,\n                }),\n                dispatch,\n                index,\n            });\n\n            updateStatus(\n                updateTrackObjToPartialComplete({\n                    trackObj,\n                    currentGoalCount: clickedHabitStatus.done,\n                })\n            );\n            return;\n        }\n        updateLocalHabitStatus({\n            habit,\n            habitStatus: state.habitStatus,\n            updatedStatusObj: updateStatusObjToFullyComplete({\n                dailyGoal: habit.dailyGoal,\n            }),\n            dispatch,\n            index,\n        });\n\n        updateStatus(\n            updateTrackObjToFullyComplete({\n                trackObj,\n                dailyGoal: habit.dailyGoal,\n            })\n        );\n    }\n\n    const updateStatus = async (data) => {\n        try {\n            let response = await HabitService.updateHabitStatus(data);\n\n            if (response.status === 201) {\n                //alert(\"Habit Status updated\");\n            }\n        } catch {\n            alert(\"Something went wrong, Please try again\");\n        }\n    };\n\n    function SelectedDate(index) {\n        return (\n            <Container\n                className={classes.root}\n                onClick={() => handleClick(habit, index)}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    elevation={6}\n                    className={dateC.selected}\n                    component={Paper}\n                    item\n                >\n                    <Grid item container className={classes.habitTitleBox}>\n                        <Grid item xs={6}>\n                            <Typography align=\"left\" variant=\"h5\">\n                                {habit.habitName}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                align=\"right\"\n                                className={classes.textStreak}\n                                variant=\"h5\"\n                            >\n                                {streak.currentStreak} 🔥\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container direction=\"row\">\n                        <Typography\n                            align=\"left\"\n                            variant=\"subtitle2\"\n                            className={classes.doneText}\n                        >\n                            {`DONE ${\n                                state.habitStatus[habit.habitName][index].done\n                            } / ${habit.dailyGoal} `}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n\n    function UnSelectedDate(index) {\n        return (\n            <Container\n                className={classes.root}\n                onClick={() => handleClick(habit, index)}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    elevation={6}\n                    className={dateC.unSelected}\n                    component={Paper}\n                >\n                    <Grid item container className={classes.habitTitleBox}>\n                        <Grid item xs={6}>\n                            <Typography align=\"left\" variant=\"h5\">\n                                {habit.habitName}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                align=\"right\"\n                                className={classes.textStreak}\n                                variant=\"h5\"\n                            >\n                                {streak.currentStreak} 🔥\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container direction=\"row\">\n                        <Typography\n                            align=\"left\"\n                            variant=\"subtitle2\"\n                            className={classes.doneText}\n                        >\n                            DONE: 0 / 2\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n    return state.habitStatus[habit.habitName][todayDayIndex]\n        ? SelectedDate(todayDayIndex)\n        : UnSelectedDate(todayDayIndex);\n}\n\nexport default DailyHabitCard;\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport { format, eachDayOfInterval } from \"date-fns\";\nimport { Context } from \"../Store/habitStore\";\nimport HabitCard from \"./HabitCard/HabitCard\";\nimport DailyHabitCard from \"./DailyHabitCard/DailyHabitCard\";\n\nconst RenderHabits = () => {\n    const [state, dispatch] = useContext(Context);\n    const classes = useStyles();\n    const [isHabitEmpty, setIsHabitEmpty] = useState(false);\n\n    useEffect(() => {\n        if (JSON.stringify(state.habitRestructure) === \"{}\") {\n            setIsHabitEmpty(true);\n        }\n    }, [state.habitRestructure]);\n\n    useEffect(() => {\n        const fetchCurrentWeekDates = () => {\n            const result = eachDayOfInterval({\n                start: state.weekStartDate,\n                end: state.weekEndDate,\n            });\n\n            const formatDates = result.map((date) => {\n                console.log(\"week date:\", date);\n                let intDate = {\n                    justDate: format(date, \"dd\"),\n                    fullDate: date,\n                    formatDate: format(date, \"ddMMyyyy\"),\n                    day: format(date, \"EEE\"),\n                };\n                return intDate;\n            });\n\n            dispatch({ type: \"SET_CURRENT_WEEK_DATES\", payload: formatDates });\n        };\n\n        fetchCurrentWeekDates();\n    }, [state.weekStartDate, state.weekEndDate, dispatch]);\n\n    return (\n        <div className={classes.root}>\n            {state.habitRestructure && !isHabitEmpty ? (\n                <>\n                    {state.habits ? (\n                        state.habits.map((habit, index) => {\n                            return (\n                                <Fragment key={`${habit.habitName}-${index}`}>\n                                    {state.habitView === \"daily\" ? (\n                                        <DailyHabitCard habit={habit} />\n                                    ) : (\n                                        <HabitCard habit={habit} />\n                                    )}\n                                </Fragment>\n                            );\n                        })\n                    ) : (\n                        <div>ss</div>\n                    )}\n                </>\n            ) : (\n                <Typography\n                    align=\"center\"\n                    className={classes.noHabit}\n                    color=\"primary\"\n                >\n                    {`No habits to display. `}\n                </Typography>\n            )}\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    noHabit: {\n        marginTop: \"5rem\",\n    },\n    paper: {\n        padding: \"5px\",\n        textAlign: \"center\",\n        color: \"black\",\n    },\n    table: {\n        minWidth: 350,\n    },\n}));\nexport default RenderHabits;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport {\n  fetchHabitData,\n  extractCategoriesAndRestructureHabits,\n  getTodayDate,\n  getWeekStartDate,\n  getWeekEndDate,\n  extractHabitNames,\n  processHabitStatus,\n} from \"../utilities/utilitiesMethods\";\n\nexport default function Home() {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isNextDisable] = useState(false);\n\n  useEffect(() => {\n    async function hydrateStoreState() {\n      dispatch({ type: \"SET_IS_LOADING\", payload: true });\n      const habitObj = await fetchHabitData();\n\n      dispatch({ type: \"SET_HABIT\", payload: habitObj });\n      const [habitRestructure, categories] =\n        await extractCategoriesAndRestructureHabits(habitObj);\n\n      dispatch({ type: \"SET_HABIT_RESTRUCTURE\", payload: habitRestructure });\n      dispatch({ type: \"SET_CATEGORY\", payload: categories });\n\n      const habitNameList = extractHabitNames(habitObj);\n      dispatch({ type: \"SET_HABIT_NAME_LIST\", payload: habitNameList });\n\n      const todayDate = await getTodayDate();\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: todayDate });\n\n      const weekStartDate = await getWeekStartDate(new Date());\n      const weekEndDate = await getWeekEndDate(new Date());\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: weekStartDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: weekEndDate });\n\n      const habitStatus = await processHabitStatus(habitObj, weekStartDate);\n      dispatch({ type: \"SET_HABIT_STATUS\", payload: habitStatus });\n\n      dispatch({ type: \"SET_IS_LOADING\", payload: false });\n    }\n\n    hydrateStoreState();\n  }, [dispatch]);\n\n  // this fetch function is need to extracted and need to be reused\n\n  // const changeDate = async (method, n) => {\n  //   // change the current date to prev or next date\n  //   if (method === \"add\") {\n  //     let changedDate = addDays(state.currentDate, n);\n  //     dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n  //     const newStartWeekDate = await getWeekStartDate(changedDate);\n  //     const newEndWeekDate = await getWeekEndDate(changedDate);\n  //     dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n  //     dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n  //   }\n  //   if (method === \"sub\") {\n  //     let changedDate = subDays(state.currentDate, n);\n  //     dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n  //     const newStartWeekDate = await getWeekStartDate(changedDate);\n  //     const newEndWeekDate = await getWeekEndDate(changedDate);\n\n  //     dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n  //     dispatch({ type: \"SET_WEEK_END_DATE\", payload: newEndWeekDate });\n  //   }\n  // };\n\n  function setHabitView(viewType) {\n    dispatch({ type: \"SET_HABIT_VIEW\", payload: viewType });\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h3\"\n            align=\"center\"\n            color=\"textSecondary\"\n            className={classes.title}\n          >\n            HABITS\n          </Typography>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button\n                style={{ margin: \"5px\" }}\n                disabled={isNextDisable}\n                className={\n                  state.habitView === \"daily\"\n                    ? classes.activeButton\n                    : classes.disabledButton\n                }\n                onClick={() => setHabitView(\"daily\")}\n              >\n                Daily\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                style={{ margin: \"5px\" }}\n                disabled={isNextDisable}\n                className={\n                  state.habitView === \"weekly\"\n                    ? classes.activeButton\n                    : classes.disabledButton\n                }\n                onClick={() => setHabitView(\"weekly\")}\n              >\n                Weekly\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            {state.isLoading ? (\n              <div style={{ fontSize: \"4vw\" }}>\n                <CircularProgress style={{ color: \"white\" }} />\n              </div>\n            ) : (\n              <RenderHabits />\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  root: {\n    marginBottom: \"8rem\",\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  title: {\n    fontWeight: \"bold\",\n    marginTop: \"4rem\",\n    marginBottom: \"4rem\",\n  },\n\n  activeButton: {\n    background: \"rgba(196, 196, 196, 0.19)\",\n    color: \"#FFFFFF\",\n  },\n  disabledButton: {\n    background: \"rgba(196, 196, 196, 0.04)\",\n    color: \"#8F8E8E\",\n  },\n\n  spinIt: {\n    width: 10,\n    height: 10,\n  },\n});\n","import React from \"react\";\nimport RenderHabits from \"../components/RenderHabits\";\n\nexport default function AddHabit() {\n  return (\n    <div>\n      <RenderHabits />\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction BackButton() {\n  const classes = useStyles();\n  const history = useHistory();\n  function handleClick() {\n    history.goBack();\n  }\n  return (\n    <div className={classes.backIcon} onClick={handleClick}>\n      <ArrowBackIcon className={classes.icon} color=\"secondary\" />\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  backIcon: {\n    position: \"absolute\",\n    left: \"1rem\",\n    top: \"1.5rem\",\n    fontWeight: \"bold\",\n  },\n  icon: {\n    fill: \"#ffffff\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default BackButton;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"left\",\n        maxWidth: \"25rem\",\n        margin: \"auto\",\n    },\n    title: {\n        fontWeight: \"bold\",\n        marginTop: \"1.5rem\",\n        marginBottom: \"2rem\",\n    },\n    pos: {\n        marginBottom: \"1.5rem\",\n    },\n    submitButton: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: \"4rem\",\n    },\n    directionRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    buttonMargin: {\n        margin: \"0 1rem 0.5rem 0\",\n    },\n    activeButton: {\n        background: \"rgba(196, 196, 196, 0.19)\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(196, 196, 196, 0.19)\",\n        },\n    },\n    disabledButton: {\n        background: \"rgba(196, 196, 196, 0.04)\",\n        color: \"#8F8E8E\",\n    },\n    colorWrapper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    colorBox: {\n        margin: \"0.5rem\",\n    },\n    activeColor: {\n        border: \"2px solid white\",\n    },\n    colorCircle: {\n        width: \"1.5rem\",\n        height: \"1.5rem\",\n        borderRadius: \"4rem\",\n        boxSizing: \"border-box\",\n    },\n    yellow: { backgroundColor: \"#FFB427\" },\n    lightblue: { backgroundColor: \"#4EB1CB\" },\n    green: { backgroundColor: \"#50D890\" },\n    black: { backgroundColor: \"#000000\" },\n    red: { backgroundColor: \"#FF6B7A\" },\n    purple: { backgroundColor: \"#5666F3\" },\n    blue: { backgroundColor: \"#3a8dff\" },\n    orange: { backgroundColor: \"#FF8C00\" },\n}));\n\nexport default useStyles;\n","import { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nconst Modal = ({ children }) => {\n  const elRef = useRef(null);\n\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n  useEffect(() => {\n    modalRoot.appendChild(elRef.current);\n    return () => {\n      modalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import { InputLabel } from \"@material-ui/core\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { Fragment } from \"react\";\n\nfunction FormInputLabel({ label }) {\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <InputLabel>\n                <Typography variant=\"subtitle1\" className={classes.label}>\n                    {label}\n                </Typography>\n            </InputLabel>\n        </Fragment>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        fontWeight: \"bold\",\n        marginBottom: \"0.5rem\",\n    },\n}));\n\nexport default FormInputLabel;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    count: {\n        color: \"#FFFFFF\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    countText: {\n        margin: \"0rem 1rem\",\n        fontWeight: \"bold\",\n    },\n}));\n\nexport default useStyles;\n","import { initialState } from \"../Store/habitFormContext\";\n\nconst HabitFormReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_HABIT_ID\":\n      return {\n        ...state,\n        habitId: payload,\n      };\n    case \"SET_CATEGORY\":\n      return {\n        ...state,\n        category: payload,\n      };\n    case \"SET_HABIT_NAME\":\n      return {\n        ...state,\n        habitName: payload,\n      };\n    case \"SET_DAILY_GOAL\":\n      return {\n        ...state,\n        dailyGoal: payload,\n      };\n    case \"SET_WEEKLY_GOAL\":\n      return {\n        ...state,\n        weeklyGoal: payload,\n      };\n    case \"SET_WEEKLY_INPUT_TYPE\":\n      return {\n        ...state,\n        weeklyInputType: payload,\n      };\n    case \"SET_COLOR\":\n      return {\n        ...state,\n        color: payload,\n      };\n    case \"SET_HABIT_UNIT\":\n      return {\n        ...state,\n        habitUnit: payload,\n      };\n    case \"SET_HABIT_UNIT_TYPE\":\n      return {\n        ...state,\n        habitUnitType: payload,\n      };\n    case \"SET_INPUT_TYPE\":\n      return {\n        ...state,\n        trackType: payload,\n      };\n    case \"RESET_HABIT_FORM\":\n      return {\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default HabitFormReducer;\n","import { createContext, useReducer } from \"react\";\nimport HabitFormReducer from \"../reducer/habitFormReducer\";\n\nexport const initialState = {\n  habitId: \"\",\n  category: \"General\",\n  habitName: \"\",\n  dailyGoal: 1,\n  habitUnit: null || \"\",\n  habitUnitType: null,\n  trackType: \"Checkbox\",\n  color: \"#FFB427\",\n  weeklyGoal: 7,\n  weeklyInputType: \"daily\",\n};\n\nconst HabitFormContext = ({ children }) => {\n  const [state, dispatch] = useReducer(HabitFormReducer, initialState);\n  return (\n    <FormContext.Provider value={[state, dispatch]}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const FormContext = createContext(initialState);\nexport default HabitFormContext;\n","import AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Fab, TextField, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { FormContext } from \"../../../Store/habitFormContext\";\nimport { useContext, useState, useEffect } from \"react\";\n\nfunction NumberCounter({ type }) {\n    const [habitForm, dispatch] = useContext(FormContext);\n    const classes = useStyles();\n    const [isNegCountDisabled, setCountDisabled] = useState(false);\n    const [isPosCountDisabled, setPosCount] = useState(false);\n\n    useEffect(() => {\n        if (type === \"daily\") {\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n            setPosCount(isCountValid(habitForm.dailyGoal, 10));\n        }\n    }, [habitForm.dailyGoal, type]);\n\n    useEffect(() => {\n        if (type === \"weekly\") {\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n            setPosCount(isCountValid(habitForm.weeklyGoal, 7));\n        }\n    }, [habitForm.weeklyGoal, type]);\n\n    function handleCounter(action) {\n        if (type === \"daily\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_DAILY_GOAL\",\n                    payload: habitForm.dailyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.dailyGoal));\n        }\n        if (type === \"weekly\") {\n            if (action === \"-\") {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal - 1,\n                });\n            } else {\n                dispatch({\n                    type: \"SET_WEEKLY_GOAL\",\n                    payload: habitForm.weeklyGoal + 1,\n                });\n            }\n            setCountDisabled(isCountZero(habitForm.weeklyGoal));\n        }\n    }\n\n    function isCountZero(value) {\n        if (value <= 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    function isCountValid(value, max) {\n        if (value >= max) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <div className={classes.count}>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"-\")}\n                disabled={isNegCountDisabled}\n            >\n                <RemoveIcon />\n            </Fab>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.countText}\n            >\n                {type === \"daily\" ? habitForm.dailyGoal : habitForm.weeklyGoal}\n            </Typography>\n            <Fab\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => handleCounter(\"+\")}\n                disabled={isPosCountDisabled}\n            >\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default NumberCounter;\n","import {\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Grid,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport * as yup from \"yup\";\nimport habitService from \"../../services/habitService\";\nimport Modal from \"../modal\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport FormInputLabel from \"../FormComponents/InputLabel/InputLabel\";\nimport NumberCounter from \"../FormComponents/NumberCounter/NumberCounter\";\nimport { FormContext } from \"../../Store/habitFormContext\";\nimport { Context } from \"../../Store/habitStore\";\n\nconst HabitForm = () => {\n  const [habitForm, dispatch] = useContext(FormContext);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const classes = useStyles();\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [habitSaved, setHabitSaved] = useState(false);\n  const [activeCategoryIndex, setCategoryIndex] = useState(0);\n  const [activeColorIndex, setColorIndex] = useState(0);\n  const [weeklyGoalInputType, setWeeklyGoalInputType] = useState(\n    habitForm.weeklyInputType\n  );\n  const [unityType, setUnitType] = useState(habitForm.habitUnitType);\n  const [trackType, setTrackType] = useState(habitForm.trackType);\n  const [habitText, setHabitText] = useState(habitForm.habitName);\n\n  console.log(\"habit form context\", habitForm);\n\n  const [showModal, setModal] = useState(false);\n\n  useEffect(() => {\n    if (habitSaved && !showModal) {\n      history.push(\"/\");\n    }\n  }, [habitSaved, history, showModal]);\n\n  const handleCategoryClick = (index, value) => {\n    setCategoryIndex(index);\n    dispatch({ type: \"SET_CATEGORY\", payload: value });\n  };\n  const handleColorClick = (index, value) => {\n    setColorIndex(index);\n    dispatch({ type: \"SET_COLOR\", payload: value });\n  };\n\n  const handleWeeklyInput = (type) => {\n    setWeeklyGoalInputType(type);\n    dispatch({ type: \"SET_WEEKLY_INPUT_TYPE\", payload: type });\n    if (type === \"daily\") {\n      dispatch({ type: \"SET_WEEKLY_GOAL\", payload: 7 });\n    }\n  };\n\n  const handleUnitInput = (type) => {\n    setUnitType(type);\n    dispatch({ type: \"SET_HABIT_UNIT_TYPE\", payload: type });\n    if (type === \"custom\") {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: \"\" });\n    } else {\n      dispatch({ type: \"SET_HABIT_UNIT\", payload: null });\n    }\n  };\n  const handleTrackInput = (value) => {\n    setTrackType(value);\n    dispatch({ type: \"SET_INPUT_TYPE\", payload: value });\n  };\n  const handleHabitName = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_NAME\", payload: value });\n  };\n  const handleHabitUnit = (value) => {\n    setHabitText(value);\n    dispatch({ type: \"SET_HABIT_UNIT\", payload: value });\n  };\n\n  const toggleModal = () => {\n    setModal(!showModal);\n    setHabitSaved(true);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={habitForm}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            if (pathname === \"/updateHabit\") {\n              const updateRes = await updateHabit(data, habitForm.habitId);\n              if (updateRes) {\n                setMsg(updateRes.msg);\n                dispatch({\n                  type: \"RESET_HABIT_FORM\",\n                });\n                setSubmitting(false);\n                toggleModal();\n              }\n            }\n            if (pathname === \"/createHabit\") {\n              const res = await saveHabit(data);\n              if (res) {\n                setMsg(res.msg);\n                dispatch({\n                  type: \"RESET_HABIT_FORM\",\n                });\n                setSubmitting(false);\n                toggleModal();\n              }\n            }\n          } catch (err) {\n            console.log(err);\n            if (err.response.status === 400) {\n              console.log(err.response);\n\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n        enableReinitialize\n      >\n        <Form className={classes.form}>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT NAME\" />\n            <MyTextField\n              name=\"habitName\"\n              type=\"text\"\n              placeholder=\"e.g. Cold Shower, Read Book\"\n              onChange={(event) => handleHabitName(event.target.value)}\n            />\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"CATEGORY\" />\n            {categories.map((category, index) => {\n              return (\n                <Button\n                  size=\"large\"\n                  key={category.label}\n                  className={\n                    category.label === habitForm.category\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleCategoryClick(index, category.value)}\n                >\n                  {category.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HOW MANY TIMES PER DAY?\" />\n            <NumberCounter type=\"daily\" />\n          </Grid>\n          <Grid className={`${classes.pos}`}>\n            <FormInputLabel label=\"HOW MANY DAYS PER WEEK?\" />\n            <Grid className={`${classes.directionRow}`}>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"daily\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"daily\")}\n              >\n                DAILY\n              </Button>\n              <Button\n                size=\"large\"\n                className={\n                  weeklyGoalInputType === \"custom\"\n                    ? `${classes.activeButton} ${classes.buttonMargin}`\n                    : `${classes.disabledButton} ${classes.buttonMargin}`\n                }\n                onClick={() => handleWeeklyInput(\"custom\")}\n              >\n                CUSTOM\n              </Button>\n              {weeklyGoalInputType === \"custom\" ? (\n                <NumberCounter type=\"weekly\" />\n              ) : (\n                <></>\n              )}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <Grid item>\n              <FormInputLabel label=\"COLOR\" />\n            </Grid>\n            <Grid container xs={12} item>\n              {colorCode.map((color, index) => {\n                return (\n                  <Grid\n                    xs={2}\n                    className={classes.colorBox}\n                    key={color.color}\n                    item\n                  >\n                    <div\n                      key={color.color}\n                      className={\n                        color.color === habitForm.color\n                          ? `${classes.activeColor} \n                                                ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                          : ` ${classes.colorCircle} ${\n                              classes[`${color.name}`]\n                            }`\n                      }\n                      onClick={() => handleColorClick(index, color.color)}\n                    ></div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"HABIT UNIT\" />\n            <Button\n              size=\"large\"\n              name=\"habitUnit\"\n              className={\n                unityType === null\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(null)}\n            >\n              NO UNIT\n            </Button>\n            <Button\n              size=\"large\"\n              className={\n                unityType === \"custom\"\n                  ? `${classes.activeButton} ${classes.buttonMargin}`\n                  : `${classes.disabledButton} ${classes.buttonMargin}`\n              }\n              onClick={() => handleUnitInput(\"custom\")}\n            >\n              CUSTOM\n            </Button>\n            {unityType === \"custom\" ? (\n              <MyTextField\n                name=\"habitUnit\"\n                type=\"text\"\n                onChange={(event) => handleHabitUnit(event.target.value)}\n                placeholder=\"e.g. Km, Pages, glasses\"\n              />\n            ) : (\n              <></>\n            )}\n          </Grid>\n          <Grid className={classes.pos}>\n            <FormInputLabel label=\"TRACK INPUT TYPE\" />\n            {inputTypes.map((type) => {\n              return (\n                <Button\n                  size=\"large\"\n                  name=\"trackType\"\n                  key={type.value}\n                  className={\n                    type.value === trackType\n                      ? `${classes.activeButton} ${classes.buttonMargin}`\n                      : `${classes.disabledButton} ${classes.buttonMargin}`\n                  }\n                  onClick={() => handleTrackInput(type.value)}\n                >\n                  {type.label}\n                </Button>\n              );\n            })}\n          </Grid>\n          <div className={classes.submitButton}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : pathname === \"/createHabit\" ? (\n                <Typography>CREATE</Typography>\n              ) : (\n                <Typography>UPDATE</Typography>\n              )}\n            </Button>\n          </div>\n        </Form>\n      </Formik>\n\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div>{msg}</div>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nconst MyTextField = ({ placeholder, value, onChange, func, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      variant=\"outlined\"\n      placeholder={placeholder ? placeholder : \" \"}\n      helperText={errorText}\n      size=\"small\"\n      onChange={onChange}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required(\"Category is Required\").max(30),\n  habitName: yup.string().required(\"Habit Name is Required\").max(30).trim(),\n  dailyGoal: yup.number().min(1).max(15),\n  weeklyGoal: yup.number().min(1).max(7),\n  habitUnit: yup\n    .string()\n    .min(2, \"must be minimum 2 characters\")\n    .max(10)\n    .nullable(true)\n    .trim(),\n  types: yup.string(),\n  color: yup.string(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  const habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n    habitUnit: { type: habit.habitUnitType, value: habit.habitUnit },\n    weeklyGoal: {\n      type: habit.weeklyInputType,\n      value: habit.weeklyGoal,\n    },\n    dailyGoal: habit.dailyGoal,\n    trackType: habit.trackType,\n  };\n  const response = await habitService.saveHabit(habitData);\n\n  return response.data;\n};\n\nconst updateHabit = async (habit, habitId) => {\n  const newHabitData = {\n    habitId: habitId,\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n    habitUnit: { type: habit.habitUnitType, value: habit.habitUnit },\n    weeklyGoal: {\n      type: habit.weeklyInputType,\n      value: habit.weeklyGoal,\n    },\n    dailyGoal: habit.dailyGoal,\n    trackType: habit.trackType,\n  };\n  const response = await habitService.updateHabitContent(newHabitData);\n  return response.data;\n};\n\nconst colorCode = [\n  { name: \"yellow\", color: \"#FFB427\" },\n  { name: \"lightblue\", color: \"#4EB1CB\" },\n  { name: \"green\", color: \"#50D890\" },\n  { name: \"black\", color: \"#000000\" },\n  { name: \"red\", color: \"#FF6B7A\" },\n  { name: \"purple\", color: \"#5666F3\" },\n  { name: \"blue\", color: \"#3a8dff\" },\n  { name: \"orange\", color: \"#FF8C00\" },\n];\n\nconst inputTypes = [\n  {\n    value: \"Checkbox\",\n    label: \"CHECK BOX\",\n  },\n  {\n    value: \"text\",\n    label: \"TEXT\",\n  },\n  {\n    value: \"number\",\n    label: \"NUMBER\",\n  },\n  {\n    value: \"time\",\n    label: \"TIME\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nexport default HabitForm;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport useStyles from \"./useStyles\";\nimport HabitForm from \"./HabitForm\";\n\nconst CreateHabitForm = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <BackButton />\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        className={classes.title}\n      >\n        CREATE A NEW HABIT\n      </Typography>\n      <HabitForm />\n    </Container>\n  );\n};\n\nexport default CreateHabitForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nexport async function signUp(data) {\n  try {\n    const response = await http.post(apiUrl + \"signUp\", data);\n    return Promise.resolve(response);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport async function signIn(data) {\n  return await http.post(apiUrl + \"signIn\", data);\n}\n\nexport async function signOut(tokenKey) {\n  // remove token from the local storage\n  tokenService.removeToken(tokenKey);\n}\n\nexport default {\n  signUp,\n  signIn,\n  signOut,\n};\n","import {\n  Button,\n  Card,\n  Container,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  Typography,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport Modal from \"../modal\";\n\nconst SignUpForm = () => {\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n  return (\n    <Container className={classes.root}>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          termsOfServices: false,\n        }}\n        onSubmit={async (data) => {\n          try {\n            setSubmitting(true);\n            const response = await AuthService.signUp(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              console.log(`token  from response ${token}`);\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              console.log(`user info ${userInfoObj} `);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              console.log(state);\n              setSubmitting(false);\n              return history.push(\"/form\");\n\n              //then save the token to the local storage\n              // dispatch token action and  take user to signIn page\n            } else if (response.status === 401) {\n              // else dispatch set error action and display error on screen\n              const responseError = response.data.error;\n              console.log(response);\n              console.log(state);\n\n              dispatch({ type: \"SET_ERROR\", payload: responseError });\n            } else {\n              dispatch({ type: \"SET_ERROR\", payload: \"Unknown error\" });\n            }\n          } catch (err) {\n            if (err.response.status === 401) {\n              setMsg(err.response.data.error);\n              toggleModal();\n            }\n            dispatch({ type: \"SET_ERROR\", payload: err });\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Sign Up\" />\n          <div className={classes.input}>\n            <MyTextField label=\"First Name\" name=\"firstName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Last Name\" name=\"lastName\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.input}>\n            <MyCheckBox\n              label=\"I accept the terms and condition\"\n              name=\"termsOfServices\"\n            />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"large\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>Sing Me Up</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Already a member? </Typography>\n            <Link to=\"/signIn\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Sign In\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                size=\"large\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup\n    .string()\n    .required()\n    .min(3, \"First name must have at least 3 character\")\n    .max(15, \"First name must be 15 character or less\"),\n  lastName: yup\n    .string()\n    .required()\n    .min(3, \"Last name must have at least 3 character\")\n    .max(20, \"Last name must be 20 character or less\"),\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n  termsOfServices: yup\n    .boolean()\n    .required()\n    .oneOf([true], \"You must accept the terms and conditions.\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\nconst MyCheckBox = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <FormControlLabel\n      label={label}\n      labelPlacement=\"end\"\n      control={<Checkbox color=\"primary\" {...field} error={!!errorText} />}\n    ></FormControlLabel>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form, useField } from \"formik\";\nimport AuthService from \"../../services/authServices\";\nimport TokenService from \"../../utilities/tokenMethods\";\nimport { Context } from \"../../Store/habitStore\";\nimport { tokenKey } from \"../../config.json\";\nimport Modal from \"../modal\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <div>{error.length ? <h3>{error[0]}</h3> : null}</div>\n\n      <Formik\n        initialValues={{\n          password: \"123456\",\n          email: \"demo@gmail.com\",\n        }}\n        onSubmit={async (data) => {\n          console.log(data);\n          setError([]);\n          setSubmitting(true);\n          console.log(error);\n          try {\n            const response = await AuthService.signIn(data);\n            console.log(response);\n            if (response.status === 200) {\n              const token = response.data.token;\n              TokenService.setToken(token);\n              dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: true });\n              dispatch({ type: \"SET_TOKEN\", payload: token });\n              const userInfoObj = TokenService.getUserInfo(tokenKey);\n              dispatch({ type: \"SET_USER_INFO\", payload: userInfoObj });\n              setSubmitting(false);\n              return history.push(\"/\");\n            }\n          } catch (err) {\n            console.log(err.response);\n            if (err.response.status === 401) {\n              console.log(err.data);\n              setMsg(err.response.data.error);\n              setSubmitting(false);\n              toggleModal();\n            }\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={classes.form}>\n          <CardHeader title=\"Welcome Back!\" />\n          <div className={classes.input}>\n            <MyTextField label=\"Email\" name=\"email\" type=\"input\" />\n          </div>\n          <div className={classes.input}>\n            <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {isSubmitting ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <Typography>Sing In</Typography>\n              )}\n            </Button>\n          </div>\n          <div className={classes.singUpWrapper}>\n            <Typography variant=\"subtitle2\">Don't have account? </Typography>\n            <Link to=\"/signUp\" color=\"primary\" className={classes.link}>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                Create an account\n              </Typography>\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Container>\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Invalid email address\"),\n  password: yup.string().required().min(6, \"Must be 6 character or more\"),\n});\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      {...field}\n      style={{ width: \"100%\" }}\n      type={props.type}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    minHeight: \"7rem\",\n    margin: \"5rem auto 0 auto\",\n    padding: \"0.5rem\",\n    color: \"#ffffff\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  input: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    minWidth: \"20rem\",\n    padding: \"2px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n  singUpWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: \"20rem\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  link: {\n    paddingLeft: \"0.5rem\",\n    textDecoration: \"none\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default SignInForm;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    topProfileButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        top: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomAddButton: {\n        position: \"fixed\",\n        right: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n    bottomSummaryButton: {\n        position: \"fixed\",\n        left: \"2rem\",\n        bottom: \"1rem\",\n        fontWeight: \"bold\",\n    },\n\n    bottomContainer: {\n        position: \"fixed\",\n        zIndex: 100,\n        bottom: 0,\n        height: \"3rem\",\n        width: \"100%\",\n        marginTop: \"1rem\",\n        backgroundColor: \"#272730\",\n    },\n    icon: {\n        fill: \"#ffffff\",\n        textAlign: \"center\",\n    },\n    bottomGrid: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"100%\",\n    },\n    addIcon: {\n        marginRight: \"0.5rem\",\n    },\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport { Fragment } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { NavLink } from \"react-router-dom\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\n\nconst BottomNav = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  let isMobile = width <= 768;\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {isMobile ? (\n        <Fragment>\n          <div className={classes.bottomContainer}>\n            <Grid\n              container\n              xs={12}\n              align=\"center\"\n              className={classes.bottomGrid}\n            >\n              <Grid item align=\"center\" xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/\"\n                >\n                  <HomeOutlinedIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/createHabit\"\n                >\n                  <AddIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n              <Grid item xs={4}>\n                <NavLink\n                  activeStyle={{\n                    color: \"black\",\n                    fontSize: \"4vw\",\n                  }}\n                  to=\"/summary\"\n                >\n                  <BarChartIcon className={classes.icon} />\n                </NavLink>\n              </Grid>\n            </Grid>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <NavLink\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"4vw\",\n            }}\n            to=\"/createHabit\"\n          >\n            <Fab\n              aria-label=\"add\"\n              variant=\"extended\"\n              color=\"secondary\"\n              className={classes.bottomAddButton}\n            >\n              <AddIcon className={classes.addIcon} />\n              ADD HABIT\n            </Fab>\n          </NavLink>\n          <NavLink\n            activeStyle={{\n              color: \"black\",\n              fontSize: \"4vw\",\n            }}\n            to=\"/summary\"\n          >\n            <Fab\n              aria-label=\"add\"\n              variant=\"extended\"\n              color=\"secondary\"\n              className={classes.bottomSummaryButton}\n            >\n              <BarChartIcon className={classes.addIcon} />\n              Summary\n            </Fab>\n          </NavLink>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\nexport default BottomNav;\n","import React, { useState } from \"react\";\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { tokenKey } from \"../config.json\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport BottomNav from \"./BottomNav/BottomNav\";\nimport { Context } from \"../Store/habitStore\";\nimport { useEffect, useContext } from \"react\";\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const [isAuth, setAuth] = useState(false);\n\n  useEffect(() => {\n    setAuth(state.isAuthenticated);\n  }, [state.isAuthenticated]);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <nav>\n        {isAuth ? (\n          <React.Fragment>\n            <Fab\n              aria-label=\"add\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleClick}\n              className={classes.topProfileButton}\n            >\n              <PersonIcon className={classes.addIcon} />\n            </Fab>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              getContentAnchorEl={null}\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            >\n              <MenuItem onClick={handleClose} className={classes.menuItem}>\n                <NavLink className={classes.link} to=\"/signOut\">\n                  <ExitToAppIcon fontSize=\"small\" />\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.optionText}\n                  >\n                    Sign Out\n                  </Typography>\n                </NavLink>\n              </MenuItem>\n            </Menu>\n            <BottomNav />\n          </React.Fragment>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </nav>\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    display: \"contents\",\n    color: \"#FFFFFF\",\n  },\n  menuItem: {\n    padding: \"0 4px\",\n    minHeight: \"1rem\",\n  },\n  optionText: {\n    marginLeft: \"0.5rem\",\n    textAlign: \"center\",\n  },\n  topProfileButton: {\n    position: \"absolute\",\n    right: \"1rem\",\n    top: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  activeButton: {\n    background: \"rgba(196, 196, 196, 0.19)\",\n    color: \"#FFFFFF\",\n  },\n  disabledButton: {\n    background: \"rgba(196, 196, 196, 0.04)\",\n    color: \"#8F8E8E\",\n  },\n}));\n\nexport default NavBar;\n","import { signOut } from \"../../services/authServices\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { tokenKey } from \"../../config.json\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../Store/habitStore\";\nimport Modal from \"../modal\";\nimport { is } from \"date-fns/locale\";\n\nconst SignOut = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TOKEN\", payload: \"\" });\n    dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: false });\n    dispatch({ type: \"SET_USER_INFO\", payload: {} });\n    signOut(tokenKey);\n\n    if (!state.isAuthenticated) {\n      setModal(true);\n    }\n\n    let timeOut = setTimeout(() => {\n      history.push(\"/signIn\");\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [dispatch, history, state.isAuthenticated]);\n\n  return (\n    <div>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{`Your are Signed Out`}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SignOut;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { tokenKey } from \"../../config.json\";\n\nconst ProtectedRoutes = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!localStorage.getItem(tokenKey))\n          return (\n            <Redirect\n              to={{\n                pathname: \"/SignIn\",\n                state: { form: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoutes;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"0.5rem\",\n    maxWidth: \"50rem\",\n    minWidth: \"10rem\",\n  },\n    title: {\n        marginTop: \"3rem\",\n        marginBottom: \"2rem\",\n    },\n  titleText: {\n    margin: \"auto\",\n  },\n  box: {\n    margin: \"auto\",\n  },\n  habitContainer: {\n    alignItems: \"center\",\n    minHeight: \"10rem\",\n    backgroundColor: \"#303038\",\n    borderRadius: \"10px\",\n    padding: \"0.5rem\",\n  },\n  textGrey: {\n    color: \"#6c6c72\",\n  },\n  textStreak: {\n    color: \"#FFFFFF\",\n  },\n  habitTitleBox: {\n    width: \"100%\",\n    padding: \"0rem 0.5rem 0rem 0.5rem\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  datesBox: {\n    marginTop: \"10px\",\n    height: \"2rem\",\n    width: \"2rem\",\n    textAlign: \"center\",\n    lineHeight: \"2rem\",\n  },\n  doneText: {\n    paddingLeft: \"0.6rem\",\n    color: \"#6c6c72\",\n  },\n  statsText: {\n    padding: \"2px\",\n    margin: \"auto\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useContext } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { Grid, Container, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Context } from \"../../Store/habitStore\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormContext } from \"../../Store/habitFormContext\";\nimport { calculateLongestStreak } from \"../../utilities/calculateStreak\";\nimport {\n  calculatePartiallyCompletedHabitCount,\n  calculateFullyCompletedHabitCount,\n} from \"../../utilities/utilitiesMethods\";\n\nconst Summary = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [state] = useContext(Context);\n  const [habitForm, dispatch] = useContext(FormContext);\n\n  function handleEditClick({\n    _id,\n    category,\n    color,\n    dailyGoal,\n    habitName,\n    habitUnit,\n    weeklyGoal,\n    trackType,\n  }) {\n    console.log(\n      _id,\n      category,\n      color,\n      dailyGoal,\n      habitName,\n      habitUnit,\n      weeklyGoal,\n      trackType\n    );\n    dispatch({ type: \"SET_HABIT_ID\", payload: _id });\n    dispatch({ type: \"SET_CATEGORY\", payload: category });\n    dispatch({ type: \"SET_HABIT_NAME\", payload: habitName });\n    dispatch({ type: \"SET_DAILY_GOAL\", payload: dailyGoal });\n    dispatch({ type: \"SET_WEEKLY_GOAL\", payload: weeklyGoal.value });\n    dispatch({ type: \"SET_WEEKLY_INPUT_TYPE\", payload: weeklyGoal.type });\n    dispatch({ type: \"SET_COLOR\", payload: color });\n    dispatch({ type: \"SET_HABIT_UNIT\", payload: habitUnit.value });\n    dispatch({ type: \"SET_HABIT_UNIT_TYPE\", payload: habitUnit.type });\n    dispatch({ type: \"SET_INPUT_TYPE\", payload: trackType });\n    history.push(\"/updateHabit\");\n  }\n  function handleStatsClick(habit) {\n    history.push(\"/habitStats\");\n  }\n\n  return (\n    <>\n      <BackButton />\n      <div className={classes.title}>\n                      <Typography align=\"center\" color=\"TextSecondary\" variant=\"h3\">Summary</Typography>\n      </div>\n      {state.habits.length\n        ? state.habits.map((habit) => {\n            return (\n              <Container\n                className={classes.root}\n                style={{ color: `${habit.color}` }}\n                key={habit._id}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  xs={12}\n                  sm={12}\n                  md={12}\n                  elevation={6}\n                  className={classes.habitContainer}\n                  component={Paper}\n                  style={{ color: `${habit.color}` }}\n                  item\n                >\n                  <Grid item container>\n                    <Grid item xs={8}>\n                      <Typography>{habit.habitName}</Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Button onClick={() => handleEditClick(habit)}>\n                        Edit\n                      </Button>\n                      <Button onClick={() => handleStatsClick(habit)}>\n                        stats\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item container direction=\"row\" className={classes.box}>\n                    <Grid item xs={4}>\n                      <Typography className={classes.statsText} align=\"center\">\n                        Completed\n                      </Typography>\n                      <Typography className={classes.statsText} align=\"center\">\n                        {getCompletedHabitCount(habit)}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Typography className={classes.statsText} align=\"center\">\n                        Partial\n                      </Typography>\n                      <Typography className={classes.statsText} align=\"center\">\n                        {getPartiallyCompletedHabitCount(habit)}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Typography className={classes.statsText} align=\"center\">\n                        Longest Streak\n                      </Typography>\n                      <Typography className={classes.statsText} align=\"center\">\n                        {getLongestStreak(habit.habitTrack)}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Container>\n            );\n          })\n        : null}\n    </>\n  );\n};\nfunction getConcurredPercentage(habit) {\n  return 23;\n}\nfunction getCompletedHabitCount(habit) {\n  let res = calculateFullyCompletedHabitCount(habit.habitTrack);\n  return res.count;\n}\nfunction getPartiallyCompletedHabitCount(habit) {\n  let res = calculatePartiallyCompletedHabitCount(habit.habitTrack);\n  return res.count;\n}\nfunction getLongestStreak(habitTrack) {\n  return calculateLongestStreak(habitTrack).longestStreak;\n}\n\nexport default Summary;\n","import React from \"react\";\n\nconst SummaryDetails = () => {\n  return <div>Summary Details</div>;\n};\n\nexport default SummaryDetails;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: \"bold\",\n    marginTop: \"1.5rem\",\n    marginBottom: \"2rem\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport useStyles from \"./useStyles\";\nimport HabitForm from \"../CreateHabitForm/HabitForm\";\n\nconst UpdateHabit = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <BackButton />\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        className={classes.title}\n      >\n        UPDATE HABIT\n      </Typography>\n      <HabitForm />\n    </Container>\n  );\n};\n\nexport default UpdateHabit;\n","import React from \"react\";\nimport BackButton from \"../FormComponents/BackButton/BackButton\";\nimport { Bar } from \"react-chartjs-2\";\n\nfunction HabitStats(props) {\n  return (\n    <div>\n      <BackButton />\n      <Bar\n        data={{\n          labels: [\"red\", \"blue\"],\n          datasets: [\n            {\n              label: \"first label\",\n              data: [30],\n              backgroundColor: \"orange\",\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{ maintainAspectRatio: false }}\n      />\n    </div>\n  );\n}\n\nexport default HabitStats;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./themes/theme\";\n\nimport Store from \"./Store/habitStore\";\nimport Home from \"./pages\";\nimport AddHabit from \"./pages/addHabit\";\nimport CreateHabitForm from \"./components/CreateHabitForm/CreateHabitForm\";\nimport SignUp from \"./components/auth/signUpForm\";\nimport SignIn from \"./components/auth/signInForm\";\nimport NavBar from \"./components/navBar\";\nimport SignOut from \"./components/auth/signOut\";\nimport ProtectedRoute from \"../src/components/auth/protectedRoutes\";\nimport HabitCard from \"./components/HabitCard/HabitCard\";\nimport DailyHabitCard from \"./components/DailyHabitCard/DailyHabitCard\";\nimport HabitFormContext from \"./Store/habitFormContext\";\nimport Summary from \"./components/Summary/Summary\";\nimport SummaryDetails from \"./components/SummaryDetails/SummaryDetails\";\nimport UpdateHabit from \"./components/UpdateHabit/UpdateHabit\";\nimport HabitStats from \"./components/HabitStats/HabitStats\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <HashRouter basename=\"/\">\n        <Store>\n          <HabitFormContext>\n            <NavBar />\n            <main className=\"container-sm\">\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <ProtectedRoute path=\"/addHabit\" component={AddHabit} />\n                <ProtectedRoute\n                  path=\"/createHabit\"\n                  component={CreateHabitForm}\n                />\n                <ProtectedRoute path=\"/habitCard\" component={HabitCard} />\n                <ProtectedRoute\n                  path=\"/dailyHabitCard\"\n                  component={DailyHabitCard}\n                />\n                <ProtectedRoute path=\"/updateHabit\" component={UpdateHabit} />\n                <ProtectedRoute path=\"/summary\" component={Summary} />\n                <ProtectedRoute path=\"/habitStats\" component={HabitStats} />\n                <ProtectedRoute\n                  path=\"/summaryDetails\"\n                  component={SummaryDetails}\n                />\n                <Route path=\"/signUp\" component={SignUp} />\n                <Route path=\"/signIn\" component={SignIn} />\n                <ProtectedRoute path=\"/signOut\" component={SignOut} />\n              </Switch>\n            </main>\n          </HabitFormContext>\n        </Store>\n      </HashRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(\"************* In Index.js\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}