[{"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js":"1","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js":"2","/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js":"3","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx":"4","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx":"5","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx":"6","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx":"7","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx":"8","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js":"9","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js":"10","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/navBar.jsx":"11","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabits.jsx":"12","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reducer/reducer.js":"13","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/TrackHabit.jsx":"14","/Users/parasvohra/Desktop/React Project/habit-tracker/src/Store/habitStore.js":"15"},{"size":544,"mtime":1616072891858,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":697,"mtime":1616950751151,"results":"19","hashOfConfig":"17"},{"size":174,"mtime":1617028293192,"results":"20","hashOfConfig":"17"},{"size":2780,"mtime":1616956304398,"results":"21","hashOfConfig":"17"},{"size":4479,"mtime":1616688829932,"results":"22","hashOfConfig":"17"},{"size":3634,"mtime":1617028295298,"results":"23","hashOfConfig":"17"},{"size":549,"mtime":1612993503351,"results":"24","hashOfConfig":"25"},{"size":637,"mtime":1615733614739,"results":"26","hashOfConfig":"17"},{"size":184,"mtime":1613099504994,"results":"27","hashOfConfig":"17"},{"size":996,"mtime":1616075163088,"results":"28","hashOfConfig":"17"},{"size":2573,"mtime":1617028241074,"results":"29","hashOfConfig":"17"},{"size":755,"mtime":1617027143531,"results":"30","hashOfConfig":"17"},{"size":2842,"mtime":1617676562426,"results":"31","hashOfConfig":"17"},{"size":537,"mtime":1617024308745,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"pyu0sr",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1jpga",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js",[],["66","67"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js",["68"],"import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store/habitStore\";\nimport { Home } from \"./pages\";\nimport { AddHabit } from \"./pages/addHabit\";\nimport Form from \"./components/form\";\nimport NavBar from \"./components/navBar\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Store>\n        <NavBar />\n        <main className=\"container-sm\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/addHabit\" component={AddHabit} />\n            <Route path=\"/form\" component={Form} />\n          </Switch>\n        </main>\n      </Store>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx",["69"],"import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Formik, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport * as yup from \"yup\";\nimport habitService from \"../services/habitService\";\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst MySelectField = ({ label, options, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      select\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    >\n      {options.map((option) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required().max(30),\n  habitName: yup.string().required().max(30),\n  types: yup.string().required(),\n  color: yup.string().required(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  let habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n  };\n\n  const response = await habitService.saveHabit(habitData);\n\n  console.log(response);\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst types = [\n  {\n    value: \"checkbox\",\n    label: \"Check Box\",\n  },\n  {\n    value: \"text\",\n    label: \"Text\",\n  },\n  {\n    value: \"number\",\n    label: \"Number\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nconst colors = [\n  {\n    value: \"red\",\n    label: \"Red\",\n  },\n  {\n    value: \"blue\",\n    label: \"Blue\",\n  },\n  {\n    value: \"black\",\n    label: \"Black\",\n  },\n  {\n    value: \"green\",\n    label: \"Green\",\n  },\n];\n\nconst Form = () => {\n  const [habit, setHabit] = useState(null);\n  const classes = useStyles();\n\n  useEffect(() => {}, []);\n\n  return (\n    <Card className={classes.root}>\n      <h2>Add New Habit</h2>\n      <Formik\n        initialValues={{\n          category: \"General\",\n          habitName: \"\",\n          types: \"checkbox\",\n          color: \"black\",\n        }}\n        onSubmit={(data) => {\n          console.log(data);\n          setHabit([...habit, data]);\n          saveHabit(data);\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleSubmit, handleChange, handleBlur }) => (\n          <form onSubmit={handleSubmit}>\n            <div className={classes.root}>\n              <MySelectField\n                value={values.category}\n                select\n                label=\"Category\"\n                name=\"category\"\n                options={categories}\n              />\n            </div>\n            <div className={classes.root}>\n              <MyTextField label=\"Habit Name\" name=\"habitName\" type=\"input\" />\n            </div>\n\n            <div className={classes.root}>\n              <MySelectField\n                value={values.types}\n                select\n                label=\"Types\"\n                name=\"types\"\n                options={types}\n              />\n            </div>\n\n            <div className={classes.root}>\n              <MySelectField\n                value={values.color}\n                select\n                label=\"Color\"\n                name=\"color\"\n                options={colors}\n              />\n            </div>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save Habit\n              </Button>\n            </div>\n\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </form>\n        )}\n      </Formik>\n    </Card>\n  );\n};\n\nexport default Form;\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/navBar.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabits.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reducer/reducer.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/TrackHabit.jsx",["70","71","72","73"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/Store/habitStore.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":9,"column":17,"nodeType":"80","messageId":"81","endLine":9,"endColumn":27},{"ruleId":"78","severity":1,"message":"83","line":12,"column":29,"nodeType":"80","messageId":"81","endLine":12,"endColumn":38},{"ruleId":"78","severity":1,"message":"84","line":17,"column":17,"nodeType":"80","messageId":"81","endLine":17,"endColumn":25},{"ruleId":"78","severity":1,"message":"85","line":20,"column":10,"nodeType":"80","messageId":"81","endLine":20,"endColumn":22},{"ruleId":"78","severity":1,"message":"86","line":20,"column":24,"nodeType":"80","messageId":"81","endLine":20,"endColumn":39},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'habitTracked' is assigned a value but never used.","'setHabitTracked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]