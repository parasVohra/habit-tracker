[{"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js":"1","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js":"2","/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js":"3","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx":"4","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx":"5","/Users/parasvohra/Desktop/React Project/habit-tracker/src/context/HabitContext.jsx":"6","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx":"7","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx":"8","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx":"9","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js":"10","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js":"11"},{"size":512,"mtime":1611785780185,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1130,"mtime":1612112822717,"results":"15","hashOfConfig":"13"},{"size":2183,"mtime":1612061701924,"results":"16","hashOfConfig":"13"},{"size":3597,"mtime":1613666068321,"results":"17","hashOfConfig":"13"},{"size":85,"mtime":1611877761129,"results":"18","hashOfConfig":"13"},{"size":4501,"mtime":1613101367897,"results":"19","hashOfConfig":"13"},{"size":2120,"mtime":1613693914503,"results":"20","hashOfConfig":"13"},{"size":549,"mtime":1612993503351,"results":"21","hashOfConfig":"22"},{"size":641,"mtime":1613693581034,"results":"23","hashOfConfig":"13"},{"size":184,"mtime":1613099504994,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"akndl3",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1jpga",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js",[],["49","50"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx",["51","52"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { HabitContext } from \"../context/HabitContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { green } from \"@material-ui/core/colors\";\nimport RenderHabitsByCategory from \"../components/RenderHabitsByCategory\";\nimport Popover from \"@material-ui/core/Popover\";\nimport HabitService from \"../services/habitService\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n});\n\nconst habitCategory = habits => {\n  let category = {};\n  let categoryArray = [];\n  if (habits) {\n    for (let h of habits) {\n      if (!category.hasOwnProperty(h.category)) {\n        categoryArray.push(h.category);\n        category[h.category] = \" \";\n      } else {\n        category[h.category] = \" \";\n      }\n    }\n  }\n\n  return categoryArray;\n};\n\nexport function Index() {\n  //const { habit } = useContext(HabitContext);\n  const [habits, setHabits] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      // You can await here\n      const { data } = await HabitService.getHabits();\n\n      console.log(data);\n      setHabits(data);\n      let categoryArray = habitCategory(data);\n      setCategories(categoryArray);\n    }\n    fetchData();\n  }, []);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <h2>Home</h2>\n      <Fab\n        aria-describedby={id}\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        <AddIcon />\n      </Fab>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div>\n          <div>\n            <div>\n              Habit name <Checkbox />\n            </div>\n            <div>\n              Habit name <Checkbox />\n            </div>\n\n            <div>\n              Habit name <Checkbox />\n            </div>\n            <div>\n              Habit name <Checkbox />\n            </div>\n          </div>\n        </div>\n      </Popover>\n\n      <TableContainer className={classes.table} component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Habits </TableCell>\n              <TableCell align=\"center\">Current Day</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {categories\n              ? categories.map(c => {\n                  return (\n                    <RenderHabitsByCategory\n                      category={c}\n                      habit={habits}\n                      key={c}\n                    />\n                  );\n                })\n              : null}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/context/HabitContext.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":27},{"ruleId":"57","severity":1,"message":"61","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":22},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'HabitContext' is defined but never used.","no-global-assign","no-unsafe-negation"]