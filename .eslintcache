[{"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js":"1","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js":"2","/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js":"3","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx":"4","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx":"5","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx":"6","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx":"7","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx":"8","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js":"9","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js":"10","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/navBar.jsx":"11","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabits.jsx":"12","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reducer/reducer.js":"13","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/TrackHabit.jsx":"14","/Users/parasvohra/Desktop/React Project/habit-tracker/src/Store/habitStore.js":"15","/Users/parasvohra/Desktop/React Project/habit-tracker/src/utilities/utilitiesMethods.js":"16","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signUpForm.jsx":"17","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/authServices.js":"18","/Users/parasvohra/Desktop/React Project/habit-tracker/src/utilities/tokenMethods.js":"19","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signInForm.jsx":"20","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signOut.jsx":"21","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/protectedRoutes.jsx":"22","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/modal.jsx":"23"},{"size":587,"mtime":1619701501152,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":1231,"mtime":1621185800249,"results":"27","hashOfConfig":"25"},{"size":182,"mtime":1619184099086,"results":"28","hashOfConfig":"25"},{"size":4037,"mtime":1621265390040,"results":"29","hashOfConfig":"25"},{"size":5939,"mtime":1621699081302,"results":"30","hashOfConfig":"25"},{"size":6676,"mtime":1621272306259,"results":"31","hashOfConfig":"25"},{"size":549,"mtime":1612993503351,"results":"32","hashOfConfig":"33"},{"size":637,"mtime":1620487234788,"results":"34","hashOfConfig":"25"},{"size":896,"mtime":1621081742843,"results":"35","hashOfConfig":"25"},{"size":2656,"mtime":1621699300574,"results":"36","hashOfConfig":"25"},{"size":2903,"mtime":1621272188022,"results":"37","hashOfConfig":"25"},{"size":1501,"mtime":1621185247807,"results":"38","hashOfConfig":"25"},{"size":1456,"mtime":1621272431552,"results":"39","hashOfConfig":"25"},{"size":655,"mtime":1621263977325,"results":"40","hashOfConfig":"25"},{"size":1641,"mtime":1620991907213,"results":"41","hashOfConfig":"25"},{"size":5771,"mtime":1621274129181,"results":"42","hashOfConfig":"25"},{"size":599,"mtime":1621046810932,"results":"43","hashOfConfig":"25"},{"size":684,"mtime":1620669336040,"results":"44","hashOfConfig":"25"},{"size":4104,"mtime":1621269262187,"results":"45","hashOfConfig":"25"},{"size":1645,"mtime":1621275459609,"results":"46","hashOfConfig":"25"},{"size":633,"mtime":1621272388347,"results":"47","hashOfConfig":"25"},{"size":513,"mtime":1621257053178,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"cl0ss3",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1jpga",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js",[],["101","102"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx",["103"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Store/habitStore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { addDays, format } from \"date-fns\";\nimport RenderHabits from \"../components/RenderHabits\";\nimport TrackHabit from \"../components/TrackHabit\";\nimport {\n  fetchHabitData,\n  extractCategoriesAndRestructureHabits,\n  getTodayDate,\n  getWeekStartDate,\n  getWeekEndDate,\n  extractHabitNames,\n} from \"../utilities/utilitiesMethods\";\n\nconsole.log(\"************ In Home page Component \");\n\nexport default function Home() {\n  const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  const [isNextDisable, setNextDisable] = useState(false);\n\n  console.log(state);\n\n  useEffect(() => {\n    async function hydrateStoreState() {\n      dispatch({ type: \"SET_IS_LOADING\", payload: true });\n      const habitObj = await fetchHabitData();\n\n      console.log(habitObj);\n      dispatch({ type: \"SET_HABIT\", payload: habitObj });\n      const [\n        habitRestructure,\n        categories,\n      ] = await extractCategoriesAndRestructureHabits(habitObj);\n\n      dispatch({ type: \"SET_HABIT_RESTRUCTURE\", payload: habitRestructure });\n      dispatch({ type: \"SET_CATEGORY\", payload: categories });\n\n      const habitNameList = extractHabitNames(habitObj);\n      dispatch({ type: \"SET_HABIT_NAME_LIST\", payload: habitNameList });\n\n      const todayDate = await getTodayDate();\n      dispatch({ type: \"SET_CURRENT_DATE\", payload: todayDate });\n\n      const weekStartDate = await getWeekStartDate(new Date());\n      const weekEndDate = await getWeekEndDate(new Date());\n\n      dispatch({ type: \"SET_WEEK_START_DATE\", payload: weekStartDate });\n      dispatch({ type: \"SET_WEEK_END_DATE\", payload: weekEndDate });\n      dispatch({ type: \"SET_IS_LOADING\", payload: false });\n    }\n\n    hydrateStoreState();\n  }, [dispatch]);\n\n  // this fetch function is need to extracted and need to be reused\n\n  const changeDate = async (n) => {\n    // change the current date to prev or next date\n    let changedDate = addDays(state.currentDate, n);\n    dispatch({ type: \"SET_CURRENT_DATE\", payload: changedDate });\n    const newStartWeekDate = await getWeekStartDate(changedDate);\n\n    dispatch({ type: \"SET_WEEK_START_DATE\", payload: newStartWeekDate });\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"20px\" }}>\n        {format(state.currentDate, \"dd MMMM yyyy\")}\n      </div>\n\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(-7)}\n              >\n                Prev\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                style={{ margin: \"20px\" }}\n                disabled={isNextDisable}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => changeDate(7)}\n              >\n                Next\n              </Button>\n            </Grid>\n            <Grid xs={3} item></Grid>\n            <Grid item justify=\"flex-end\">\n              <TrackHabit />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            {state.isLoading ? (\n              <div\n                style={{ fontSize: \"4vw\" }}\n              >{`Loading Habits .... \\uD83E\\uDD2A`}</div>\n            ) : (\n              <RenderHabits />\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n    maxWidth: 600,\n    paddingLeft: 10,\n  },\n  checkbox: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n\n  spinIt: {\n    width: 10,\n    height: 10,\n  },\n});\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx",["104","105"],"import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Formik, useField } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport * as yup from \"yup\";\nimport habitService from \"../services/habitService\";\nimport Modal from \"./modal\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Form = () => {\n  const [habit, setHabit] = useState(null);\n  const classes = useStyles();\n  const [msg, setMsg] = useState(null);\n  const history = useHistory();\n  const [habitSaved, setHabitSaved] = useState(false);\n\n  const [showModal, setModal] = useState(false);\n\n  useEffect(() => {\n    if (habitSaved && !showModal) {\n      history.push(\"/\");\n    }\n  }, [habitSaved, history, showModal]);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n    setHabitSaved(true);\n  };\n\n  return (\n    <Card raised={true} className={classes.root}>\n      <CardHeader title=\"Add New Habit\" />\n      <CardContent>\n        <Formik\n          initialValues={{\n            category: \"General\",\n            habitName: \"\",\n            types: \"checkbox\",\n            color: \"black\",\n          }}\n          onSubmit={async (data) => {\n            try {\n              console.log(data);\n              setHabit(data);\n              const res = await saveHabit(data);\n              if (res.status === 200) {\n                console.log(res);\n                setMsg(res.msg);\n                toggleModal();\n              }\n            } catch (err) {\n              if (err.response.status === 400) {\n                console.log(err.response);\n\n                setMsg(err.response.data.error);\n                toggleModal();\n              }\n            }\n          }}\n          validationSchema={validationSchema}\n        >\n          {({ values, handleSubmit, handleChange, handleBlur }) => (\n            <form onSubmit={handleSubmit}>\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.category}\n                  select\n                  label=\"Category\"\n                  name=\"category\"\n                  options={categories}\n                />\n              </div>\n              <div className={classes.root}>\n                <MyTextField label=\"Habit Name\" name=\"habitName\" type=\"input\" />\n              </div>\n\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.types}\n                  select\n                  label=\"Types\"\n                  name=\"types\"\n                  options={types}\n                />\n              </div>\n\n              <div className={classes.root}>\n                <MySelectField\n                  value={values.color}\n                  select\n                  label=\"Color\"\n                  name=\"color\"\n                  options={colors}\n                />\n              </div>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Save Habit\n                </Button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </CardContent>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div>{msg}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </Card>\n  );\n};\n\nconst MyTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst MySelectField = ({ label, options, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      select\n      label={label}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    >\n      {options.map((option) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nconst validationSchema = yup.object({\n  category: yup.string().required().max(30),\n  habitName: yup.string().required().max(30),\n  types: yup.string().required(),\n  color: yup.string().required(),\n});\n\nconst saveHabit = async (habit) => {\n  //make a object of habit in order to send post\n\n  let habitData = {\n    category: habit.category,\n    habitName: habit.habitName,\n    inputType: habit.types,\n    color: habit.color,\n  };\n  console.log(\"in save habit\");\n\n  const response = await habitService.saveHabit(habitData);\n\n  return response.data;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    padding: 20,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst types = [\n  {\n    value: \"checkbox\",\n    label: \"Check Box\",\n  },\n  {\n    value: \"text\",\n    label: \"Text\",\n  },\n  {\n    value: \"number\",\n    label: \"Number\",\n  },\n];\n\nconst categories = [\n  {\n    value: \"General\",\n    label: \"General\",\n  },\n  {\n    value: \"Health/Nutrition\",\n    label: \"Health/Nutrition\",\n  },\n  {\n    value: \"Skills\",\n    label: \"Skills\",\n  },\n  {\n    value: \"Work/Study\",\n    label: \"Work/Study\",\n  },\n  {\n    value: \"House Hold\",\n    label: \"House Hold\",\n  },\n  {\n    value: \"Quit Habit\",\n    label: \"Quit Habit\",\n  },\n];\n\nconst colors = [\n  {\n    value: \"red\",\n    label: \"Red\",\n  },\n  {\n    value: \"blue\",\n    label: \"Blue\",\n  },\n  {\n    value: \"black\",\n    label: \"Black\",\n  },\n  {\n    value: \"green\",\n    label: \"Green\",\n  },\n];\n\nexport default Form;\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js",["106"],"/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nimport { tokenKey, apiUrl } from \"../config.json\";\nimport TokenService from \"../utilities/tokenMethods\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"An unexpected error occurred , logging the error\", error);\n  }\n  return Promise.reject(error);\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getToken(tokenKey);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      config.headers.Authorization = null;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/navBar.jsx",["107"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabits.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reducer/reducer.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/TrackHabit.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/Store/habitStore.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/utilities/utilitiesMethods.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signUpForm.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/authServices.js",["108"],"import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport tokenService from \"../utilities/tokenMethods\";\n\nexport async function signUp(data) {\n  try {\n    const response = await http.post(apiUrl + \"signUp\", data);\n    return Promise.resolve(response);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport async function signIn(data) {\n  return await http.post(apiUrl + \"signIn\", data);\n}\n\nexport async function signOut(tokenKey) {\n  // remove token from the local storage\n  tokenService.removeToken(tokenKey);\n}\n\nexport default {\n  signUp,\n  signIn,\n  signOut,\n};\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/utilities/tokenMethods.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signInForm.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/signOut.jsx",["109","110","111"],"import { signOut } from \"../../services/authServices\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { tokenKey } from \"../../config.json\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../Store/habitStore\";\nimport Modal from \"../modal\";\nimport { is } from \"date-fns/locale\";\n\nconst SignOut = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [showModal, setModal] = useState(false);\n  const [msg, setMsg] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TOKEN\", payload: \"\" });\n    dispatch({ type: \"SET_IS_AUTHENTICATED\", payload: false });\n    dispatch({ type: \"SET_USER_INFO\", payload: {} });\n    signOut(tokenKey);\n\n    if (!state.isAuthenticated) {\n      setModal(true);\n    }\n\n    let timeOut = setTimeout(() => {\n      history.push(\"/signIn\");\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [dispatch, history, state.isAuthenticated]);\n\n  return (\n    <div>\n      {showModal ? (\n        <Modal>\n          <Card raised={true}>\n            <CardContent>\n              <div style={{ margin: \"20px\" }}>{`Your are Signed Out`}</div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                OK\n              </Button>\n            </CardContent>\n          </Card>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SignOut;\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/auth/protectedRoutes.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/modal.jsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":23,"column":25,"nodeType":"118","messageId":"119","endLine":23,"endColumn":39},{"ruleId":"116","severity":1,"message":"120","line":11,"column":17,"nodeType":"118","messageId":"119","endLine":11,"endColumn":27},{"ruleId":"116","severity":1,"message":"121","line":18,"column":10,"nodeType":"118","messageId":"119","endLine":18,"endColumn":15},{"ruleId":"116","severity":1,"message":"122","line":3,"column":20,"nodeType":"118","messageId":"119","endLine":3,"endColumn":26},{"ruleId":"116","severity":1,"message":"123","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":23,"column":1,"nodeType":"126","endLine":27,"endColumn":3},{"ruleId":"116","severity":1,"message":"127","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":12},{"ruleId":"116","severity":1,"message":"128","line":14,"column":10,"nodeType":"118","messageId":"119","endLine":14,"endColumn":13},{"ruleId":"116","severity":1,"message":"129","line":14,"column":15,"nodeType":"118","messageId":"119","endLine":14,"endColumn":21},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'setNextDisable' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'habit' is assigned a value but never used.","'apiUrl' is defined but never used.","'Label' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'is' is defined but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]