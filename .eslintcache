[{"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js":"1","/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js":"2","/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js":"3","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx":"4","/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx":"5","/Users/parasvohra/Desktop/React Project/habit-tracker/src/context/HabitContext.jsx":"6","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx":"7","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx":"8","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx":"9","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js":"10","/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js":"11"},{"size":512,"mtime":1611785780185,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1130,"mtime":1612112822717,"results":"15","hashOfConfig":"13"},{"size":2183,"mtime":1612061701924,"results":"16","hashOfConfig":"13"},{"size":3585,"mtime":1613090275403,"results":"17","hashOfConfig":"13"},{"size":85,"mtime":1611877761129,"results":"18","hashOfConfig":"13"},{"size":4501,"mtime":1613101367897,"results":"19","hashOfConfig":"13"},{"size":905,"mtime":1613101543162,"results":"20","hashOfConfig":"13"},{"size":549,"mtime":1612993503351,"results":"21","hashOfConfig":"22"},{"size":282,"mtime":1613100219875,"results":"23","hashOfConfig":"13"},{"size":184,"mtime":1613099504994,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"akndl3",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1jpga",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/parasvohra/Desktop/React Project/habit-tracker/src/index.js",[],["49","50"],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/reportWebVitals.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/App.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/addHabit.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/pages/index.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/context/HabitContext.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/form.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderHabitsByCategory.jsx",["51"],"import { Checkbox, TableCell, TableRow } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst RenderHabitsByCategory = ({ category, habit }) => {\n  const [isCompleted, setIsCompleted] = useState(true);\n  //handle the habit status and get habits data from server\n\n  //also handle async call and\n\n  //handle habit update\n\n  //and also update the data base\n\n  return (\n    <>\n      <TableRow align=\"left\">{category}</TableRow>\n      {habit\n        ? habit.map((h, i) => {\n            return h.category === category ? (\n              <TableRow key={i}>\n                <TableCell align=\"center\">{h.habitName}</TableCell>\n                <TableCell align=\"center\">\n                  <Checkbox checked={isCompleted}></Checkbox>\n                </TableCell>\n              </TableRow>\n            ) : null;\n          })\n        : null}\n    </>\n  );\n};\n\nexport default RenderHabitsByCategory;\n","/Users/parasvohra/Desktop/React Project/habit-tracker/src/components/RenderModel.jsx",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/habitService.js",[],"/Users/parasvohra/Desktop/React Project/habit-tracker/src/services/httpService.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":5,"column":23,"nodeType":"58","messageId":"59","endLine":5,"endColumn":37},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'setIsCompleted' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]